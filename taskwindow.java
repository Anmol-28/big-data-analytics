/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project1;

import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author anmol
 */
public class taskwindow extends javax.swing.JFrame {

    /**
     * Creates new form taskwindow
     */
    public taskwindow() {
        initComponents();
        jTable1.setAutoResizeMode( jTable1.AUTO_RESIZE_OFF );
        showDataLabel.setVisible(false);
        whichGuest.setText(Project1.globalUsername);
    }
    int position = 0;
    public String[] getImages(){
        File file = new File(getClass().getResource("/Images/").getFile());
        String[] imageList = file.list();
        return imageList;
    }
    public void showImage(int index){
        String[] imageList = getImages();
        String imageName = imageList[index];
        ImageIcon icon = new ImageIcon(getClass().getResource("/Images/"+ imageName));
        Image image = icon.getImage().getScaledInstance(graphLabel.getWidth(), graphLabel.getHeight(), Image.SCALE_SMOOTH);
        graphLabel.setIcon(new ImageIcon(image));
    }
     public static String total_matches_by_city = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bigPanel = new javax.swing.JPanel();
        mainTabPane = new javax.swing.JTabbedPane();
        importDataPanel = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        dataOverviewPanel = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        showDataLabel = new javax.swing.JTextField();
        dataModelingPanel = new javax.swing.JPanel();
        dataModelingScrollPane = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        sessionRadio = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cityRadio = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        teamRadio = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        tossRadio = new javax.swing.JRadioButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        matchStatBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel13 = new javax.swing.JPanel();
        MatchesPlayBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        matchesPlayed = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        tossesWonBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tossesWon = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        iplChampBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        iplChampion = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        bigVictoryBtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        biggestVictories = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        winnerRun = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        winnerRunBtn = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        WinnerWicketBtn = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        winnerWicket = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        playerOfMatchBtn = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        playerOfMatch = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        batsmanSelector1 = new javax.swing.JComboBox<>();
        batsmanSelectorBtn1 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jPanel19 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane11 = new javax.swing.JScrollPane();
        batsmanResult = new javax.swing.JTextArea();
        jPanel15 = new javax.swing.JPanel();
        jTextField21 = new javax.swing.JTextField();
        jComboBox12 = new javax.swing.JComboBox<>();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jScrollPane23 = new javax.swing.JScrollPane();
        jTextArea9 = new javax.swing.JTextArea();
        jPanel16 = new javax.swing.JPanel();
        jTextField22 = new javax.swing.JTextField();
        jComboBox13 = new javax.swing.JComboBox<>();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jScrollPane24 = new javax.swing.JScrollPane();
        jTextArea10 = new javax.swing.JTextArea();
        jPanel17 = new javax.swing.JPanel();
        jTextField23 = new javax.swing.JTextField();
        jComboBox14 = new javax.swing.JComboBox<>();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jScrollPane25 = new javax.swing.JScrollPane();
        jTextArea11 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        bowlingAnalysisScrollPanel = new javax.swing.JScrollPane();
        jPanel20 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        concededRunsBtn = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField3 = new javax.swing.JTextField();
        concededRunsVenueBtn = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField4 = new javax.swing.JTextField();
        concededRunsVenueBtn1 = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jTextField5 = new javax.swing.JTextField();
        concededRunsVenueBtn2 = new javax.swing.JButton();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jTextField6 = new javax.swing.JTextField();
        concededRunsVenueBtn3 = new javax.swing.JButton();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jTextField7 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        bowlRdBtn = new javax.swing.JRadioButton();
        jComboBox_bwl_season = new javax.swing.JComboBox<>();
        jTextField9 = new javax.swing.JTextField();
        bowlRdBtn1 = new javax.swing.JRadioButton();
        jComboBox6 = new javax.swing.JComboBox<>();
        jTextField10 = new javax.swing.JTextField();
        bowlRdBtn2 = new javax.swing.JRadioButton();
        jComboBox7 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jTextField11 = new javax.swing.JTextField();
        bowlRdBtn3 = new javax.swing.JRadioButton();
        jComboBox8 = new javax.swing.JComboBox<>();
        jTextField12 = new javax.swing.JTextField();
        bowlRdBtn4 = new javax.swing.JRadioButton();
        jComboBox9 = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jTextField13 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jTextField14 = new javax.swing.JTextField();
        jRadioButton3 = new javax.swing.JRadioButton();
        jComboBox10 = new javax.swing.JComboBox<>();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jRadioButton5 = new javax.swing.JRadioButton();
        jComboBox11 = new javax.swing.JComboBox<>();
        domApply = new javax.swing.JButton();
        domApply1 = new javax.swing.JButton();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jTextField17 = new javax.swing.JTextField();
        teamPrRd1 = new javax.swing.JRadioButton();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jComboYear = new javax.swing.JComboBox<>();
        teamPrRd2 = new javax.swing.JRadioButton();
        jComboTeam = new javax.swing.JComboBox<>();
        jTextField20 = new javax.swing.JTextField();
        jScrollPane19 = new javax.swing.JScrollPane();
        teamArea = new javax.swing.JTextArea();
        jButton13 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane46 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        jTextField24 = new javax.swing.JTextField();
        jScrollPane26 = new javax.swing.JScrollPane();
        jTextArea12 = new javax.swing.JTextArea();
        jScrollPane47 = new javax.swing.JScrollPane();
        jTextArea32 = new javax.swing.JTextArea();
        jTextField25 = new javax.swing.JTextField();
        jScrollPane27 = new javax.swing.JScrollPane();
        jTextArea13 = new javax.swing.JTextArea();
        jScrollPane48 = new javax.swing.JScrollPane();
        jTextArea33 = new javax.swing.JTextArea();
        jScrollPane28 = new javax.swing.JScrollPane();
        jTextArea14 = new javax.swing.JTextArea();
        jScrollPane49 = new javax.swing.JScrollPane();
        jTextArea34 = new javax.swing.JTextArea();
        jTextField26 = new javax.swing.JTextField();
        jScrollPane29 = new javax.swing.JScrollPane();
        jTextArea15 = new javax.swing.JTextArea();
        jScrollPane50 = new javax.swing.JScrollPane();
        jTextArea35 = new javax.swing.JTextArea();
        jTextField27 = new javax.swing.JTextField();
        jTextField28 = new javax.swing.JTextField();
        jScrollPane30 = new javax.swing.JScrollPane();
        jTextArea16 = new javax.swing.JTextArea();
        jScrollPane51 = new javax.swing.JScrollPane();
        jTextArea36 = new javax.swing.JTextArea();
        jTextField29 = new javax.swing.JTextField();
        jScrollPane31 = new javax.swing.JScrollPane();
        jTextArea17 = new javax.swing.JTextArea();
        jScrollPane52 = new javax.swing.JScrollPane();
        jTextArea37 = new javax.swing.JTextArea();
        jScrollPane32 = new javax.swing.JScrollPane();
        jTextArea18 = new javax.swing.JTextArea();
        jScrollPane53 = new javax.swing.JScrollPane();
        jTextArea38 = new javax.swing.JTextArea();
        jTextField30 = new javax.swing.JTextField();
        jScrollPane33 = new javax.swing.JScrollPane();
        jTextArea19 = new javax.swing.JTextArea();
        jScrollPane54 = new javax.swing.JScrollPane();
        jTextArea39 = new javax.swing.JTextArea();
        jTextField31 = new javax.swing.JTextField();
        jTextField32 = new javax.swing.JTextField();
        jScrollPane34 = new javax.swing.JScrollPane();
        jTextArea20 = new javax.swing.JTextArea();
        jScrollPane55 = new javax.swing.JScrollPane();
        jTextArea40 = new javax.swing.JTextArea();
        jTextField33 = new javax.swing.JTextField();
        jScrollPane35 = new javax.swing.JScrollPane();
        jTextArea21 = new javax.swing.JTextArea();
        jScrollPane56 = new javax.swing.JScrollPane();
        jTextArea41 = new javax.swing.JTextArea();
        jScrollPane36 = new javax.swing.JScrollPane();
        jTextArea22 = new javax.swing.JTextArea();
        jScrollPane57 = new javax.swing.JScrollPane();
        jTextArea42 = new javax.swing.JTextArea();
        jTextField34 = new javax.swing.JTextField();
        jScrollPane37 = new javax.swing.JScrollPane();
        jTextArea23 = new javax.swing.JTextArea();
        jScrollPane58 = new javax.swing.JScrollPane();
        jTextArea43 = new javax.swing.JTextArea();
        jScrollPane38 = new javax.swing.JScrollPane();
        jTextArea24 = new javax.swing.JTextArea();
        jScrollPane59 = new javax.swing.JScrollPane();
        jTextArea44 = new javax.swing.JTextArea();
        jScrollPane39 = new javax.swing.JScrollPane();
        jTextArea25 = new javax.swing.JTextArea();
        jScrollPane60 = new javax.swing.JScrollPane();
        jTextArea45 = new javax.swing.JTextArea();
        jScrollPane40 = new javax.swing.JScrollPane();
        jTextArea26 = new javax.swing.JTextArea();
        jScrollPane61 = new javax.swing.JScrollPane();
        jTextArea46 = new javax.swing.JTextArea();
        jScrollPane41 = new javax.swing.JScrollPane();
        jTextArea27 = new javax.swing.JTextArea();
        jScrollPane62 = new javax.swing.JScrollPane();
        jTextArea47 = new javax.swing.JTextArea();
        jScrollPane42 = new javax.swing.JScrollPane();
        jTextArea28 = new javax.swing.JTextArea();
        jScrollPane63 = new javax.swing.JScrollPane();
        jTextArea48 = new javax.swing.JTextArea();
        jScrollPane43 = new javax.swing.JScrollPane();
        jTextArea29 = new javax.swing.JTextArea();
        jScrollPane64 = new javax.swing.JScrollPane();
        jTextArea49 = new javax.swing.JTextArea();
        jScrollPane44 = new javax.swing.JScrollPane();
        jTextArea30 = new javax.swing.JTextArea();
        jScrollPane65 = new javax.swing.JScrollPane();
        jTextArea50 = new javax.swing.JTextArea();
        jScrollPane45 = new javax.swing.JScrollPane();
        jTextArea31 = new javax.swing.JTextArea();
        jScrollPane66 = new javax.swing.JScrollPane();
        jTextArea51 = new javax.swing.JTextArea();
        jTextField35 = new javax.swing.JTextField();
        jTextField36 = new javax.swing.JTextField();
        jTextField37 = new javax.swing.JTextField();
        jTextField38 = new javax.swing.JTextField();
        jTextField39 = new javax.swing.JTextField();
        jTextField40 = new javax.swing.JTextField();
        jTextField41 = new javax.swing.JTextField();
        jTextField42 = new javax.swing.JTextField();
        jTextField43 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        graphsPanel = new javax.swing.JPanel();
        graphLabel = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        docPanel = new javax.swing.JPanel();
        jScrollPane20 = new javax.swing.JScrollPane();
        docTextArea = new javax.swing.JTextArea();
        helpPanel = new javax.swing.JPanel();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTextArea8 = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        themeSelector = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        themeBtn = new javax.swing.JButton();
        maxBtn = new javax.swing.JButton();
        minBtn = new javax.swing.JButton();
        whichGuest = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        bigPanel.setBackground(new java.awt.Color(250, 250, 250));

        mainTabPane.setBackground(new java.awt.Color(255, 255, 255));

        importDataPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel10.setBackground(new java.awt.Color(33, 146, 240));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton1.setText("IMPORT NEW DATA");
        jButton1.setBorder(null);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        jLabel26.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/imagePackage/ipl_1.png"))); // NOI18N

        javax.swing.GroupLayout importDataPanelLayout = new javax.swing.GroupLayout(importDataPanel);
        importDataPanel.setLayout(importDataPanelLayout);
        importDataPanelLayout.setHorizontalGroup(
            importDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addGap(210, 210, 210))
        );
        importDataPanelLayout.setVerticalGroup(
            importDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(importDataPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel26)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainTabPane.addTab("Import Data", importDataPanel);

        dataOverviewPanel.setBackground(new java.awt.Color(255, 255, 255));

        jButton2.setBackground(new java.awt.Color(33, 146, 240));
        jButton2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Visualize Raw Data");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jTable1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        showDataLabel.setEditable(false);
        showDataLabel.setBackground(new java.awt.Color(255, 255, 255));
        showDataLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        showDataLabel.setForeground(new java.awt.Color(51, 51, 51));
        showDataLabel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        showDataLabel.setText("Showing first 30 rows of raw data");
        showDataLabel.setBorder(null);
        showDataLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout dataOverviewPanelLayout = new javax.swing.GroupLayout(dataOverviewPanel);
        dataOverviewPanel.setLayout(dataOverviewPanelLayout);
        dataOverviewPanelLayout.setHorizontalGroup(
            dataOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataOverviewPanelLayout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(showDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 343, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(273, 273, 273))
        );
        dataOverviewPanelLayout.setVerticalGroup(
            dataOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataOverviewPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(dataOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showDataLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
        );

        mainTabPane.addTab("Data Overview", dataOverviewPanel);

        dataModelingPanel.setBackground(new java.awt.Color(255, 255, 255));
        dataModelingPanel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        dataModelingScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        dataModelingScrollPane.setBorder(null);
        dataModelingScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        dataModelingScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        dataModelingScrollPane.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Attributes of Analysis");

        sessionRadio.setBackground(new java.awt.Color(33, 146, 240));
        sessionRadio.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        sessionRadio.setForeground(new java.awt.Color(255, 255, 255));
        sessionRadio.setBorder(null);
        sessionRadio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sessionRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionRadioActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Session Wise");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Team Wise");

        cityRadio.setBackground(new java.awt.Color(33, 146, 240));
        cityRadio.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        cityRadio.setForeground(new java.awt.Color(255, 255, 255));
        cityRadio.setBorder(null);
        cityRadio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cityRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityRadioActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("City Wise");

        teamRadio.setBackground(new java.awt.Color(33, 146, 240));
        teamRadio.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        teamRadio.setForeground(new java.awt.Color(255, 255, 255));
        teamRadio.setBorder(null);
        teamRadio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        teamRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamRadioActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Toss Won by");

        tossRadio.setBackground(new java.awt.Color(33, 146, 240));
        tossRadio.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tossRadio.setForeground(new java.awt.Color(255, 255, 255));
        tossRadio.setBorder(null);
        tossRadio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tossRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tossRadioActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(51, 51, 51));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hyderabad", "Pune", "Rajkot", "Indore", "Bangalore", "Mumbai", "Kolkata", "Delhi", "Chandigarh", "Kanpur", "Jaipur", "Chennai", "CapeTown", "PortElizabeth", "Durban", "Centurion", "EastLondon", "Johannesburg", "Kimberley", "Bloemfontein", "Ahmedabad", "Cuttack", "Nagpur", "Dharamsala", "Kochi", "Visakhapatnam", "Raipur", "Ranchi", "AbuDhabi", "Sharjah" }));
        jComboBox2.setBorder(null);
        jComboBox2.setEnabled(false);

        jComboBox3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jComboBox3.setForeground(new java.awt.Color(51, 51, 51));
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Royal Challengers Bangalore", "Rising Pune Supergiant", "Kolkata Knight Riders", "Kings XI Punjab", "Sunrisers Hyderabad", "Mumbai Indians", "Gujarat Lions", "Delhi Daredevils", "Chennai Super Kings", "Rajasthan Royals", "Deccan Chargers", "Kochi Tuskers Kerala", "Pune Warriors", "Rising Pune Supergiants" }));
        jComboBox3.setBorder(null);
        jComboBox3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox3.setEnabled(false);

        jComboBox4.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jComboBox4.setForeground(new java.awt.Color(51, 51, 51));
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Royal Challengers Bangalore", "Rising Pune Supergiant", "Kolkata Knight Riders", "Kings XI Punjab", "Sunrisers Hyderabad", "Mumbai Indians", "Gujarat Lions", "Delhi Daredevils", "Chennai Super Kings", "Rajasthan Royals", "Deccan Chargers", "Kochi Tuskers Kerala", "Pune Warriors", "Rising Pune Supergiants" }));
        jComboBox4.setBorder(null);
        jComboBox4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox4.setEnabled(false);

        jComboBox5.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" }));
        jComboBox5.setBorder(null);
        jComboBox5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox5.setEnabled(false);

        matchStatBtn.setBackground(new java.awt.Color(33, 146, 240));
        matchStatBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        matchStatBtn.setForeground(new java.awt.Color(255, 255, 255));
        matchStatBtn.setText("GO");
        matchStatBtn.setBorder(null);
        matchStatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matchStatBtnActionPerformed(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        MatchesPlayBtn.setBackground(new java.awt.Color(33, 146, 240));
        MatchesPlayBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        MatchesPlayBtn.setForeground(new java.awt.Color(255, 255, 255));
        MatchesPlayBtn.setText("SUBMIT");
        MatchesPlayBtn.setBorder(null);
        MatchesPlayBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MatchesPlayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MatchesPlayBtnActionPerformed(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel11.setText("Total Matches Played");

        matchesPlayed.setColumns(20);
        matchesPlayed.setRows(5);
        jScrollPane3.setViewportView(matchesPlayed);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel12.setText("Total Tosses won");

        tossesWonBtn.setBackground(new java.awt.Color(33, 146, 240));
        tossesWonBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tossesWonBtn.setForeground(new java.awt.Color(255, 255, 255));
        tossesWonBtn.setText("SUBMIT");
        tossesWonBtn.setBorder(null);
        tossesWonBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tossesWonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tossesWonBtnActionPerformed(evt);
            }
        });

        tossesWon.setColumns(20);
        tossesWon.setRows(5);
        jScrollPane4.setViewportView(tossesWon);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel13.setText("IPL Champion");

        iplChampBtn.setBackground(new java.awt.Color(33, 146, 240));
        iplChampBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        iplChampBtn.setForeground(new java.awt.Color(255, 255, 255));
        iplChampBtn.setText("SUBMIT");
        iplChampBtn.setBorder(null);
        iplChampBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iplChampBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iplChampBtnActionPerformed(evt);
            }
        });

        iplChampion.setColumns(20);
        iplChampion.setRows(5);
        jScrollPane5.setViewportView(iplChampion);

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel14.setText("Biggest Victories by Season");

        bigVictoryBtn.setBackground(new java.awt.Color(33, 146, 240));
        bigVictoryBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        bigVictoryBtn.setForeground(new java.awt.Color(255, 255, 255));
        bigVictoryBtn.setText("SUBMIT");
        bigVictoryBtn.setBorder(null);
        bigVictoryBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bigVictoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bigVictoryBtnActionPerformed(evt);
            }
        });

        biggestVictories.setColumns(20);
        biggestVictories.setRows(5);
        jScrollPane6.setViewportView(biggestVictories);

        winnerRun.setColumns(20);
        winnerRun.setRows(5);
        jScrollPane7.setViewportView(winnerRun);

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel15.setText("Winners by highest runs margin");

        winnerRunBtn.setBackground(new java.awt.Color(33, 146, 240));
        winnerRunBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        winnerRunBtn.setForeground(new java.awt.Color(255, 255, 255));
        winnerRunBtn.setText("SUBMIT");
        winnerRunBtn.setBorder(null);
        winnerRunBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        winnerRunBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winnerRunBtnActionPerformed(evt);
            }
        });

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel16.setText("Winners by most wickets");

        WinnerWicketBtn.setBackground(new java.awt.Color(33, 146, 240));
        WinnerWicketBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        WinnerWicketBtn.setForeground(new java.awt.Color(255, 255, 255));
        WinnerWicketBtn.setText("SUBMIT");
        WinnerWicketBtn.setBorder(null);
        WinnerWicketBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        WinnerWicketBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WinnerWicketBtnActionPerformed(evt);
            }
        });

        winnerWicket.setColumns(20);
        winnerWicket.setRows(5);
        jScrollPane8.setViewportView(winnerWicket);

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel17.setText("Most awarded player of match");

        playerOfMatchBtn.setBackground(new java.awt.Color(33, 146, 240));
        playerOfMatchBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        playerOfMatchBtn.setForeground(new java.awt.Color(255, 255, 255));
        playerOfMatchBtn.setText("SUBMIT");
        playerOfMatchBtn.setBorder(null);
        playerOfMatchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playerOfMatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerOfMatchBtnActionPerformed(evt);
            }
        });

        playerOfMatch.setColumns(20);
        playerOfMatch.setRows(5);
        jScrollPane9.setViewportView(playerOfMatch);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(151, 151, 151)
                                .addComponent(winnerRunBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(154, 154, 154)
                                    .addComponent(MatchesPlayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel13Layout.createSequentialGroup()
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(152, 152, 152)
                                    .addComponent(bigVictoryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel13Layout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(151, 151, 151)
                                    .addComponent(tossesWonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel13Layout.createSequentialGroup()
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(151, 151, 151)
                                    .addComponent(iplChampBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(WinnerWicketBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(playerOfMatchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(79, 79, 79))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(MatchesPlayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(tossesWonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(iplChampBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(bigVictoryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addComponent(winnerRunBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(WinnerWicketBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(playerOfMatchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel13);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(sessionRadio)
                                .addGap(26, 26, 26)
                                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(cityRadio)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(teamRadio)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(tossRadio)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(matchStatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(1099, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sessionRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cityRadio, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(teamRadio))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tossRadio, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(35, 35, 35)
                                .addComponent(matchStatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(jLabel10))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1420, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Match Statistics", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel18.setText("CHOOSE PLAYER");

        batsmanSelector1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        batsmanSelector1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No selection","A Ashish Reddy","A Chandila","A Chopra","A Choudhary","A Flintoff","A Kumble","A Mishra","A Mithun","A Mukund","A Nehra","A Singh","A Symonds","A Uniyal","A Zampa","AA Bilakhia","AA Chavan","AA Jhunjhunwala","AA Noffke","AB Agarkar","AB Barath","AB de Villiers","AB Dinda","AB McDonald","Abdur Razzak","AC Blizzard","AC Gilchrist","AC Thomas","AC Voges","AD Mascarenhas","AD Mathews","AD Nath","AD Russell","AF Milne","AG Murtaza","AG Paunikar","AJ Finch","AJ Tye","AL Menaria","AM Nayar","AM Rahane","AN Ahmed","AN Ghosh","Anirudh Singh","Ankit Sharma","Ankit Soni","Anureet Singh","AP Dole","AP Majumdar","AP Tare","AR Bawne","AR Patel","AS Rajpoot","AS Raut","AS Yadav","AT Rayudu","AUK Pathan","Azhar Mahmood","B Akhil","B Chipli","B Kumar","B Laughlin","B Lee","B Sumanth","BA Bhatt","BA Stokes","Basil Thampi","BAW Mendis","BB McCullum","BB Samantray","BB Sran","BCJ Cutting","BE Hendricks","Bipul Sharma","BJ Haddin","BJ Hodge","BJ Rohrer","BMAJ Mendis","BR Dunk","C de Grandhomme","C Madan","C Munro","C Nanda","CA Ingram","CA Lynn","CA Pujara","CH Gayle","CH Morris","CJ Anderson","CJ Ferguson","CJ Jordan","CJ McKay","CK Kapugedera","CK Langeveldt","CL White","CM Gautam","CR Brathwaite","CR Woakes","CRD Fernando","D du Preez","D Kalyankrishna","D Salunkhe","D Wiese","DA Miller","DA Warner","DAJ Bracewell","DB Das","DB Ravi Teja","DE Bollinger","DH Yagnik","DJ Bravo","DJ Harris","DJ Hooda","DJ Hussey","DJ Jacobs","DJ Muthuswami","DJ Thornely","DJG Sammy","DL Chahar","DL Vettori","DM Bravo","DNT Zoysa","DP Nannes","DP Vijaykumar","DPMD Jayawardene","DR Martyn","DR Smith","DS Kulkarni","DS Lehmann","DT Christian","DT Patil","DW Steyn","EJG Morgan","ER Dwivedi","F Behardien","F du Plessis","FH Edwards","FY Fazal","G Gambhir","GB Hogg","GC Smith","GD McGrath","GH Vihari","GJ Bailey","GJ Maxwell","GR Napier","Gurkeerat Singh","H Das","Harbhajan Singh","Harmeet Singh","Harpreet Singh","HH Gibbs","HH Pandya","HM Amla","HV Patel","I Malhotra","I Sharma","IC Pandey","IK Pathan","Imran Tahir","Iqbal Abdulla","IR Jaggi","Ishan Kishan","J Arunkumar","J Botha","J Suchith","J Syed Mohammad","J Theron","J Yadav","JA Morkel","Jaskaran Singh","JC Buttler","JD Ryder","JD Unadkat","JDP Oram","JDS Neesham","JE Taylor","JEC Franklin","JH Kallis","JJ Bumrah","JJ Roy","JJ van der Wath","JM Kemp","JO Holder","Joginder Sharma","JP Duminy","JP Faulkner","JR Hopes","K Goel","K Rabada","K Upadhyay","KA Pollard","KAJ Roach","Kamran Akmal","Kamran Khan","Karanveer Singh","KB Arun Karthik","KC Cariappa","KC Sangakkara","KD Karthik","KH Pandya","KJ Abbott","KK Cooper","KK Nair","KL Rahul","KM Jadhav","KMDN Kulasekara","KP Appanna","KP Pietersen","KS Williamson","Kuldeep Yadav","KV Sharma","KW Richardson","L Ablish","L Balaji","L Ronchi","LA Carseldine","LA Pomersbach","LH Ferguson","LJ Wright","LMP Simmons","LPC Silva","LR Shukla","LRPL Taylor","M Ashwin","M de Lange","M Kaif","M Kartik","M Klinger","M Manhas","M Morkel","M Muralitharan","M Ntini","M Rawat","M Vijay","M Vohra","MA Agarwal","MA Khote","MA Starc","Mandeep Singh","Mashrafe Mortaza","MC Henriques","MC Juneja","MD Mishra","MDKJ Perera","MEK Hussey","MF Maharoof","MG Johnson","Misbah-ul-Haq","MJ Clarke","MJ Guptill","MJ Lumb","MJ McClenaghan","MK Pandey","MK Tiwary","ML Hayden","MM Patel","MM Sharma","MN Samuels","MN van Wyk","Mohammad Ashraful","Mohammad Asif","Mohammad Hafeez","Mohammad Nabi","Mohammed Shami","MP Stoinis","MR Marsh","MS Bisla","MS Dhoni","MS Gony","MS Wade","MV Boucher","N Rana","N Saini","ND Doshi","Niraj Patel","NJ Maddinson","NJ Rimmington","NL McCullum","NLTC Perera","NM Coulter-Nile","NS Naik","NV Ojha","OA Shah","P Awana","P Dogra","P Kumar","P Negi","P Parameswaran","P Sahu","PA Patel","PA Reddy","Pankaj Singh","Parvez Rasool","PC Valthaty","PD Collingwood","PJ Cummins","PJ Sangwan","PM Sarvesh Kumar","PP Chawla","PP Ojha","PR Shah","PSP Handscomb","PV Tambe","Q de Kock","R Ashwin","R Bhatia","R Bishnoi","R Dhawan","R Dravid","R McLaren","R Ninan","R Rampaul","R Sathish","R Sharma","R Shukla","R Tewatia","R Vinay Kumar","RA Jadeja","RA Tripathi","Rashid Khan","RD Chahar","RE Levi","RE van der Merwe","RG More","RG Sharma","RJ Harris","RJ Peterson","RJ Quiney","RN ten Doeschate","RP Singh","RR Bhatkal","RR Pant","RR Powar","RR Raje","RR Rossouw","RR Sarwan","RS Bopara","RS Gavaskar","RS Sodhi","RT Ponting","RV Gomez","RV Uthappa","S Anirudha","S Aravind","S Badree","S Badrinath","S Chanderpaul","S Dhawan","S Gopal","S Kaul","S Kaushik","S Ladda","S Nadeem","S Narwal","S Rana","S Randiv","S Sohal","S Sreesanth","S Sriram","S Tyagi","S Vidyut","SA Abbott","SA Asnodkar","SA Yadav","Sachin Baby","Salman Butt","Sandeep Sharma","SB Bangar","SB Jakati","SB Joshi","SB Styris","SB Wagh","SC Ganguly","SD Chitnis","SE Bond","SE Marsh","Shahid Afridi","Shakib Al Hasan","Shivam Sharma","Shoaib Ahmed","Shoaib Akhtar","Shoaib Malik","SJ Srivastava","SK Raina","SK Trivedi","SK Warne","SL Malinga","SM Harwood","SM Katich","SM Pollock","SMSM Senanayake","SN Khan","SN Thakur","Sohail Tanvir","SP Fleming","SP Goswami","SP Jackson","SP Narine","SPD Smith","SR Tendulkar","SR Watson","SS Iyer","SS Shaikh","SS Tiwary","ST Jayasuriya","STR Binny","Sunny Gupta","Sunny Singh","SV Samson","SW Billings","SW Tait","Swapnil Singh","T Henderson","T Kohli","T Taibu","T Thushara","TA Boult","TD Paine","TG Southee","TL Suman","TM Dilshan","TM Head","TM Srivastava","TR Birt","TS Mills","U Kaul","UA Birla","UBT Chand","Umar Gul","UT Khawaja","UT Yadav","V Kohli","V Pratap Singh","V Sehwag","V Shankar","VH Zol","Vishnu Vinod","VR Aaron","VRV Singh","VS Malik","VS Yeligati","VVS Laxman","VY Mahesh","W Jaffer","WA Mota","Washington Sundar","WD Parnell","WP Saha","WPUJC Vaas","X Thalaivan Sargunam","Y Gnaneswara Rao","Y Nagar","Y Venugopal Rao","YA Abdulla","Yashpal Singh","YK Pathan","Younis Khan","YS Chahal","Yuvraj Singh","YV Takawale","Z Khan" }));

        batsmanSelectorBtn1.setBackground(new java.awt.Color(33, 146, 240));
        batsmanSelectorBtn1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        batsmanSelectorBtn1.setForeground(new java.awt.Color(255, 255, 255));
        batsmanSelectorBtn1.setText("SUBMIT");
        batsmanSelectorBtn1.setBorder(null);
        batsmanSelectorBtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        batsmanSelectorBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batsmanSelectorBtn1ActionPerformed(evt);
            }
        });

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setText("Total Man of the Match awards");

        jButton4.setBackground(new java.awt.Color(33, 146, 240));
        jButton4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("SUBMIT");
        jButton4.setBorder(null);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(33, 146, 240));
        jButton5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("SUBMIT");
        jButton5.setBorder(null);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Total Runs");

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setText("Best Score");

        jButton7.setBackground(new java.awt.Color(33, 146, 240));
        jButton7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("SUBMIT");
        jButton7.setBorder(null);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(33, 146, 240));
        jButton8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("SUBMIT");
        jButton8.setBorder(null);
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("Total Matches Played");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel19Layout.createSequentialGroup()
                            .addGap(48, 48, 48)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(700, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jScrollPane10.setViewportView(jPanel19);

        jLabel19.setFont(new java.awt.Font("Calibri", 3, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(33, 146, 240));
        jLabel19.setText("CHOOSE THE ANALYSIS FIELD");

        jSeparator1.setForeground(new java.awt.Color(33, 146, 240));

        batsmanResult.setColumns(20);
        batsmanResult.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        batsmanResult.setForeground(new java.awt.Color(51, 51, 51));
        batsmanResult.setRows(5);
        batsmanResult.setText("                                                    Analysis Output\n\n\n");
        batsmanResult.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        batsmanResult.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane11.setViewportView(batsmanResult);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(batsmanSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(batsmanSelectorBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112)
                .addComponent(jLabel19)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batsmanSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batsmanSelectorBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(1, 1, 1)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("By Player", jPanel14);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        jTextField21.setEditable(false);
        jTextField21.setBackground(new java.awt.Color(33, 146, 240));
        jTextField21.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField21.setForeground(new java.awt.Color(255, 255, 255));
        jTextField21.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField21.setText("SELECT A TEAM");
        jTextField21.setBorder(null);

        jComboBox12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chennai Super Kings", "Deccan Chargers", "Delhi Daredevils", "Gujarat Lions", "Kings XI Punjab", "Kochi Tuskers Kerala", "Kolkata Knight Riders", "Mumbai Indians", "Pune Warriors", "Rajasthan Royals", "Rising Pune Supergiant", "Rising Pune Supergiants", "Royal Challengers Bangalore", "Sunrisers Hyderabad" }));
        jComboBox12.setBorder(null);

        jButton14.setBackground(new java.awt.Color(33, 146, 240));
        jButton14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setText("ALL VICTORIES");
        jButton14.setBorder(null);
        jButton14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setBackground(new java.awt.Color(33, 146, 240));
        jButton15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 255, 255));
        jButton15.setText("BEST SCORES");
        jButton15.setBorder(null);
        jButton15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setBackground(new java.awt.Color(33, 146, 240));
        jButton16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton16.setForeground(new java.awt.Color(255, 255, 255));
        jButton16.setText("LOST MATCHES");
        jButton16.setBorder(null);
        jButton16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jTextArea9.setEditable(false);
        jTextArea9.setBackground(new java.awt.Color(250, 250, 250));
        jTextArea9.setColumns(20);
        jTextArea9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea9.setRows(5);
        jScrollPane23.setViewportView(jTextArea9);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 1059, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("By Team", jPanel15);

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setForeground(new java.awt.Color(255, 255, 255));

        jTextField22.setEditable(false);
        jTextField22.setBackground(new java.awt.Color(33, 146, 240));
        jTextField22.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField22.setForeground(new java.awt.Color(255, 255, 255));
        jTextField22.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField22.setText("SELECT A CITY");
        jTextField22.setBorder(null);

        jComboBox13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox13.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hyderabad", "Pune", "Rajkot", "Indore", "Bangalore", "Mumbai", "Kolkata", "Delhi", "Chandigarh", "Kanpur", "Jaipur", "Chennai", "CapeTown", "PortElizabeth", "Durban", "Centurion", "EastLondon", "Johannesburg", "Kimberley", "Bloemfontein", "Ahmedabad", "Cuttack", "Nagpur", "Dharamsala", "Kochi", "Visakhapatnam", "Raipur", "Ranchi", "AbuDhabi", "Sharjah" }));
        jComboBox13.setBorder(null);

        jButton17.setBackground(new java.awt.Color(33, 146, 240));
        jButton17.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton17.setForeground(new java.awt.Color(255, 255, 255));
        jButton17.setText("ALL VICTORIES");
        jButton17.setBorder(null);
        jButton17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setBackground(new java.awt.Color(33, 146, 240));
        jButton18.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton18.setForeground(new java.awt.Color(255, 255, 255));
        jButton18.setText("BEST SCORES");
        jButton18.setBorder(null);
        jButton18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setBackground(new java.awt.Color(33, 146, 240));
        jButton19.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton19.setForeground(new java.awt.Color(255, 255, 255));
        jButton19.setText("LOST MATCHES");
        jButton19.setBorder(null);
        jButton19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jTextArea10.setEditable(false);
        jTextArea10.setBackground(new java.awt.Color(250, 250, 250));
        jTextArea10.setColumns(20);
        jTextArea10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea10.setRows(5);
        jTextArea10.setBorder(null);
        jScrollPane24.setViewportView(jTextArea10);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 1093, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1051, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1432, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("By Location", jPanel16);

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jTextField23.setEditable(false);
        jTextField23.setBackground(new java.awt.Color(33, 146, 240));
        jTextField23.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField23.setForeground(new java.awt.Color(255, 255, 255));
        jTextField23.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField23.setText("SELECT A SEASON");
        jTextField23.setBorder(null);

        jComboBox14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox14.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" }));

        jButton20.setBackground(new java.awt.Color(33, 146, 240));
        jButton20.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton20.setForeground(new java.awt.Color(255, 255, 255));
        jButton20.setText("ALL VICTORIES");
        jButton20.setBorder(null);
        jButton20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setBackground(new java.awt.Color(33, 146, 240));
        jButton21.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton21.setForeground(new java.awt.Color(255, 255, 255));
        jButton21.setText("BEST SCORES");
        jButton21.setBorder(null);
        jButton21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jTextArea11.setEditable(false);
        jTextArea11.setBackground(new java.awt.Color(250, 250, 250));
        jTextArea11.setColumns(20);
        jTextArea11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea11.setRows(5);
        jTextArea11.setBorder(null);
        jScrollPane25.setViewportView(jTextArea11);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 1070, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1055, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1432, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("By Season", jPanel17);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Batting Analysis", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        bowlingAnalysisScrollPanel.setBackground(new java.awt.Color(250, 250, 250));
        bowlingAnalysisScrollPanel.setBorder(null);

        jPanel20.setBackground(new java.awt.Color(250, 250, 250));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(33, 146, 240));
        jTextField1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Choose from options below");
        jTextField1.setBorder(null);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField2.setText("Bowlers with most conceded runs");
        jTextField2.setBorder(null);

        concededRunsBtn.setBackground(new java.awt.Color(33, 146, 240));
        concededRunsBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        concededRunsBtn.setForeground(new java.awt.Color(255, 255, 255));
        concededRunsBtn.setText("Submit");
        concededRunsBtn.setBorder(null);
        concededRunsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concededRunsBtnActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane12.setViewportView(jTextArea1);

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField3.setText("Bowlers with most conceded runs by location");
        jTextField3.setBorder(null);

        concededRunsVenueBtn.setBackground(new java.awt.Color(33, 146, 240));
        concededRunsVenueBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        concededRunsVenueBtn.setForeground(new java.awt.Color(255, 255, 255));
        concededRunsVenueBtn.setText("Submit");
        concededRunsVenueBtn.setBorder(null);
        concededRunsVenueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concededRunsVenueBtnActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane13.setViewportView(jTextArea2);

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField4.setText("Bowlers with most conceded runs by season");
        jTextField4.setBorder(null);

        concededRunsVenueBtn1.setBackground(new java.awt.Color(33, 146, 240));
        concededRunsVenueBtn1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        concededRunsVenueBtn1.setForeground(new java.awt.Color(255, 255, 255));
        concededRunsVenueBtn1.setText("Submit");
        concededRunsVenueBtn1.setBorder(null);
        concededRunsVenueBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concededRunsVenueBtn1ActionPerformed(evt);
            }
        });

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane14.setViewportView(jTextArea3);

        jTextField5.setEditable(false);
        jTextField5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField5.setText("Wickets fallen");
        jTextField5.setBorder(null);

        concededRunsVenueBtn2.setBackground(new java.awt.Color(33, 146, 240));
        concededRunsVenueBtn2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        concededRunsVenueBtn2.setForeground(new java.awt.Color(255, 255, 255));
        concededRunsVenueBtn2.setText("Submit");
        concededRunsVenueBtn2.setBorder(null);
        concededRunsVenueBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concededRunsVenueBtn2ActionPerformed(evt);
            }
        });

        jTextArea4.setEditable(false);
        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane15.setViewportView(jTextArea4);

        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField6.setText("Bowlers Wickets count");
        jTextField6.setBorder(null);

        concededRunsVenueBtn3.setBackground(new java.awt.Color(33, 146, 240));
        concededRunsVenueBtn3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        concededRunsVenueBtn3.setForeground(new java.awt.Color(255, 255, 255));
        concededRunsVenueBtn3.setText("Submit");
        concededRunsVenueBtn3.setBorder(null);
        concededRunsVenueBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concededRunsVenueBtn3ActionPerformed(evt);
            }
        });

        jTextArea5.setEditable(false);
        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane16.setViewportView(jTextArea5);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane12)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(concededRunsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(concededRunsVenueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane13)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addComponent(concededRunsVenueBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane14)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addComponent(concededRunsVenueBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane15)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addComponent(concededRunsVenueBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane16))
                .addGap(48, 48, 48))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(concededRunsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(concededRunsVenueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(concededRunsVenueBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(concededRunsVenueBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(concededRunsVenueBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bowlingAnalysisScrollPanel.setViewportView(jPanel20);

        jTextField7.setBackground(new java.awt.Color(250, 250, 250));
        jTextField7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.setText("Apply one or more filters for analysis");
        jTextField7.setToolTipText("");
        jTextField7.setBorder(null);

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("(Click on APPLY on the right AFTER apply filters)");

        jTextField8.setEditable(false);
        jTextField8.setBackground(new java.awt.Color(250, 250, 250));
        jTextField8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField8.setText("IPL SEASON");
        jTextField8.setBorder(null);

        bowlRdBtn.setBorder(null);
        bowlRdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bowlRdBtnActionPerformed(evt);
            }
        });

        jComboBox_bwl_season.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jComboBox_bwl_season.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" }));
        jComboBox_bwl_season.setBorder(null);
        jComboBox_bwl_season.setEnabled(false);

        jTextField9.setEditable(false);
        jTextField9.setBackground(new java.awt.Color(250, 250, 250));
        jTextField9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField9.setText("LOCATION");
        jTextField9.setBorder(null);

        bowlRdBtn1.setBorder(null);
        bowlRdBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bowlRdBtn1ActionPerformed(evt);
            }
        });

        jComboBox6.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Abu Dhabi", "Ahmedabad", "Bangalore", "Bloemfontein", "Cape Town", "Centurion", "Chandigarh", "Chennai", "Cuttack", "Delhi", "Dharamsala", "Durban", "East London", "Hyderabad", "Indore", "Jaipur", "Johannesburg", "Kanpur", "Kimberley", "Kochi", "Kolkata", "Mumbai", "Nagpur", "Port Elizabeth", "Pune", "Raipur", "Rajkot", "Ranchi", "Sharjah", "Visakhapatnam" }));
        jComboBox6.setBorder(null);
        jComboBox6.setEnabled(false);

        jTextField10.setEditable(false);
        jTextField10.setBackground(new java.awt.Color(250, 250, 250));
        jTextField10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField10.setText("BATTING TEAM");
        jTextField10.setBorder(null);

        bowlRdBtn2.setBorder(null);
        bowlRdBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bowlRdBtn2ActionPerformed(evt);
            }
        });

        jComboBox7.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chennai Super Kings", "Deccan Chargers", "Delhi Daredevils", "Gujarat Lions", "Kings XI Punjab", "Kochi Tuskers Kerala", "Kolkata Knight Riders", "Mumbai Indians", "Pune Warriors", "Rajasthan Royals", "Rising Pune Supergiant", "Rising Pune Supergiants", "Royal Challengers Bangalore", "Sunrisers Hyderabad" }));
        jComboBox7.setBorder(null);
        jComboBox7.setEnabled(false);

        jButton3.setBackground(new java.awt.Color(33, 146, 240));
        jButton3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton3.setText("APPLY");
        jButton3.setBorder(null);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField11.setEditable(false);
        jTextField11.setBackground(new java.awt.Color(250, 250, 250));
        jTextField11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField11.setText("DISMISSAL KIND");
        jTextField11.setBorder(null);

        bowlRdBtn3.setBorder(null);
        bowlRdBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bowlRdBtn3ActionPerformed(evt);
            }
        });

        jComboBox8.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "bowled", "caught", "caught and bowled", "hit wicket", "lbw", "obstructing the field", "retired hurt", "run out", "stumped" }));
        jComboBox8.setBorder(null);
        jComboBox8.setEnabled(false);

        jTextField12.setEditable(false);
        jTextField12.setBackground(new java.awt.Color(250, 250, 250));
        jTextField12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField12.setText("BOWLER");
        jTextField12.setBorder(null);

        bowlRdBtn4.setBorder(null);
        bowlRdBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bowlRdBtn4ActionPerformed(evt);
            }
        });

        jComboBox9.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A Ashish Reddy", "A Chandila", "A Choudhary", "A Flintoff", "A Kumble", "A Mishra", "A Mithun", "A Nehra", "A Nel", "A Singh", "A Symonds", "A Uniyal", "A Zampa", "AA Chavan", "AA Jhunjhunwala", "AA Kazi", "AA Noffke", "AB Agarkar", "AB Dinda", "AB McDonald", "AC Gilchrist", "AC Thomas", "AC Voges", "AD Mascarenhas", "AD Mathews", "AD Russell", "AF Milne", "AG Murtaza", "AJ Finch", "AJ Tye", "AL Menaria", "AM Nayar", "AM Rahane", "AM Salvi", "AN Ahmed", "AP Dole", "AR Patel", "AS Rajpoot", "AS Raut", "AUK Pathan", "Abdur Razzak", "Anand Rajan", "Ankit Sharma", "Ankit Soni", "Anureet Singh", "Avesh Khan", "Azhar Mahmood", "B Akhil", "B Chipli", "B Geeves", "B Kumar", "B Laughlin", "B Lee", "B Stanlake", "BA Bhatt", "BA Stokes", "BAW Mendis", "BB Sran", "BCJ Cutting", "BE Hendricks", "BJ Hodge", "BJ Rohrer", "BMAJ Mendis", "BW Hilfenhaus", "Basil Thampi", "Bipul Sharma", "C Ganapathy", "C Munro", "C Nanda", "C de Grandhomme", "CH Gayle", "CH Morris", "CJ Anderson", "CJ Jordan", "CJ McKay", "CK Kapugedera", "CK Langeveldt", "CL White", "CR Brathwaite", "CR Woakes", "CRD Fernando", "D Kalyankrishna", "D Salunkhe", "D Wiese", "D du Preez", "DAJ Bracewell", "DB Ravi Teja", "DE Bollinger", "DJ Bravo", "DJ Harris", "DJ Hooda", "DJ Hussey", "DJ Muthuswami", "DJ Thornely", "DJG Sammy", "DL Chahar", "DL Vettori", "DNT Zoysa", "DP Nannes", "DP Vijaykumar", "DR Smith", "DS Kulkarni", "DT Christian", "DW Steyn", "F du Plessis", "FH Edwards", "FY Fazal", "GB Hogg", "GD McGrath", "GH Vihari", "GJ Maxwell", "GR Napier", "GS Sandhu", "Gagandeep Singh", "Gurkeerat Singh", "HH Pandya", "HV Patel", "Harbhajan Singh", "Harmeet Singh", "Harmeet Singh (2)", "I Malhotra", "I Sharma", "IC Pandey", "IK Pathan", "Imran Tahir", "Iqbal Abdulla", "J Botha", "J Suchith", "J Syed Mohammad", "J Theron", "J Yadav", "JA Morkel", "JD Ryder", "JD Unadkat", "JDP Oram", "JDS Neesham", "JE Taylor", "JEC Franklin", "JH Kallis", "JJ Bumrah", "JJ van der Wath", "JM Kemp", "JO Holder", "JP Duminy", "JP Faulkner", "JR Hopes", "JW Hastings", "Jaskaran Singh", "Joginder Sharma", "K Goel", "K Rabada", "K Santokie", "K Upadhyay", "KA Pollard", "KAJ Roach", "KC Cariappa", "KH Pandya", "KJ Abbott", "KK Cooper", "KMDN Kulasekara", "KP Appanna", "KP Pietersen", "KS Williamson", "KV Sharma", "KW Richardson", "Kamran Khan", "Karanveer Singh", "Kuldeep Yadav", "L Ablish", "L Balaji", "LA Carseldine", "LH Ferguson", "LJ Wright", "LMP Simmons", "LPC Silva", "LR Shukla", "LRPL Taylor", "M Ashwin", "M Kartik", "M Manhas", "M Morkel", "M Muralitharan", "M Ntini", "M Vijay", "M de Lange", "MA Khote", "MA Starc", "MB Parmar", "MC Henriques", "MF Maharoof", "MG Johnson", "MG Neser", "MJ Clarke", "MJ Henry", "MJ McClenaghan", "MK Tiwary", "MM Patel", "MM Sharma", "MN Samuels", "MP Stoinis", "MR Marsh", "MS Gony", "Mashrafe Mortaza", "Mohammad Asif", "Mohammad Hafeez", "Mohammad Nabi", "Mohammed Shami", "Mohammed Siraj", "Mustafizur Rahman", "N Rana", "NB Singh", "ND Doshi", "NJ Rimmington", "NL McCullum", "NLTC Perera", "NM Coulter-Nile", "P Amarnath", "P Awana", "P Kumar", "P Negi", "P Parameswaran", "P Prasanth", "P Sahu", "P Suyal", "PC Valthaty", "PD Collingwood", "PJ Cummins", "PJ Sangwan", "PM Sarvesh Kumar", "PP Chawla", "PP Ojha", "PV Tambe", "Pankaj Singh", "Parvez Rasool", "R Ashwin", "R Bhatia", "R Dhawan", "R McLaren", "R Ninan", "R Rampaul", "R Sathish", "R Sharma", "R Shukla", "R Tewatia", "R Vinay Kumar", "RA Jadeja", "RA Shaikh", "RA Tripathi", "RD Chahar", "RE van der Merwe", "RG More", "RG Sharma", "RJ Harris", "RJ Peterson", "RN ten Doeschate", "RP Singh", "RR Bhatkal", "RR Bose", "RR Powar", "RR Raje", "RS Bopara", "RS Gavaskar", "RV Gomez", "RW Price", "Rashid Khan", "S Aravind", "S Badree", "S Dhawan", "S Gopal", "S Kaul", "S Kaushik", "S Ladda", "S Nadeem", "S Narwal", "S Rana", "S Randiv", "S Sreesanth", "S Sriram", "S Tyagi", "S Vidyut", "SA Abbott", "SA Yadav", "SB Bangar", "SB Jakati", "SB Joshi", "SB Styris", "SB Wagh", "SC Ganguly", "SD Chitnis", "SE Bond", "SJ Srivastava", "SK Raina", "SK Trivedi", "SK Warne", "SL Malinga", "SM Boland", "SM Harwood", "SM Pollock", "SMSM Senanayake", "SN Thakur", "SP Narine", "SPD Smith", "SR Tendulkar", "SR Watson", "SS Agarwal", "SS Mundhe", "SS Sarkar", "ST Jayasuriya", "STR Binny", "SW Tait", "Sachin Baby", "Sandeep Sharma", "Shahid Afridi", "Shakib Al Hasan", "Shivam Sharma", "Shoaib Ahmed", "Shoaib Akhtar", "Shoaib Malik", "Sohail Tanvir", "Sunny Gupta", "Swapnil Singh", "T Henderson", "T Natarajan", "T Shamsi", "T Thushara", "TA Boult", "TG Southee", "TL Suman", "TM Dilshan", "TM Head", "TP Sudhindra", "TS Mills", "Tejas Baroka", "UT Yadav", "Umar Gul", "V Kohli", "V Pratap Singh", "V Sehwag", "V Shankar", "VR Aaron", "VRV Singh", "VS Malik", "VS Yeligati", "VY Mahesh", "WA Mota", "WD Parnell", "WPUJC Vaas", "Washington Sundar", "Y Gnaneswara Rao", "Y Nagar", "Y Venugopal Rao", "YA Abdulla", "YK Pathan", "YS Chahal", "Yuvraj Singh", "Z Khan" }));
        jComboBox9.setBorder(null);
        jComboBox9.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(bowlingAnalysisScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bowlRdBtn1)
                        .addGap(46, 46, 46)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bowlRdBtn2)
                        .addGap(46, 46, 46)
                        .addComponent(jComboBox7, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bowlRdBtn)
                        .addGap(46, 46, 46)
                        .addComponent(jComboBox_bwl_season, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bowlRdBtn3)
                        .addGap(46, 46, 46)
                        .addComponent(jComboBox8, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bowlRdBtn4)
                        .addGap(46, 46, 46)
                        .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1228, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(bowlRdBtn))
                    .addComponent(jComboBox_bwl_season, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(bowlRdBtn1))
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(bowlRdBtn2))
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(bowlRdBtn3))
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(bowlRdBtn4))
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(bowlingAnalysisScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1429, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Bowling Analysis", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jTextField13.setEditable(false);
        jTextField13.setBackground(new java.awt.Color(33, 146, 240));
        jTextField13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField13.setForeground(new java.awt.Color(255, 255, 255));
        jTextField13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField13.setText("Choose consistency filters");
        jTextField13.setBorder(null);

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jRadioButton1.setText("All seasons");
        jRadioButton1.setBorder(null);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jRadioButton2.setText("Select Season");
        jRadioButton2.setBorder(null);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" }));
        jComboBox1.setBorder(null);
        jComboBox1.setEnabled(false);

        jTable2.setBackground(new java.awt.Color(250, 250, 250));
        jTable2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Team", "Total Matches", "Matches Won", "Matches Lost", "Matches Tie", "No Result", "Winning Ratio"
            }
        ));
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane17.setViewportView(jTable2);

        jButton6.setBackground(new java.awt.Color(33, 146, 240));
        jButton6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("VIEW");
        jButton6.setBorder(null);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 909, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1188, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1477, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consistency", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jTextField14.setEditable(false);
        jTextField14.setBackground(new java.awt.Color(33, 146, 240));
        jTextField14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField14.setForeground(new java.awt.Color(255, 255, 255));
        jTextField14.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField14.setText("CHOOSE ANALYSIS TYPE");
        jTextField14.setBorder(null);

        jRadioButton3.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setBorder(null);
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jComboBox10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A Ashish Reddy", "A Chandila", "A Chopra", "A Choudhary", "A Flintoff", "A Kumble", "A Mishra", "A Mithun", "A Mukund", "A Nehra", "A Singh", "A Symonds", "A Uniyal", "A Zampa", "AA Bilakhia", "AA Chavan", "AA Jhunjhunwala", "AA Noffke", "AB Agarkar", "AB Barath", "AB de Villiers", "AB Dinda", "AB McDonald", "Abdur Razzak", "AC Blizzard", "AC Gilchrist", "AC Thomas", "AC Voges", "AD Mascarenhas", "AD Mathews", "AD Nath", "AD Russell", "AF Milne", "AG Murtaza", "AG Paunikar", "AJ Finch", "AJ Tye", "AL Menaria", "AM Nayar", "AM Rahane", "AN Ahmed", "AN Ghosh", "Anirudh Singh", "Ankit Sharma", "Ankit Soni", "Anureet Singh", "AP Dole", "AP Majumdar", "AP Tare", "AR Bawne", "AR Patel", "AS Rajpoot", "AS Raut", "AS Yadav", "AT Rayudu", "AUK Pathan", "Azhar Mahmood", "B Akhil", "B Chipli", "B Kumar", "B Laughlin", "B Lee", "B Sumanth", "BA Bhatt", "BA Stokes", "Basil Thampi", "BAW Mendis", "BB McCullum", "BB Samantray", "BB Sran", "BCJ Cutting", "BE Hendricks", "Bipul Sharma", "BJ Haddin", "BJ Hodge", "BJ Rohrer", "BMAJ Mendis", "BR Dunk", "C de Grandhomme", "C Madan", "C Munro", "C Nanda", "CA Ingram", "CA Lynn", "CA Pujara", "CH Gayle", "CH Morris", "CJ Anderson", "CJ Ferguson", "CJ Jordan", "CJ McKay", "CK Kapugedera", "CK Langeveldt", "CL White", "CM Gautam", "CR Brathwaite", "CR Woakes", "CRD Fernando", "D du Preez", "D Kalyankrishna", "D Salunkhe", "D Wiese", "DA Miller", "DA Warner", "DAJ Bracewell", "DB Das", "DB Ravi Teja", "DE Bollinger", "DH Yagnik", "DJ Bravo", "DJ Harris", "DJ Hooda", "DJ Hussey", "DJ Jacobs", "DJ Muthuswami", "DJ Thornely", "DJG Sammy", "DL Chahar", "DL Vettori", "DM Bravo", "DNT Zoysa", "DP Nannes", "DP Vijaykumar", "DPMD Jayawardene", "DR Martyn", "DR Smith", "DS Kulkarni", "DS Lehmann", "DT Christian", "DT Patil", "DW Steyn", "EJG Morgan", "ER Dwivedi", "F Behardien", "F du Plessis", "FH Edwards", "FY Fazal", "G Gambhir", "GB Hogg", "GC Smith", "GD McGrath", "GH Vihari", "GJ Bailey", "GJ Maxwell", "GR Napier", "Gurkeerat Singh", "H Das", "Harbhajan Singh", "Harmeet Singh", "Harpreet Singh", "HH Gibbs", "HH Pandya", "HM Amla", "HV Patel", "I Malhotra", "I Sharma", "IC Pandey", "IK Pathan", "Imran Tahir", "Iqbal Abdulla", "IR Jaggi", "Ishan Kishan", "J Arunkumar", "J Botha", "J Suchith", "J Syed Mohammad", "J Theron", "J Yadav", "JA Morkel", "Jaskaran Singh", "JC Buttler", "JD Ryder", "JD Unadkat", "JDP Oram", "JDS Neesham", "JE Taylor", "JEC Franklin", "JH Kallis", "JJ Bumrah", "JJ Roy", "JJ van der Wath", "JM Kemp", "JO Holder", "Joginder Sharma", "JP Duminy", "JP Faulkner", "JR Hopes", "K Goel", "K Rabada", "K Upadhyay", "KA Pollard", "KAJ Roach", "Kamran Akmal", "Kamran Khan", "Karanveer Singh", "KB Arun Karthik", "KC Cariappa", "KC Sangakkara", "KD Karthik", "KH Pandya", "KJ Abbott", "KK Cooper", "KK Nair", "KL Rahul", "KM Jadhav", "KMDN Kulasekara", "KP Appanna", "KP Pietersen", "KS Williamson", "Kuldeep Yadav", "KV Sharma", "KW Richardson", "L Ablish", "L Balaji", "L Ronchi", "LA Carseldine", "LA Pomersbach", "LH Ferguson", "LJ Wright", "LMP Simmons", "LPC Silva", "LR Shukla", "LRPL Taylor", "M Ashwin", "M de Lange", "M Kaif", "M Kartik", "M Klinger", "M Manhas", "M Morkel", "M Muralitharan", "M Ntini", "M Rawat", "M Vijay", "M Vohra", "MA Agarwal", "MA Khote", "MA Starc", "Mandeep Singh", "Mashrafe Mortaza", "MC Henriques", "MC Juneja", "MD Mishra", "MDKJ Perera", "MEK Hussey", "MF Maharoof", "MG Johnson", "Misbah-ul-Haq", "MJ Clarke", "MJ Guptill", "MJ Lumb", "MJ McClenaghan", "MK Pandey", "MK Tiwary", "ML Hayden", "MM Patel", "MM Sharma", "MN Samuels", "MN van Wyk", "Mohammad Ashraful", "Mohammad Asif", "Mohammad Hafeez", "Mohammad Nabi", "Mohammed Shami", "MP Stoinis", "MR Marsh", "MS Bisla", "MS Dhoni", "MS Gony", "MS Wade", "MV Boucher", "N Rana", "N Saini", "ND Doshi", "Niraj Patel", "NJ Maddinson", "NJ Rimmington", "NL McCullum", "NLTC Perera", "NM Coulter-Nile", "NS Naik", "NV Ojha", "OA Shah", "P Awana", "P Dogra", "P Kumar", "P Negi", "P Parameswaran", "P Sahu", "PA Patel", "PA Reddy", "Pankaj Singh", "Parvez Rasool", "PC Valthaty", "PD Collingwood", "PJ Cummins", "PJ Sangwan", "PM Sarvesh Kumar", "PP Chawla", "PP Ojha", "PR Shah", "PSP Handscomb", "PV Tambe", "Q de Kock", "R Ashwin", "R Bhatia", "R Bishnoi", "R Dhawan", "R Dravid", "R McLaren", "R Ninan", "R Rampaul", "R Sathish", "R Sharma", "R Shukla", "R Tewatia", "R Vinay Kumar", "RA Jadeja", "RA Tripathi", "Rashid Khan", "RD Chahar", "RE Levi", "RE van der Merwe", "RG More", "RG Sharma", "RJ Harris", "RJ Peterson", "RJ Quiney", "RN ten Doeschate", "RP Singh", "RR Bhatkal", "RR Pant", "RR Powar", "RR Raje", "RR Rossouw", "RR Sarwan", "RS Bopara", "RS Gavaskar", "RS Sodhi", "RT Ponting", "RV Gomez", "RV Uthappa", "S Anirudha", "S Aravind", "S Badree", "S Badrinath", "S Chanderpaul", "S Dhawan", "S Gopal", "S Kaul", "S Kaushik", "S Ladda", "S Nadeem", "S Narwal", "S Rana", "S Randiv", "S Sohal", "S Sreesanth", "S Sriram", "S Tyagi", "S Vidyut", "SA Abbott", "SA Asnodkar", "SA Yadav", "Sachin Baby", "Salman Butt", "Sandeep Sharma", "SB Bangar", "SB Jakati", "SB Joshi", "SB Styris", "SB Wagh", "SC Ganguly", "SD Chitnis", "SE Bond", "SE Marsh", "Shahid Afridi", "Shakib Al Hasan", "Shivam Sharma", "Shoaib Ahmed", "Shoaib Akhtar", "Shoaib Malik", "SJ Srivastava", "SK Raina", "SK Trivedi", "SK Warne", "SL Malinga", "SM Harwood", "SM Katich", "SM Pollock", "SMSM Senanayake", "SN Khan", "SN Thakur", "Sohail Tanvir", "SP Fleming", "SP Goswami", "SP Jackson", "SP Narine", "SPD Smith", "SR Tendulkar", "SR Watson", "SS Iyer", "SS Shaikh", "SS Tiwary", "ST Jayasuriya", "STR Binny", "Sunny Gupta", "Sunny Singh", "SV Samson", "SW Billings", "SW Tait", "Swapnil Singh", "T Henderson", "T Kohli", "T Taibu", "T Thushara", "TA Boult", "TD Paine", "TG Southee", "TL Suman", "TM Dilshan", "TM Head", "TM Srivastava", "TR Birt", "TS Mills", "U Kaul", "UA Birla", "UBT Chand", "Umar Gul", "UT Khawaja", "UT Yadav", "V Kohli", "V Pratap Singh", "V Sehwag", "V Shankar", "VH Zol", "Vishnu Vinod", "VR Aaron", "VRV Singh", "VS Malik", "VS Yeligati", "VVS Laxman", "VY Mahesh", "W Jaffer", "WA Mota", "Washington Sundar", "WD Parnell", "WP Saha", "WPUJC Vaas", "X Thalaivan Sargunam", "Y Gnaneswara Rao", "Y Nagar", "Y Venugopal Rao", "YA Abdulla", "Yashpal Singh", "YK Pathan", "Younis Khan", "YS Chahal", "Yuvraj Singh", "YV Takawale", "Z Khan" }));
        jComboBox10.setBorder(null);
        jComboBox10.setEnabled(false);

        jTextField15.setEditable(false);
        jTextField15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField15.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField15.setText("BY BATSMAN");
        jTextField15.setBorder(null);

        jTextField16.setEditable(false);
        jTextField16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField16.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField16.setText("BY BOWLER");
        jTextField16.setBorder(null);

        jRadioButton5.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton5.setBorder(null);
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jComboBox11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A Ashish Reddy", "A Chandila", "A Choudhary", "A Flintoff", "A Kumble", "A Mishra", "A Mithun", "A Nehra", "A Nel", "A Singh", "A Symonds", "A Uniyal", "A Zampa", "AA Chavan", "AA Jhunjhunwala", "AA Kazi", "AA Noffke", "AB Agarkar", "AB Dinda", "AB McDonald", "Abdur Razzak", "AC Gilchrist", "AC Thomas", "AC Voges", "AD Mascarenhas", "AD Mathews", "AD Russell", "AF Milne", "AG Murtaza", "AJ Finch", "AJ Tye", "AL Menaria", "AM Nayar", "AM Rahane", "AM Salvi", "AN Ahmed", "Anand Rajan", "Ankit Sharma", "Ankit Soni", "Anureet Singh", "AP Dole", "AR Patel", "AS Rajpoot", "AS Raut", "AUK Pathan", "Avesh Khan", "Azhar Mahmood", "B Akhil", "B Chipli", "B Geeves", "B Kumar", "B Laughlin", "B Lee", "B Stanlake", "BA Bhatt", "BA Stokes", "Basil Thampi", "BAW Mendis", "BB Sran", "BCJ Cutting", "BE Hendricks", "Bipul Sharma", "BJ Hodge", "BJ Rohrer", "BMAJ Mendis", "BW Hilfenhaus", "C de Grandhomme", "C Ganapathy", "C Munro", "C Nanda", "CH Gayle", "CH Morris", "CJ Anderson", "CJ Jordan", "CJ McKay", "CK Kapugedera", "CK Langeveldt", "CL White", "CR Brathwaite", "CR Woakes", "CRD Fernando", "D du Preez", "D Kalyankrishna", "D Salunkhe", "D Wiese", "DAJ Bracewell", "DB Ravi Teja", "DE Bollinger", "DJ Bravo", "DJ Harris", "DJ Hooda", "DJ Hussey", "DJ Muthuswami", "DJ Thornely", "DJG Sammy", "DL Chahar", "DL Vettori", "DNT Zoysa", "DP Nannes", "DP Vijaykumar", "DR Smith", "DS Kulkarni", "DT Christian", "DW Steyn", "F du Plessis", "FH Edwards", "FY Fazal", "Gagandeep Singh", "GB Hogg", "GD McGrath", "GH Vihari", "GJ Maxwell", "GR Napier", "GS Sandhu", "Gurkeerat Singh", "Harbhajan Singh", "Harmeet Singh", "Harmeet Singh (2)", "HH Pandya", "HV Patel", "I Malhotra", "I Sharma", "IC Pandey", "IK Pathan", "Imran Tahir", "Iqbal Abdulla", "J Botha", "J Suchith", "J Syed Mohammad", "J Theron", "J Yadav", "JA Morkel", "Jaskaran Singh", "JD Ryder", "JD Unadkat", "JDP Oram", "JDS Neesham", "JE Taylor", "JEC Franklin", "JH Kallis", "JJ Bumrah", "JJ van der Wath", "JM Kemp", "JO Holder", "Joginder Sharma", "JP Duminy", "JP Faulkner", "JR Hopes", "JW Hastings", "K Goel", "K Rabada", "K Santokie", "K Upadhyay", "KA Pollard", "KAJ Roach", "Kamran Khan", "Karanveer Singh", "KC Cariappa", "KH Pandya", "KJ Abbott", "KK Cooper", "KMDN Kulasekara", "KP Appanna", "KP Pietersen", "KS Williamson", "Kuldeep Yadav", "KV Sharma", "KW Richardson", "L Ablish", "L Balaji", "LA Carseldine", "LH Ferguson", "LJ Wright", "LMP Simmons", "LPC Silva", "LR Shukla", "LRPL Taylor", "M Ashwin", "M de Lange", "M Kartik", "M Manhas", "M Morkel", "M Muralitharan", "M Ntini", "M Vijay", "MA Khote", "MA Starc", "Mashrafe Mortaza", "MB Parmar", "MC Henriques", "MF Maharoof", "MG Johnson", "MG Neser", "MJ Clarke", "MJ Henry", "MJ McClenaghan", "MK Tiwary", "MM Patel", "MM Sharma", "MN Samuels", "Mohammad Asif", "Mohammad Hafeez", "Mohammad Nabi", "Mohammed Shami", "Mohammed Siraj", "MP Stoinis", "MR Marsh", "MS Gony", "Mustafizur Rahman", "N Rana", "NB Singh", "ND Doshi", "NJ Rimmington", "NL McCullum", "NLTC Perera", "NM Coulter-Nile", "P Amarnath", "P Awana", "P Kumar", "P Negi", "P Parameswaran", "P Prasanth", "P Sahu", "P Suyal", "Pankaj Singh", "Parvez Rasool", "PC Valthaty", "PD Collingwood", "PJ Cummins", "PJ Sangwan", "PM Sarvesh Kumar", "PP Chawla", "PP Ojha", "PV Tambe", "R Ashwin", "R Bhatia", "R Dhawan", "R McLaren", "R Ninan", "R Rampaul", "R Sathish", "R Sharma", "R Shukla", "R Tewatia", "R Vinay Kumar", "RA Jadeja", "RA Shaikh", "RA Tripathi", "Rashid Khan", "RD Chahar", "RE van der Merwe", "RG More", "RG Sharma", "RJ Harris", "RJ Peterson", "RN ten Doeschate", "RP Singh", "RR Bhatkal", "RR Bose", "RR Powar", "RR Raje", "RS Bopara", "RS Gavaskar", "RV Gomez", "RW Price", "S Aravind", "S Badree", "S Dhawan", "S Gopal", "S Kaul", "S Kaushik", "S Ladda", "S Nadeem", "S Narwal", "S Rana", "S Randiv", "S Sreesanth", "S Sriram", "S Tyagi", "S Vidyut", "SA Abbott", "SA Yadav", "Sachin Baby", "Sandeep Sharma", "SB Bangar", "SB Jakati", "SB Joshi", "SB Styris", "SB Wagh", "SC Ganguly", "SD Chitnis", "SE Bond", "Shahid Afridi", "Shakib Al Hasan", "Shivam Sharma", "Shoaib Ahmed", "Shoaib Akhtar", "Shoaib Malik", "SJ Srivastava", "SK Raina", "SK Trivedi", "SK Warne", "SL Malinga", "SM Boland", "SM Harwood", "SM Pollock", "SMSM Senanayake", "SN Thakur", "Sohail Tanvir", "SP Narine", "SPD Smith", "SR Tendulkar", "SR Watson", "SS Agarwal", "SS Mundhe", "SS Sarkar", "ST Jayasuriya", "STR Binny", "Sunny Gupta", "SW Tait", "Swapnil Singh", "T Henderson", "T Natarajan", "T Shamsi", "T Thushara", "TA Boult", "Tejas Baroka", "TG Southee", "TL Suman", "TM Dilshan", "TM Head", "TP Sudhindra", "TS Mills", "Umar Gul", "UT Yadav", "V Kohli", "V Pratap Singh", "V Sehwag", "V Shankar", "VR Aaron", "VRV Singh", "VS Malik", "VS Yeligati", "VY Mahesh", "WA Mota", "Washington Sundar", "WD Parnell", "WPUJC Vaas", "Y Gnaneswara Rao", "Y Nagar", "Y Venugopal Rao", "YA Abdulla", "YK Pathan", "YS Chahal", "Yuvraj Singh", "Z Khan" }));
        jComboBox11.setBorder(null);
        jComboBox11.setEnabled(false);

        domApply.setBackground(new java.awt.Color(33, 146, 240));
        domApply.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        domApply.setForeground(new java.awt.Color(255, 255, 255));
        domApply.setText("APPLY");
        domApply.setBorder(null);
        domApply.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        domApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domApplyActionPerformed(evt);
            }
        });

        domApply1.setBackground(new java.awt.Color(33, 146, 240));
        domApply1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        domApply1.setForeground(new java.awt.Color(255, 255, 255));
        domApply1.setText("SHOW");
        domApply1.setBorder(null);
        domApply1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        domApply1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domApply1ActionPerformed(evt);
            }
        });

        jTextArea6.setEditable(false);
        jTextArea6.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea6.setColumns(20);
        jTextArea6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea6.setRows(5);
        jTextArea6.setBorder(null);
        jScrollPane18.setViewportView(jTextArea6);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(domApply, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(domApply1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1241, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jRadioButton3))
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jRadioButton5))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(domApply, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(domApply1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1440, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Player Dominance", jPanel6);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jTextField17.setEditable(false);
        jTextField17.setBackground(new java.awt.Color(33, 146, 240));
        jTextField17.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField17.setForeground(new java.awt.Color(255, 255, 255));
        jTextField17.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField17.setText("CHOOSE ANALYSIS TYPE");
        jTextField17.setBorder(null);

        teamPrRd1.setBackground(new java.awt.Color(255, 255, 255));
        teamPrRd1.setBorder(null);
        teamPrRd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamPrRd1ActionPerformed(evt);
            }
        });

        jTextField18.setEditable(false);
        jTextField18.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField18.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField18.setText("SELECT YEAR");
        jTextField18.setBorder(null);

        jTextField19.setEditable(false);
        jTextField19.setBackground(new java.awt.Color(255, 255, 255));
        jTextField19.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextField19.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField19.setText("(field is necessary)");
        jTextField19.setBorder(null);

        jComboYear.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" }));
        jComboYear.setBorder(null);

        teamPrRd2.setBackground(new java.awt.Color(255, 255, 255));
        teamPrRd2.setBorder(null);
        teamPrRd2.setEnabled(false);
        teamPrRd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamPrRd2ActionPerformed(evt);
            }
        });

        jComboTeam.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboTeam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chennai Super Kings", "Deccan Chargers", "Delhi Daredevils", "Gujarat Lions", "Kings XI Punjab", "Kochi Tuskers Kerala", "Kolkata Knight Riders", "Mumbai Indians", "Pune Warriors", "Rajasthan Royals", "Rising Pune Supergiant", "Rising Pune Supergiants", "Royal Challengers Bangalore", "Sunrisers Hyderabad" }));
        jComboTeam.setBorder(null);
        jComboTeam.setEnabled(false);

        jTextField20.setEditable(false);
        jTextField20.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField20.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField20.setText("SELECT ANY TEAM");
        jTextField20.setBorder(null);

        teamArea.setEditable(false);
        teamArea.setBackground(new java.awt.Color(250, 250, 250));
        teamArea.setColumns(20);
        teamArea.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        teamArea.setRows(5);
        teamArea.setBorder(null);
        jScrollPane19.setViewportView(teamArea);

        jButton13.setBackground(new java.awt.Color(33, 146, 240));
        jButton13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setText("GO");
        jButton13.setBorder(null);
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 1007, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teamPrRd1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboYear, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teamPrRd2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1138, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboYear, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(teamPrRd1))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(teamPrRd2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jComboTeam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1013, 1013, 1013))
        );

        jTabbedPane1.addTab("Team Performance", jPanel9);

        jPanel11.setBackground(new java.awt.Color(33, 146, 240));

        jTextArea7.setEditable(false);
        jTextArea7.setBackground(new java.awt.Color(250, 250, 250));
        jTextArea7.setColumns(20);
        jTextArea7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea7.setRows(5);
        jTextArea7.setText("       1. ANALYSIS OF PERCENTAGE OF MATCHES WON BY TEAMS IN ALL IPL SEASONS:\n\n                     The following code for graphical analysis is written in Python and makes use of the following libraries:\n\n                     a. NUMPY: \n\n\tNumPy is the fundamental package for scientific computing with Python. It contains among other things:\n\n                            a. powerful N-dimensional array object\n                            b. sophisticated (broadcasting) functions\n                            c. tools for integrating C/C++ and Fortran code\n                            d. useful linear algebra, Fourier transform, and random number capabilities \n                            Besides its obvious scientific uses, NumPy can also be used as an efficient multi-dimensional container of generic data. \n                            Arbitrary data-types can be defined. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.\n\n                    b. PANDAS:\n\n                            Pandas is an open-source Python Library providing high-performance data manipulation and analysis tool using its powerful data \n                            structures. The name Pandas is derived from the word Panel Data – an Econometrics from Multidimensional data.\n\n                            In 2008, developer Wes McKinney started developing pandas when in need of high performance, flexible tool for analysis of data.\n\n                            Prior to Pandas, Python was majorly used for data munging and preparation. It had very little contribution towards data analysis. \n                            Pandas solved this problem. Using Pandas, we can accomplish five typical steps in the processing and analysis of data, regardless \n                            of the origin of data — load, prepare, manipulate, model, and analyze.\n\n                            Python with Pandas is used in a wide range of fields including academic and commercial domains including finance, economics, \n                            Statistics, analytics, etc.\n\n                             Key Features of Pandas:\n                            \n                             a.  Fast and efficient DataFrame object with default and customized indexing.\n                             b.  Tools for loading data into in-memory data objects from different file formats.\n                             c.  Data alignment and integrated handling of missing data.\n                             d.  Reshaping and pivoting of date sets.\n                             e.  Label-based slicing, indexing and subsetting of large data sets.\n                             f.  Columns from a data structure can be deleted or inserted.\n                             g.  Group by data for aggregation and transformations.\n                             h.  High performance merging and joining of data.\n                              i.  Time Series functionality.\n\n\n\tPYTHON CODE FOR:               \"OVERALL ANALYSIS OF DATA\"\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun May 09 01:22:17 2018\n\n@author: anmol\n\"\"\"\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nmatches = pd.read_csv(r\"C:\\Users\\anmol\\Desktop\\IPLPlots\\matches.csv\")\nmatches = matches.drop(['date','win_by_runs','win_by_wickets','venue','umpire3','id'],axis=1)\n\nmatches.replace('Rising Pune Supergiant','Rising Pune Supergiants',inplace=True)\nmatches = matches.fillna({'city':'Dubai'})\nmatches = matches.dropna(subset=['winner'])\nmatches=matches.reset_index()\n\nipl_years = [2008,2009,2010,2011,2012,2013,2014,2015,2016,2017]\nseasons = [matches[matches['season'] == i] for i in ipl_years]\nteams_list = ['Sunrisers Hyderabad', 'Rising Pune Supergiants',\n       'Kolkata Knight Riders', 'Kings XI Punjab',\n       'Royal Challengers Bangalore', 'Mumbai Indians', 'Delhi Daredevils',\n       'Gujarat Lions', 'Chennai Super Kings', 'Rajasthan Royals',\n       'Deccan Chargers', 'Pune Warriors', 'Kochi Tuskers Kerala']\n\nteams_short = ['SRH','RPS','KKR','KXIP','RCB','MI','DD','GL','CSK','RR','DC','PW','KTK']\n\nteam_dict=dict(zip(teams_list, teams_short))\n\nwin_percentage_list = []\nfor season in seasons:\n    count_matches = [season[season['team1'] == team_name].shape[0] + \n                     season[season['team2'] == team_name].shape[0] for team_name in teams_list]\n    count_wins = [season[season['winner'] == team_name].shape[0] for team_name in teams_list]\n    #If team did not play that season, no need to plot\n    count_matches = [np.nan if x == 0 else x for x in count_matches]\n    win_percentage = [100*x/y for x,y in zip(count_wins,count_matches)]\n    win_percentage_list.append(win_percentage)\n\nfor i in range(0,len(win_percentage_list)):\n    plt.scatter(teams_short, win_percentage_list[i], label = str(2008 + i), marker=',', s = 100)\n\nplt.ylabel(\"PERCENTAGE OF MATCHES WON\")\nplt.ylim([0,90])\nplt.xlabel('IPL TEAMS')\nplt.title('CONSISTENCY BY SEASONS 2008 - 2017',color = 'c',fontdict={\"fontsize\":15})\n# plt.xticks(=90)\nplt.legend(loc = 9, bbox_to_anchor=(1.1, 1.22))\nfig1 = plt.gcf()\nplt.show()\nplt.draw()\nfig1.savefig('consistency_graph.png', bbox_inches=\"tight\")\n\n\nduckworth_lewis_parameter = matches[matches['dl_applied'] == 1]\ndLewis_matches = duckworth_lewis_parameter.shape[0]\n\n\ntotal_field_first = duckworth_lewis_parameter[duckworth_lewis_parameter\n                                       ['toss_decision'] == 'field']\ntotal_bat_first = duckworth_lewis_parameter[duckworth_lewis_parameter\n                                     ['toss_decision'] == 'bat']\nf_first_champs = total_field_first[total_field_first['toss_winner'] == \n                             total_field_first['winner']].shape[0]\nb_first_champs = total_bat_first[total_bat_first['toss_winner'] != \n                                  total_bat_first['winner']].shape[0]\ndl_fieldfirst_wins = f_first_champs + b_first_champs\n\ndef iden(x):\n    return (str(x) + '%')\n\nplt.pie([dLewis_matches - dl_fieldfirst_wins, dl_fieldfirst_wins],\n        labels = ['Bat First','Bowl First'],colors=['yellow', 'red'],\n        autopct = iden, explode=[0,0.1], shadow = True)\nplt.title('DUCKWORTH LEWIS ADVANTAGE BY ALL SEASONS',fontdict={\"fontsize\":15}, color = 'c')\nfig2 = plt.gcf()\nplt.show()\nplt.draw()\nfig2.savefig('duckworth_lewis_favour.png', bbox_inches=\"tight\")\n\nman_of_the_match = matches['player_of_match'].value_counts()\n\n\nman_of_the_match = man_of_the_match.iloc[:20]\n\nsns.set_style('darkgrid')\nax = sns.barplot(x = man_of_the_match.index, y = man_of_the_match)\nax.set(xlabel='IPL PLAYERS', ylabel='NO OF MAN OF THE MATCH AWARDS')\nplt.title('BEST PLAYERS OF IPL',fontdict={\"fontsize\":15}, color = 'c')\nplt.yticks(range(0,20,2))\nplt.xticks(rotation=45)\nfig3 = plt.gcf()\nplt.show()\nplt.draw()\nfig3.savefig('man_of_the_match_graph.png', bbox_inches=\"tight\")\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun May 13 02:41:40 2018\n\n@author: anmol\n\"\"\"\nimport pandas as pd\nimport numpy as np\n\ndeliveries = pd.read_csv(r'C:\\Users\\anmol\\Desktop\\IPLPlots\\deliveries.csv')\nmatches = pd.read_csv(r'C:\\Users\\anmol\\Desktop\\IPLPlots\\matches.csv')\n\nmatches[\"type\"] = \"pre-qualifier\"\nfor year in range(2008, 2017):\n   final_match_index = matches[matches['season']==year][-1:].index.values[0]\n   matches = matches.set_value(final_match_index, \"type\", \"final\")\n   matches = matches.set_value(final_match_index-1, \"type\", \"qualifier-2\")\n   matches = matches.set_value(final_match_index-2, \"type\", \"eliminator\")\n   matches = matches.set_value(final_match_index-3, \"type\", \"qualifier-1\")\n\nmatches.groupby([\"type\"])[\"id\"].count()\n\nbatsman_grp = deliveries.groupby([\"match_id\", \"inning\", \"batting_team\", \"batsman\"])\nbatsmen = batsman_grp[\"batsman_runs\"].sum().reset_index()\n\nballs_faced = deliveries[deliveries[\"wide_runs\"] == 0]\nballs_faced = balls_faced.groupby([\"match_id\", \"inning\", \"batsman\"])[\"batsman_runs\"].count().reset_index()\nballs_faced.columns = [\"match_id\", \"inning\", \"batsman\", \"balls_faced\"]\nbatsmen = batsmen.merge(balls_faced, left_on=[\"match_id\", \"inning\", \"batsman\"], \n                        right_on=[\"match_id\", \"inning\", \"batsman\"], how=\"left\")\n\nfours = deliveries[ deliveries[\"batsman_runs\"] == 4]\nsixes = deliveries[ deliveries[\"batsman_runs\"] == 6]\n\nfours_per_batsman = fours.groupby([\"match_id\", \"inning\", \"batsman\"])[\"batsman_runs\"].count().reset_index()\nsixes_per_batsman = sixes.groupby([\"match_id\", \"inning\", \"batsman\"])[\"batsman_runs\"].count().reset_index()\n\nfours_per_batsman.columns = [\"match_id\", \"inning\", \"batsman\", \"4s\"]\nsixes_per_batsman.columns = [\"match_id\", \"inning\", \"batsman\", \"6s\"]\n\nbatsmen = batsmen.merge(fours_per_batsman, left_on=[\"match_id\", \"inning\", \"batsman\"], \n                        right_on=[\"match_id\", \"inning\", \"batsman\"], how=\"left\")\nbatsmen = batsmen.merge(sixes_per_batsman, left_on=[\"match_id\", \"inning\", \"batsman\"], \n                        right_on=[\"match_id\", \"inning\", \"batsman\"], how=\"left\")\nbatsmen['SR'] = np.round(batsmen['batsman_runs'] / batsmen['balls_faced'] * 100, 2)\n\nfor col in [\"batsman_runs\", \"4s\", \"6s\", \"balls_faced\", \"SR\"]:\n    batsmen[col] = batsmen[col].fillna(0)\n\ndismissals = deliveries[ pd.notnull(deliveries[\"player_dismissed\"])]\ndismissals = dismissals[[\"match_id\", \"inning\", \"player_dismissed\", \"dismissal_kind\", \"fielder\"]]\ndismissals.rename(columns={\"player_dismissed\": \"batsman\"}, inplace=True)\nbatsmen = batsmen.merge(dismissals, left_on=[\"match_id\", \"inning\", \"batsman\"], \n                        right_on=[\"match_id\", \"inning\", \"batsman\"], how=\"left\")\n\nbatsmen = matches[['id','season']].merge(batsmen, left_on = 'id', right_on = 'match_id', how = 'left').drop('id', axis = 1)\n\n\nbatsman_runsperseason = batsmen.groupby(['season', 'batting_team', 'batsman'])['batsman_runs'].sum().reset_index()\nbatsman_runsperseason = batsman_runsperseason.groupby(['season', 'batsman'])['batsman_runs'].sum().unstack().T\nbatsman_runsperseason['Total'] = batsman_runsperseason.sum(axis=1) #add total column to find batsman with the highest runs\nbatsman_runsperseason = batsman_runsperseason.sort_values(by = 'Total', ascending = False).drop('Total', 1)\n\nax = batsman_runsperseason[:5].T.plot()\n\n\nTHE PLOTS ARE AVAILABLE IN THE GRAPHS TAB ABOVE.");
        jTextArea7.setBorder(null);
        jTextArea7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane21.setViewportView(jTextArea7);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 1048, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1076, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1458, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Graph Analysis", jPanel11);

        jPanel12.setBackground(new java.awt.Color(33, 146, 240));

        jTextField24.setEditable(false);
        jTextField24.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField24.setText("TOTAL MATCHES IN IPL");
        jTextField24.setBorder(null);

        jTextArea12.setEditable(false);
        jTextArea12.setColumns(20);
        jTextArea12.setRows(5);
        jTextArea12.setText("636 MATCHES");
        jScrollPane26.setViewportView(jTextArea12);

        jTextArea32.setEditable(false);
        jTextArea32.setColumns(20);
        jTextArea32.setRows(5);
        jTextArea32.setText("636 MATCHES");
        jScrollPane47.setViewportView(jTextArea32);

        jTextField25.setEditable(false);
        jTextField25.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField25.setText("TOTAL DELIVERIES IN IPL");
        jTextField25.setBorder(null);

        jTextArea13.setEditable(false);
        jTextArea13.setColumns(20);
        jTextArea13.setRows(5);
        jTextArea13.setText("150460 DELIVERIES BOWLED");
        jScrollPane27.setViewportView(jTextArea13);

        jTextArea33.setEditable(false);
        jTextArea33.setColumns(20);
        jTextArea33.setRows(5);
        jTextArea33.setText("150460 DELIVERIES BOWLED");
        jScrollPane48.setViewportView(jTextArea33);

        jTextArea14.setEditable(false);
        jTextArea14.setColumns(20);
        jTextArea14.setRows(5);
        jTextArea14.setText("495 PLAYERS");
        jScrollPane28.setViewportView(jTextArea14);

        jTextArea34.setEditable(false);
        jTextArea34.setColumns(20);
        jTextArea34.setRows(5);
        jTextArea34.setText("495 PLAYERS");
        jScrollPane49.setViewportView(jTextArea34);

        jTextField26.setEditable(false);
        jTextField26.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField26.setText("TOTAL PLAYERS IN IPL SO FAR ");
        jTextField26.setBorder(null);

        jTextArea15.setEditable(false);
        jTextArea15.setColumns(20);
        jTextArea15.setRows(5);
        jTextArea15.setText("54 UMPIRES");
        jScrollPane29.setViewportView(jTextArea15);

        jTextArea35.setEditable(false);
        jTextArea35.setColumns(20);
        jTextArea35.setRows(5);
        jTextArea35.setText("54 UMPIRES");
        jScrollPane50.setViewportView(jTextArea35);

        jTextField27.setEditable(false);
        jTextField27.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField27.setText("TOTAL UMPIRES IN IPL SO FAR");
        jTextField27.setBorder(null);

        jTextField28.setEditable(false);
        jTextField28.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField28.setText("SIXES IN IPL");
        jTextField28.setBorder(null);

        jTextArea16.setEditable(false);
        jTextArea16.setColumns(20);
        jTextArea16.setRows(5);
        jTextArea16.setText("6524 SIXES (1 ON NO BALL)");
        jScrollPane30.setViewportView(jTextArea16);

        jTextArea36.setEditable(false);
        jTextArea36.setColumns(20);
        jTextArea36.setRows(5);
        jTextArea36.setText("6524 SIXES (1 ON NO BALL)");
        jScrollPane51.setViewportView(jTextArea36);

        jTextField29.setEditable(false);
        jTextField29.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField29.setText("FOURS IN IPL");
        jTextField29.setBorder(null);

        jTextArea17.setEditable(false);
        jTextArea17.setColumns(20);
        jTextArea17.setRows(5);
        jTextArea17.setText("17281 FOURS (248 ON NO BALLS)");
        jScrollPane31.setViewportView(jTextArea17);

        jTextArea37.setEditable(false);
        jTextArea37.setColumns(20);
        jTextArea37.setRows(5);
        jTextArea37.setText("17281 FOURS (248 ON NO BALLS)");
        jScrollPane52.setViewportView(jTextArea37);

        jTextArea18.setEditable(false);
        jTextArea18.setColumns(20);
        jTextArea18.setRows(5);
        jTextArea18.setText("509 TRIPLETS");
        jScrollPane32.setViewportView(jTextArea18);

        jTextArea38.setEditable(false);
        jTextArea38.setColumns(20);
        jTextArea38.setRows(5);
        jTextArea38.setText("509 TRIPLETS");
        jScrollPane53.setViewportView(jTextArea38);

        jTextField30.setEditable(false);
        jTextField30.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField30.setText("TRIPLETS IN IPL");
        jTextField30.setBorder(null);

        jTextArea19.setEditable(false);
        jTextArea19.setColumns(20);
        jTextArea19.setRows(5);
        jTextArea19.setText("9705 DOUBLES");
        jScrollPane33.setViewportView(jTextArea19);

        jTextArea39.setEditable(false);
        jTextArea39.setColumns(20);
        jTextArea39.setRows(5);
        jTextArea39.setText("9705 DOUBLES");
        jScrollPane54.setViewportView(jTextArea39);

        jTextField31.setEditable(false);
        jTextField31.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField31.setText("DOUBLES IN IPL");
        jTextField31.setBorder(null);

        jTextField32.setEditable(false);
        jTextField32.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField32.setText("SINGLES IN IPL");
        jTextField32.setBorder(null);

        jTextArea20.setEditable(false);
        jTextArea20.setColumns(20);
        jTextArea20.setRows(5);
        jTextArea20.setText("55497 SINGLES");
        jScrollPane34.setViewportView(jTextArea20);

        jTextArea40.setEditable(false);
        jTextArea40.setColumns(20);
        jTextArea40.setRows(5);
        jTextArea40.setText("55497 SINGLES");
        jScrollPane55.setViewportView(jTextArea40);

        jTextField33.setEditable(false);
        jTextField33.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField33.setText("MOST RUNS BY PLAYER");
        jTextField33.setBorder(null);

        jTextArea21.setEditable(false);
        jTextArea21.setColumns(20);
        jTextArea21.setRows(5);
        jTextArea21.setText("175 RUNS");
        jScrollPane35.setViewportView(jTextArea21);

        jTextArea41.setEditable(false);
        jTextArea41.setColumns(20);
        jTextArea41.setRows(5);
        jTextArea41.setText("175 RUNS");
        jScrollPane56.setViewportView(jTextArea41);

        jTextArea22.setEditable(false);
        jTextArea22.setColumns(20);
        jTextArea22.setRows(5);
        jTextArea22.setText("82 MATCHES (DELHI DAREDEVILS)");
        jScrollPane36.setViewportView(jTextArea22);

        jTextArea42.setEditable(false);
        jTextArea42.setColumns(20);
        jTextArea42.setRows(5);
        jTextArea42.setText("82 MATCHES (DELHI DAREDEVILS)");
        jScrollPane57.setViewportView(jTextArea42);

        jTextField34.setEditable(false);
        jTextField34.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField34.setText("MOST LOSSES BY TEAM");
        jTextField34.setBorder(null);

        jTextArea23.setEditable(false);
        jTextArea23.setColumns(20);
        jTextArea23.setRows(5);
        jTextArea23.setText("92 MATCHES (MUMBAI INDIANS)");
        jScrollPane37.setViewportView(jTextArea23);

        jTextArea43.setEditable(false);
        jTextArea43.setColumns(20);
        jTextArea43.setRows(5);
        jTextArea43.setText("92 MATCHES (MUMBAI INDIANS)");
        jScrollPane58.setViewportView(jTextArea43);

        jTextArea24.setEditable(false);
        jTextArea24.setColumns(20);
        jTextArea24.setRows(5);
        jTextArea24.setText("16 MATCHES");
        jScrollPane38.setViewportView(jTextArea24);

        jTextArea44.setEditable(false);
        jTextArea44.setColumns(20);
        jTextArea44.setRows(5);
        jTextArea44.setText("16 MATCHES");
        jScrollPane59.setViewportView(jTextArea44);

        jTextArea25.setEditable(false);
        jTextArea25.setColumns(20);
        jTextArea25.setRows(5);
        jTextArea25.setText("0.00");
        jScrollPane39.setViewportView(jTextArea25);

        jTextArea45.setEditable(false);
        jTextArea45.setColumns(20);
        jTextArea45.setRows(5);
        jTextArea45.setText("0.00");
        jScrollPane60.setViewportView(jTextArea45);

        jTextArea26.setEditable(false);
        jTextArea26.setColumns(20);
        jTextArea26.setRows(5);
        jTextArea26.setText("132.00");
        jScrollPane40.setViewportView(jTextArea26);

        jTextArea46.setEditable(false);
        jTextArea46.setColumns(20);
        jTextArea46.setRows(5);
        jTextArea46.setText("132.00");
        jScrollPane61.setViewportView(jTextArea46);

        jTextArea27.setEditable(false);
        jTextArea27.setColumns(20);
        jTextArea27.setRows(5);
        jTextArea27.setText("AD RUSSEL");
        jScrollPane41.setViewportView(jTextArea27);

        jTextArea47.setEditable(false);
        jTextArea47.setColumns(20);
        jTextArea47.setRows(5);
        jTextArea47.setText("AD RUSSEL");
        jScrollPane62.setViewportView(jTextArea47);

        jTextArea28.setEditable(false);
        jTextArea28.setColumns(20);
        jTextArea28.setRows(5);
        jTextArea28.setText("164.00 ** (TOTAL RUNS > 400)");
        jScrollPane42.setViewportView(jTextArea28);

        jTextArea48.setEditable(false);
        jTextArea48.setColumns(20);
        jTextArea48.setRows(5);
        jTextArea48.setText("164.00 ** (TOTAL RUNS > 400)");
        jScrollPane63.setViewportView(jTextArea48);

        jTextArea29.setEditable(false);
        jTextArea29.setColumns(20);
        jTextArea29.setRows(5);
        jTextArea29.setText("SL MALINGA");
        jScrollPane43.setViewportView(jTextArea29);

        jTextArea49.setEditable(false);
        jTextArea49.setColumns(20);
        jTextArea49.setRows(5);
        jTextArea49.setText("SL MALINGA");
        jScrollPane64.setViewportView(jTextArea49);

        jTextArea30.setEditable(false);
        jTextArea30.setColumns(20);
        jTextArea30.setRows(5);
        jTextArea30.setText("CH GAYLE");
        jScrollPane44.setViewportView(jTextArea30);

        jTextArea50.setEditable(false);
        jTextArea50.setColumns(20);
        jTextArea50.setRows(5);
        jTextArea50.setText("CH GAYLE");
        jScrollPane65.setViewportView(jTextArea50);

        jTextArea31.setEditable(false);
        jTextArea31.setColumns(20);
        jTextArea31.setRows(5);
        jTextArea31.setText("154 WICKETS");
        jScrollPane45.setViewportView(jTextArea31);

        jTextArea51.setEditable(false);
        jTextArea51.setColumns(20);
        jTextArea51.setRows(5);
        jTextArea51.setText("154 WICKETS");
        jScrollPane66.setViewportView(jTextArea51);

        jTextField35.setEditable(false);
        jTextField35.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField35.setText("MOST WICKETS BY PLAYER");
        jTextField35.setBorder(null);

        jTextField36.setEditable(false);
        jTextField36.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField36.setText("HIGHEST RUNS BY A PLAYER");
        jTextField36.setBorder(null);

        jTextField37.setEditable(false);
        jTextField37.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField37.setText("HIGHEST WICKET BY A PLAYER");
        jTextField37.setBorder(null);

        jTextField38.setEditable(false);
        jTextField38.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField38.setText("BEST STRIKE RATE");
        jTextField38.setBorder(null);

        jTextField39.setEditable(false);
        jTextField39.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField39.setText("BATSMAN BEST STRIKE RATE");
        jTextField39.setBorder(null);

        jTextField40.setEditable(false);
        jTextField40.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField40.setText("BEST BOWLER ECONOMY RATE");
        jTextField40.setBorder(null);

        jTextField41.setEditable(false);
        jTextField41.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField41.setText("LOWEST BOWL ECONOMY");
        jTextField41.setBorder(null);

        jTextField42.setEditable(false);
        jTextField42.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField42.setText("TOTAL DL'S APPLIED");
        jTextField42.setBorder(null);

        jTextField43.setEditable(false);
        jTextField43.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextField43.setText("MOST WINS BY TEAM");
        jTextField43.setBorder(null);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane29, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane30, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane31, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane32, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane33, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane34, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane35, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane36, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField43, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane37, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField42, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane38, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane39, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane40, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane41, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane42, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane43, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane44, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane45, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField24)
                    .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField25)
                    .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField26)
                    .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField27)
                    .addComponent(jScrollPane29, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField28)
                    .addComponent(jScrollPane30, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField29)
                    .addComponent(jScrollPane31, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField30)
                    .addComponent(jScrollPane32, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField31)
                    .addComponent(jScrollPane33, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField32)
                    .addComponent(jScrollPane34, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField33)
                    .addComponent(jScrollPane35, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField35)
                    .addComponent(jScrollPane45, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField36)
                    .addComponent(jScrollPane44, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField37)
                    .addComponent(jScrollPane43, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField38)
                    .addComponent(jScrollPane42, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField39)
                    .addComponent(jScrollPane41, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField40)
                    .addComponent(jScrollPane40, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField41)
                    .addComponent(jScrollPane39, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField42)
                    .addComponent(jScrollPane38, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField43)
                    .addComponent(jScrollPane37, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField34)
                    .addComponent(jScrollPane36, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jScrollPane46.setViewportView(jPanel8);

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/imagePackage/IPL.png"))); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1064, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane46, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE))
                .addContainerGap(1448, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Overall Statistics", jPanel12);

        dataModelingScrollPane.setViewportView(jTabbedPane1);

        javax.swing.GroupLayout dataModelingPanelLayout = new javax.swing.GroupLayout(dataModelingPanel);
        dataModelingPanel.setLayout(dataModelingPanelLayout);
        dataModelingPanelLayout.setHorizontalGroup(
            dataModelingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dataModelingScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1118, Short.MAX_VALUE)
        );
        dataModelingPanelLayout.setVerticalGroup(
            dataModelingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataModelingPanelLayout.createSequentialGroup()
                .addComponent(dataModelingScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainTabPane.addTab("Data Modeling", dataModelingPanel);

        graphsPanel.setBackground(new java.awt.Color(255, 255, 255));

        jButton9.setBackground(new java.awt.Color(33, 146, 240));
        jButton9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("FIRST");
        jButton9.setBorder(null);
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(33, 146, 240));
        jButton10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("BACK");
        jButton10.setBorder(null);
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(33, 146, 240));
        jButton11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("NEXT");
        jButton11.setBorder(null);
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(33, 146, 240));
        jButton12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("END");
        jButton12.setBorder(null);
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout graphsPanelLayout = new javax.swing.GroupLayout(graphsPanel);
        graphsPanel.setLayout(graphsPanelLayout);
        graphsPanelLayout.setHorizontalGroup(
            graphsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphsPanelLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addGroup(graphsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(graphsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(graphsPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(graphLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(graphsPanelLayout.createSequentialGroup()
                        .addGap(595, 595, 595)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        graphsPanelLayout.setVerticalGroup(
            graphsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(graphLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(graphsPanelLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(graphsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(graphsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphsPanelLayout.createSequentialGroup()
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphsPanelLayout.createSequentialGroup()
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94))))
        );

        mainTabPane.addTab("Graphs", graphsPanel);

        docPanel.setBackground(new java.awt.Color(33, 146, 240));

        docTextArea.setEditable(false);
        docTextArea.setColumns(20);
        docTextArea.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        docTextArea.setForeground(new java.awt.Color(51, 51, 51));
        docTextArea.setRows(5);
        docTextArea.setText("1. UBUNTU\n\nUbuntu is a Linux-based operating system. It is designed for computers, smartphones, and network servers. The system is developed by a UK based company called Canonical Ltd.\nAll the principles used to develop the Ubuntu software are based on the principles of Open Source software development.\n\nFeatures of Ubuntu:\nFollowing are some of the significant features of Ubuntu −\n\n1. The desktop version of Ubuntu supports all the normal software on Windows such as Firefox, Chrome, VLC, etc.\n2. It supports the office suite called LibreOffice.\n3. Ubuntu has an in-built email software called Thunderbird, which gives the user access to email such as Exchange, Gmail, Hotmail, etc.\n4. There are a host of free applications for users to view and edit photos.\n5. There are also applications to manage videos and it also allows the users to share videos.\n6. It is easy to find content on Ubuntu with the smart searching facility.\n7. The best feature is, it is a free operating system and is backed by a huge open source community.\n\nWe need to ensure we have the right hardware specifications in order to have Ubuntu installed.\n\nSystem Requirements:\n\nEnsure the following system requirements are met before proceeding with the installation:\n\nMemory\t\t8 GB RAM (recommended)\nDisk Space\t\t30GB of free hard disk space\nProcessor\t\t2 GHz dual core processor or better\nOther requirements: \tAn optional DVD drive or USB drive with the Installer media. An internet connection to download the optional updates.\n\nUbuntu provides the facility to create new users who can be authorized to log on to the system. Let’s look at the different functions that can be performed with the help of \nuser management.\n\n1.1 Creating Users\n\nThe following steps need to be performed for the creation of users:\n\nStep 1 − Launch the user management console from the search menu. In the search menu, enter the keyword of users. \n\tThe User Accounts icon will then appear. Double-click on the User Accounts icon.\nStep 2 − The user management screen will then pop up as shown in the following screenshot. To perform any sort of user management, \n\twe first need to press the Unlock button and enter our administrator credentials.\nStep 3 − Enter the administrator credentials in the pop-up box which comes up and click the Authenticate button.\n\tOnce we click Authenticate, all the user management functions on the screen will become enabled.\nStep 4 − Click the plus button to create a user.\nStep 5 − Enter the user details. We can only create Standard and Administrator account types.\nStep 6 − Click the Add button to complete the operation of adding the user.\n\nEnabling the User Account\nWhen the user is created, the user account is disabled. This is because a password has not been associated with the account.\n\nFollowing are the steps to enable the user account.\n\nStep 1 − Click the Account disabled option. This will prompt for the password dialog box.\n\n\tWe have the option to either set a password, log in without a password, or enable the account. A good practice\n\tis to always set a password for an account.\n\nStep 2 − To set the password and click the Change button.\n\nStep 3 − The account will now be enabled. Log in using the newly created account.\n\nManaging User Permissions and Groups\n\nTo manage user permissions and groups, an additional package needs to be installed. Following are the steps to\nmanage user permissions and groups.\n\nStep 1 − Go to the search option and type the command keyword.\n\nStep 2 − The search result of Terminal appears. Click it to open the command prompt.\n\nStep 3 − Next, issue the following command.\n\nsudo apt-get install gnome-system-tools\nThe apt-get command line is used to install additional packages from the Internet for the Ubuntu system. Here, we are\ntelling Ubuntu that we want to install additional system tools so that we can manage user permissions and groups.\n\nStep 4 − We will then be prompted for the password of the current logged in account and to also confirm to download the\nnecessary packages for the installation. Enter the ‘Y’ option to proceed.\n\nStep 5 − Once the installation is complete, when we search for users in the search option in Ubuntu, we can see an\nadditional option of Users and Groups.\n\nStep 6 − Click the Users and Groups option. Now, there will be an additional option of user and groups.\n\nStep 7 − Click the Advanced settings button. We will be prompted to enter the password of the current logged on\nuser to authenticate. Enter the password and click the Authenticate button.\n\nStep 8 − In the next dialog box which appears, we will then be able to assign the required user privileges to the user.\n\nStep 9 − Now, if we click on the Groups option, we will see that it has the option to create and delete groups.\n\nStep 10 − Click on the Add button to add a group.\n\nStep 11 − In the next dialog box, we can provide a group name and assign members to that group.\n\nStep 12 − Finally, click the OK button to create the group.\n\n2. MYSQL iN UBUNTU:\n\nMySQL and Python are famous database and development software respectively. These are normally installed on \nLinux-based systems. Let’s see how we can get them installed on Ubuntu server environments.\n\nInstalling Python\n\nThe first thing to do is to find out what is the version of Python installed on the system. We can find this\nissuing the following command.\n\nPython –v\nWhere the –v option specifies to show what is the version of Python installed.\n\nThere is another way to see if Python is installed via the following commands.\n\nPython –V\n\nPython3 –V\nThe later command is used to see the version 3 of Python installed.\n\nIf we want to have the latest version of Python installed, then we need to issue the following statement.\n\nsudo apt-get install python3\nThe above command will download the necessary packages for Python and have it installed.\n\nInstalling MySQL\nTo install MySQL, the following steps need to be followed.\n\nStep 1 − Issue the apt-get command to ensure all operating system packages are up to date.\n\nsudo apt-get update\n\nStep 2 − Once all the packages have been updated, it is time to get the packages for MySQL.\n\nsudo apt-get install mysql-server\nThe above command will start the download of all the relevant packages for MySQL.\n\nOnce the download completes and the installation starts, the installer will first ask to configure a root\npassword.\n\nStep 3 − Enter the required password and click the OK button. It will also prompt to re-enter the password.\n\nStep 4 − To see the MySQL process running, run the following command.\n\nps –ef | grep mysql\nThe following screenshot shows mysqld which is the daemon process for mysql running in the background.\n\nStep 5 − To configure mysql, run the following command.\n\n/usr/bin/mysql_secure_installation\n\nIt prompts to enter the root password which was entered during the installation process.\n\nStep 6 − Enter the password and hit Enter.\n\nNow, it prompts on whether we want to change the root password.\n\nStep 7 − Enter ‘N’ for No and proceed.\n\nAgain, it prompts on whether we want to remove the Anonymous access.\n\nStep 8 − When connecting from other machines on this database, it is advised to keep the default options\nas ‘N’ for both anonymous users and disallow root login remotely.\n\nStep 9 − It is advised to provide the option as No for the options of Remove test database as well. We\ncan enter ‘Y’ to reload the privileges table.\n\nFinally, the configuration of MySQL will be complete.\n\n3. ENVIRONMENT VARIABLES SET UP IN UBUNTU:\n\nVariables in Unixes are case-sensitive. Global environment variables (available to ALL processes) are\nnamed in uppercase, with words joined with underscore (_), e.g., JAVA_HOME. Local variables (available\n to the current process only) are in lowercase.\n\nMost of the Unixes (Ubuntu and Mac OS X) use the so-called Bash shell. Under bash shell:\n\n1. To list all the environment variables, use the command \"env\" (or \"printenv\"). You could use \"set\" \nto list all the variables, including all local variables.\n2. To reference a variable, use $varname, with a prefix '$' (Windows uses %varname%).\n3. To print the value of a particular variable, use the command \"echo $varname\".\n4. To set an environment variable, use the command \"export varname=value\", which sets the variable and \nexports it to the global environment (available to other processes). Enclosed the value with double\nquotes if it contains spaces.\n5. To set a local variable, use the command \"varname=value\" (or \"set varname=value\"). Local variable is\navailable within this process only.\n6. To unset a local variable, use command \"varname=\", i.e., set to empty string (or \"unset varname\").\n7. Set an Environment Variable Permanently\n8. You can set an environment variable permanently by placing an export command in your Bash shell startup\nscript \"~/.bashrc\" (or \"~/.bash_profile\", or \"~/.profile\") of your home directory; or \"/etc/profile\"\nfor system-wide operations. Take note that files beginning with dot (.) is hidden by default. To display\nhidden files, use command \"ls -a\" or \"ls -al\".\n\nFor example, to add a directory to the PATH environment variable, add the following line at the end of\n\"~/.bash_profile\" (or \"~/.profile\"), under your home directory, or \"/etc/profile\".\n\nexport PATH=/usr/local/mysql/bin:$PATH\nSimilarly, You can set the CLASSPATH environment variables by adding the following line. For example,\n\nexport CLASSPATH=.:/usr/local/tomcat/lib/servlet-api.jar\nTake note that Bash shell uses colon (:) as the path separator; while windows use semi-colon (;).\n\nTo refresh the bash shell, issue a \"source\" command (or re-start the bash shell):\n\n// Refresh the bash shell\n$ source ~/.bashrc\n// or\n$ source ~/.bash_profile\n// or\n$ source /etc/profile\n\n4.  Java Applications and the Environment Variables PATH, CLASSPATH, JAVA_HOME\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n4.1 CLASSPATH\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nJava Archive (JAR) File\nFor ease of distribution, Java classes are often archived (zipped) together into a so-called JAR file.\nTo use a third-party Java package, you need to place the distributed JAR file in a location that is\navailable to the Java Compiler and Java Runtime.\n\nHow Classes are Found?\nJava Compiler (\"javac\"), Java Runtime (\"java\") and other Java tools searches for classes used in your\nprogram in this order:\n\nJava platform (bootstrap) classes: include system classes in core packages (java.*) and extension\npackages (javax.*) in \"rt.jar\" (runtime class), \"i18n.jar\" (internationalization class), charsets.jar,\n jre/classes, and others.\nJava Extension Directories: You can copy the external JAR files into Java Extension Directory.\nFor Windows, the Java Extension Directory is located at\n \"<JAVA_HOME>\\jre\\lib\\ext\" (e.g., \"c:\\Program Files\\Java\\jdk1.7.0_{xx}\\jre\\lib\\ext\").\nFor Mac, the JDK extension directories are \"/Library/Java/Extensions\" and \"/System/Library/Java/Extensions\".\nFor Ubuntu, the JDK extension directories are \n\"<JAVA_HOME>/jre/lib/ext\" (e.g., \"/usr/user/java/jdk1.7.0_{xx}/jre/lib/ext\") and \"/usr/java/packages/lib/ext\".\nThe location of Java's Extension Directories is kept in Java's System Property \"java.ext.dirs\". You can\n print its contents via System.out.println(System.getProperty(\"java.ext.dirs\")).\nUser classes search path (in short, class path): determined in the following order:\nDefaulted to the current working directory (.).\nEntries in the CLASSPATH environment variable, which overrides the default.\nEntries in the -cp (or -classpath) command-line option, which overrides the CLASSPATH environment variable.\nThe runtime command-line option -jar, which override all the above.\nThe user class paths are kept in Java System property \"java.class.path\".\nIt is recommended that you use the -cp (or -classpath) command-line option (customized for each of your \napplications), instead of setting a permanent CLASSPATH environment for all the Java applications. IDE \n(such as Eclipse/NetBeans) manages -cp (-classpath) for each of the applications and does not rely on the \nCLASSPATH environment.\nCannot Find Classes\nIf the Java Runtime (\"java\") cannot find the classes used in your program in all the above places, it will \nissue error \"Could not find or load main class xxxx\" (JDK 1.7) or \"java.lang.NoClassDefFoundError\" (Prior \nto JDK 1.7).\n\nSimilarly, Java Compiler (\"javac\") will issue compilation errors such as \"cannot find symbol\", \"package \ndoes not exist\".\n\nNotes: External native libraries (\".lib\", \".dll\", \".a\", \".so\") are to be found in a path in JRE's Property \n\"java.library.path\", which normally but not necessarily includes all the directories in the PATH environment \nvariable. Otherwise, you will get a runtime error \"java.lang.UnsatisfiedLinkError: no xxx in java.library.path\".\n\nCLASSPATH Environment Variable\nThe CLASSPATH environment variable could include directories (containing many class files) and JAR files \n(a single-file archive of class files). If CLASSPATH is not set, it is defaulted to the current directory. \nIf you set the CLASSPATH, it is important to include the current working directory (.). Otherwise, the current\ndirectory will not be searched.\n\nA common problem in running hello-world program is: CLASSPATH is set but does not include the current working\ndirectory. The current directory is therefore not searched, which results in \"Error: Could not find or load\nmain class Hello\". You can simply remove the CLASSPATH, and leave the class path defaulted to the current \ndirectory.\n\nFor a beginner, no explicit CLASSPATH setting is required. The default CLASSPATH setting of current directory\nis sufficient. Remove all CLASSPATH setting if there is any. However, if you have to set CLASSPATH, make\nsure that you include the current directory '.'.\n\nThe PATH environment variable (for searching the executable programs) is applicable to all applications; \nwhile CLASSPATH is used by Java only.\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n4.2 NOTES\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nJava is platform independent. Java classes run in Windows as well as Unixes - binary compatible.\n\n1. Unixes have many shells, such as the newer bash and the older csh, ksh. Windows have two shells: \n\tthe newer cmd.exe and the older command.com. Each shell come with its own set of commands, utilities,\nand its own scripting programming language.\n2. Unix's variable name is denoted as $varname, e.g., $CLASSPATH. Windows uses %varname%, e,g., \n\t%CLASSPATH%.\n3. Unix uses command \"printenv\" (print environment) or \"env\" to list all the environment variables. \n\tWindows uses command \"set\".\n4. Unix's PATH is set permanently in the login or shell initialization script (e.g., \"~/.login\",\n \t\"~/.profile\", \"~/.bashrc\", \"~/.bash_profile\", or \"/etc/profile\"). Windows' PATH is set permanently\n\tvia Control Panel ⇒ System ⇒ ....\n\tThe current directory is NOT included in the Unix's PATH implicitly. To run a program in the current\n\tdirectory, you need to issue \"./programName\" where \".\" denotes the current directory. It is recommended\n\tto include the current directory (.) in the PATH explicitly. On the other hand, current directory is\n\tincluded in Windows' PATH implicitly.\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n5. APACHE HADOOP INSTALLATION:\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nHadoop is supported by GNU/Linux platform and its flavors. Therefore, we have to install a Linux operating\nsystem for setting up Hadoop environment. In case you have an OS other than Linux, you can install a Virtualbox \nsoftware in it and have Linux inside the Virtualbox.\n\nPre-installation Setup\nBefore installing Hadoop into the Linux environment, we need to set up Linux using ssh (Secure Shell). Follow \nthe steps given below for setting up the Linux environment.\n\nCreating a User\nAt the beginning, it is recommended to create a separate user for Hadoop to isolate Hadoop file system from \nUnix file system. Follow the steps given below to create a user:\n\nOpen the root using the command “su”.\nCreate a user from the root account using the command “useradd username”.\nNow you can open an existing user account using the command “su username”.\nOpen the Linux terminal and type the following commands to create a user.\n\n$ su \n   password: \n# useradd hadoop \n# passwd hadoop \n   New passwd: \n   Retype new passwd \nSSH Setup and Key Generation\nSSH setup is required to do different operations on a cluster such as starting, stopping, distributed daemon \nshell operations. To authenticate different users of Hadoop, it is required to provide public/private key pair \nfor a Hadoop user and share it with different users.\n\nThe following commands are used for generating a key value pair using SSH. Copy the public keys form id_rsa.pub \nto authorized_keys, and provide the owner with read and write permissions to authorized_keys file respectively.\n\n$ ssh-keygen -t rsa \n$ cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \n$ chmod 0600 ~/.ssh/authorized_keys \nInstalling Java\nJava is the main prerequisite for Hadoop. First of all, you should verify the existence of java in your system \nusing the command “java -version”. The syntax of java version command is given below.\n\n$ java -version \nIf everything is in order, it will give you the following output.\n\njava version \"1.7.0_71\" \nJava(TM) SE Runtime Environment (build 1.7.0_71-b13) \nJava HotSpot(TM) Client VM (build 25.0-b02, mixed mode)  \nIf java is not installed in your system, then follow the steps given below for installing java.\n\nStep 1\n\nDownload java (JDK <latest version> - X64.tar.gz) by visiting the following link \nhttp://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads1880260.html.\n\nThen jdk-7u71-linux-x64.tar.gz will be downloaded into your system.\n\nStep 2\n\nGenerally you will find the downloaded java file in Downloads folder. Verify it and extract \nthe jdk-7u71-linux-x64.gz file using the following commands.\n\n$ cd Downloads/ \n$ ls \njdk-7u71-linux-x64.gz \n$ tar zxf jdk-7u71-linux-x64.gz \n$ ls \njdk1.7.0_71   jdk-7u71-linux-x64.gz \nStep 3\nTo make java available to all the users, you have to move it to the location “/usr/local/”. \nOpen root, and type the following commands.\n\n$ su \npassword: \n# mv jdk1.7.0_71 /usr/local/ \n# exit \nStep 4\nFor setting up PATH and JAVA_HOME variables, add the following commands to ~/.bashrc file.\n\nexport JAVA_HOME=/usr/local/jdk1.7.0_71 \nexport PATH=$PATH:$JAVA_HOME/bin \nNow apply all the changes into the current running system.\n\n$ source ~/.bashrc\nStep 5\nUse the following commands to configure java alternatives:\n\n# alternatives --install /usr/bin/java java usr/local/java/bin/java 2\n\n# alternatives --install /usr/bin/javac javac usr/local/java/bin/javac 2\n\n# alternatives --install /usr/bin/jar jar usr/local/java/bin/jar 2\n\n# alternatives --set java usr/local/java/bin/java\n\n# alternatives --set javac usr/local/java/bin/javac\n\n# alternatives --set jar usr/local/java/bin/jar\nNow verify the java -version command from the terminal as explained above.\n\nDownloading Hadoop\nDownload and extract Hadoop 2.4.1 from Apache software foundation using the following commands.\n\n$ su \npassword: \n# cd /usr/local \n# wget http://apache.claz.org/hadoop/common/hadoop-2.4.1/ \nhadoop-2.4.1.tar.gz \n# tar xzf hadoop-2.4.1.tar.gz \n# mv hadoop-2.4.1/* to hadoop/ \n# exit \nHadoop Operation Modes\nOnce you have downloaded Hadoop, you can operate your Hadoop cluster in one of the three supported modes:\n\nLocal/Standalone Mode : After downloading Hadoop in your system, by default, it is configured in a \n\t\t\tstandalone mode and can be run as a single java process.\n\nPseudo Distributed Mode : It is a distributed simulation on single machine. Each Hadoop daemon such \n\t\t\t  as hdfs, yarn, MapReduce etc., will run as a separate java process. This mode is \n\t\t\t  useful for development.\n\nFully Distributed Mode : This mode is fully distributed with minimum two or more machines as a \n\t\t\tcluster. We will come across this mode in detail in the coming chapters.\n\nInstalling Hadoop in Standalone Mode\nHere we will discuss the installation of Hadoop 2.4.1 in standalone mode.\n\nThere are no daemons running and everything runs in a single JVM. Standalone mode is suitable for running \nMapReduce programs during development, since it is easy to test and debug them.\n\nSetting Up Hadoop\nYou can set Hadoop environment variables by appending the following commands to ~/.bashrc file.\n\nexport HADOOP_HOME=/usr/local/hadoop \nBefore proceeding further, you need to make sure that Hadoop is working fine. Just issue the following command:\n\n$ hadoop version \nIf everything is fine with your setup, then you should see the following result:\n\nHadoop 2.4.1 \n\nSubversion https://svn.apache.org/repos/asf/hadoop/common -r 1529768 \nCompiled by hortonmu on 2013-10-07T06:28Z \nCompiled with protoc 2.5.0\nFrom source with checksum 79e53ce7994d1628b240f09af91e1af4 \nIt means your Hadoop's standalone mode setup is working fine. By default, Hadoop is configured to run \nin a non-distributed mode on a single machine.\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------\nStep 2: Hadoop Configuration\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------\nYou can find all the Hadoop configuration files in the location “$HADOOP_HOME/etc/hadoop”. It is \nrequired to make changes in those configuration files according to your Hadoop infrastructure.\n\n$ cd $HADOOP_HOME/etc/hadoop\nIn order to develop Hadoop programs in java, you have to reset the java environment variables in \nhadoop-env.sh file by replacing JAVA_HOME value with the location of java in your system.\n\nexport JAVA_HOME=/usr/local/jdk1.7.0_71\nThe following are the list of files that you have to edit to configure Hadoop.\n\ncore-site.xml\n\nThe core-site.xml file contains information such as the port number used for Hadoop instance, memory\nallocated for the file system, memory limit for storing the data, and size of Read/Write buffers.\n\nOpen the core-site.xml and add the following properties in between <configuration>, </configuration> tags.\n\n<configuration>\n\n   <property>\n      <name>fs.default.name</name>\n      <value>hdfs://localhost:9000</value> \n   </property>\n \n</configuration>\nhdfs-site.xml\n\nThe hdfs-site.xml file contains information such as the value of replication data, namenode path, and \ndatanode paths of your local file systems. It means the place where you want to store the Hadoop \ninfrastructure.\n\nLet us assume the following data.\n\ndfs.replication (data replication value) = 1 \n(In the below given path /hadoop/ is the user name. \nhadoopinfra/hdfs/namenode is the directory created by hdfs file system.) \nnamenode path = //home/hadoop/hadoopinfra/hdfs/namenode \n(hadoopinfra/hdfs/datanode is the directory created by hdfs file system.) \ndatanode path = //home/hadoop/hadoopinfra/hdfs/datanode \nOpen this file and add the following properties in between the <configuration> </configuration> tags \nin this file.\n\n<configuration>\n\n   <property>\n      <name>dfs.replication</name>\n      <value>1</value>\n   </property>\n    \n   <property>\n      <name>dfs.name.dir</name>\n      <value>file:///home/hadoop/hadoopinfra/hdfs/namenode </value>\n   </property>\n    \n   <property>\n      <name>dfs.data.dir</name> \n      <value>file:///home/hadoop/hadoopinfra/hdfs/datanode </value> \n   </property>\n       \n</configuration>\nNote: In the above file, all the property values are user-defined and you can make changes according\nto your Hadoop infrastructure.\n\nyarn-site.xml\n\nThis file is used to configure yarn into Hadoop. Open the yarn-site.xml file and add the following\nproperties in between the <configuration>, </configuration> tags in this file.\n\n<configuration>\n \n   <property>\n      <name>yarn.nodemanager.aux-services</name>\n      <value>mapreduce_shuffle</value> \n   </property>\n  \n</configuration>\nmapred-site.xml\n\nThis file is used to specify which MapReduce framework we are using. By default, Hadoop contains a\ntemplate of yarn-site.xml. First of all, it is required to copy the file from mapred-site.xml.template\nto mapred-site.xml file using the following command.\n\n$ cp mapred-site.xml.template mapred-site.xml \nOpen mapred-site.xml file and add the following properties in between the <configuration>, \n</configuration>tags in this file.\n\n<configuration>\n \n   <property> \n      <name>mapreduce.framework.name</name>\n      <value>yarn</value>\n   </property>\n   \n</configuration>\nVerifying Hadoop Installation\nThe following steps are used to verify the Hadoop installation.\n\nStep 1: Name Node Setup\nSet up the namenode using the command “hdfs namenode -format” as follows.\n\n$ cd ~ \n$ hdfs namenode -format \nThe expected result is as follows.\n\n10/24/14 21:30:55 INFO namenode.NameNode: STARTUP_MSG: \n/************************************************************ \nSTARTUP_MSG: Starting NameNode \nSTARTUP_MSG:   host = localhost/192.168.1.11 \nSTARTUP_MSG:   args = [-format] \nSTARTUP_MSG:   version = 2.4.1 \n...\n...\n10/24/14 21:30:56 INFO common.Storage: Storage directory \n/home/hadoop/hadoopinfra/hdfs/namenode has been successfully formatted. \n10/24/14 21:30:56 INFO namenode.NNStorageRetentionManager: Going to \nretain 1 images with txid >= 0 \n10/24/14 21:30:56 INFO util.ExitUtil: Exiting with status 0 \n10/24/14 21:30:56 INFO namenode.NameNode: SHUTDOWN_MSG: \n/************************************************************ \nSHUTDOWN_MSG: Shutting down NameNode at localhost/192.168.1.11 \n************************************************************/\nStep 2: Verifying Hadoop dfs\nThe following command is used to start dfs. Executing this command will start your Hadoop file system.\n\n$ start-dfs.sh \nThe expected output is as follows:\n\n10/24/14 21:37:56 \nStarting namenodes on [localhost] \nlocalhost: starting namenode, logging to /home/hadoop/hadoop\n2.4.1/logs/hadoop-hadoop-namenode-localhost.out \nlocalhost: starting datanode, logging to /home/hadoop/hadoop\n2.4.1/logs/hadoop-hadoop-datanode-localhost.out \nStarting secondary namenodes [0.0.0.0]\nStep 3: Verifying Yarn Script\nThe following command is used to start the yarn script. Executing this command will start your yarn daemons.\n\n$ start-yarn.sh \nThe expected output as follows:\n\nstarting yarn daemons \nstarting resourcemanager, logging to /home/hadoop/hadoop\n2.4.1/logs/yarn-hadoop-resourcemanager-localhost.out \nlocalhost: starting nodemanager, logging to /home/hadoop/hadoop\n2.4.1/logs/yarn-hadoop-nodemanager-localhost.out \nStep 4: Accessing Hadoop on Browser\nThe default port number to access Hadoop is 50070. Use the following url to get Hadoop services on browser.\n\nhttp://localhost:50070/\n\nStep 5: Verify All Applications for Cluster\nThe default port number to access all applications of cluster is 8088. Use the following url to \nvisit this service.\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n6. APACHE HIVE INSTALLATION:\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe following steps are required for installing Hive on your system. Let us assume the Hive \narchive is downloaded onto the /Downloads directory.\n\nExtracting and verifying Hive Archive\nThe following command is used to verify the download and extract the hive archive:\n\n$ tar zxvf apache-hive-0.14.0-bin.tar.gz\n$ ls\nOn successful download, you get to see the following response:\n\napache-hive-0.14.0-bin apache-hive-0.14.0-bin.tar.gz\nCopying files to /usr/local/hive directory\nWe need to copy the files from the super user “su -”. The following commands are used to copy the \nfiles from the extracted directory to the /usr/local/hive” directory.\n\n$ su -\npasswd:\n\n# cd /home/user/Download\n# mv apache-hive-0.14.0-bin /usr/local/hive\n# exit\nSetting up environment for Hive\nYou can set up the Hive environment by appending the following lines to ~/.bashrc file:\n\nexport HIVE_HOME=/usr/local/hive\nexport PATH=$PATH:$HIVE_HOME/bin\nexport CLASSPATH=$CLASSPATH:/usr/local/Hadoop/lib/*:.\nexport CLASSPATH=$CLASSPATH:/usr/local/hive/lib/*:.\nThe following command is used to execute ~/.bashrc file.\n\n$ source ~/.bashrc\nStep 5: Configuring Hive\nTo configure Hive with Hadoop, you need to edit the hive-env.sh file, which is placed in the \n$HIVE_HOME/conf directory. The following commands redirect to Hive config folder and copy the \ntemplate file:\n\n$ cd $HIVE_HOME/conf\n$ cp hive-env.sh.template hive-env.sh\nEdit the hive-env.sh file by appending the following line:\n\nexport HADOOP_HOME=/usr/local/hadoop\nHive installation is completed successfully. Now you require an external database server to \nconfigure Metastore. We use Apache Derby database.\n\nStep 6: Downloading and Installing Apache Derby\nFollow the steps given below to download and install Apache Derby:\n\nDownloading Apache Derby\nThe following command is used to download Apache Derby. It takes some time to download.\n\n$ cd ~\n$ wget http://archive.apache.org/dist/db/derby/db-derby-10.4.2.0/db-derby-10.4.2.0-bin.tar.gz\nThe following command is used to verify the download:\n\n$ ls\nOn successful download, you get to see the following response:\n\ndb-derby-10.4.2.0-bin.tar.gz\nExtracting and verifying Derby archive\nThe following commands are used for extracting and verifying the Derby archive:\n\n$ tar zxvf db-derby-10.4.2.0-bin.tar.gz\n$ ls\nOn successful download, you get to see the following response:\n\ndb-derby-10.4.2.0-bin db-derby-10.4.2.0-bin.tar.gz\nCopying files to /usr/local/derby directory\nWe need to copy from the super user “su -”. The following commands are used to copy the files \nfrom the extracted directory to the /usr/local/derby directory:\n\n$ su -\npasswd:\n# cd /home/user\n# mv db-derby-10.4.2.0-bin /usr/local/derby\n# exit\nSetting up environment for Derby\nYou can set up the Derby environment by appending the following lines to ~/.bashrc file:\n\nexport DERBY_HOME=/usr/local/derby\nexport PATH=$PATH:$DERBY_HOME/bin\nApache Hive\n18\nexport CLASSPATH=$CLASSPATH:$DERBY_HOME/lib/derby.jar:$DERBY_HOME/lib/derbytools.jar\nThe following command is used to execute ~/.bashrc file:\n\n$ source ~/.bashrc\nCreate a directory to store Metastore\nCreate a directory named data in $DERBY_HOME directory to store Metastore data.\n\n$ mkdir $DERBY_HOME/data\nDerby installation and environmental setup is now complete.\n\nStep 7: Configuring Metastore of Hive\nConfiguring Metastore means specifying to Hive where the database is stored. You can do this by \nediting the hive-site.xml file, which is in the $HIVE_HOME/conf directory. First of all, copy the\ntemplate file using the following command:\n\n$ cd $HIVE_HOME/conf\n$ cp hive-default.xml.template hive-site.xml\nEdit hive-site.xml and append the following lines between the <configuration> and </configuration> tags:\n\n<property>\n   <name>javax.jdo.option.ConnectionURL</name>\n   <value>jdbc:derby://localhost:1527/metastore_db;create=true </value>\n   <description>JDBC connect string for a JDBC metastore </description>\n</property>\nCreate a file named jpox.properties and add the following lines into it:\n\njavax.jdo.PersistenceManagerFactoryClass =\n\norg.jpox.PersistenceManagerFactoryImpl\norg.jpox.autoCreateSchema = false\norg.jpox.validateTables = false\norg.jpox.validateColumns = false\norg.jpox.validateConstraints = false\norg.jpox.storeManagerType = rdbms\norg.jpox.autoCreateSchema = true\norg.jpox.autoStartMechanismMode = checked\norg.jpox.transactionIsolation = read_committed\njavax.jdo.option.DetachAllOnCommit = true\njavax.jdo.option.NontransactionalRead = true\njavax.jdo.option.ConnectionDriverName = org.apache.derby.jdbc.ClientDriver\njavax.jdo.option.ConnectionURL = jdbc:derby://hadoop1:1527/metastore_db;create = true\njavax.jdo.option.ConnectionUserName = APP\njavax.jdo.option.ConnectionPassword = mine\nStep 8: Verifying Hive Installation\nBefore running Hive, you need to create the /tmp folder and a separate Hive folder in HDFS. Here, \nwe use the /user/hive/warehouse folder. You need to set write permission for these newly created \nfolders as shown below:\n\nchmod g+w\nNow set them in HDFS before verifying Hive. Use the following commands:\n\n$ $HADOOP_HOME/bin/hadoop fs -mkdir /tmp \n$ $HADOOP_HOME/bin/hadoop fs -mkdir /user/hive/warehouse\n$ $HADOOP_HOME/bin/hadoop fs -chmod g+w /tmp \n$ $HADOOP_HOME/bin/hadoop fs -chmod g+w /user/hive/warehouse\nThe following commands are used to verify Hive installation:\n\n$ cd $HIVE_HOME\n$ bin/hive\nOn successful installation of Hive, you get to see the following response:\n\nLogging initialized using configuration in \njar:file:/home/hadoop/hive-0.9.0/lib/hive-common-0.9.0.jar!/hive-log4j.properties \nHive history file=/tmp/hadoop/hive_job_log_hadoop_201312121621_1494929084.txt\n………………….\nhive>\nThe following sample command is executed to display all the tables:\n\nhive> show tables; \nOK \nTime taken: 2.798 seconds \nhive>\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n6.1 CONFIGURING HIVE DEFAULT METASTORE_DB TO MYSQL DATABASE\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nSTEP 1:\n\nINSTALL MYSQL SERVER: $ sudo apt-get install mysql-server\n\nSTEP 2: \n\nINSTALL MYSQL JAVA CONNECTOR: $ sudo apt-get install libmysql-java\n\nSTEP 3: CREATE SOFTLINK AS: $ ln -s /usr/share/java/mysql-connector-java.jar $HIVE_HOME/lib/mysql-connector-java.jar\n\nSTEP 4: Create the Initial database schema using the hive-schema-0.14.0.mysql.sql file \n\t( or the file corresponding to your installed version of Hive) located in the \n\t$HIVE_HOME/scripts/metastore/upgrade/mysql directory.\n\n\t$ mysql -u root -p\n \n\tEnter password:\n\tmysql> CREATE DATABASE metastore;\n\tmysql> USE metastore;\n\tmysql> SOURCE $HIVE_HOME/scripts/metastore/upgrade/mysql/hive-schema-0.14.0.mysql.sql;\n\nSTEP 5: You also need a MySQL user account for Hive to use to access the metastore. It is very \n\timportant to prevent this user account from creating or altering tables in the metastore \n\tdatabase schema.\n\n\tmysql> CREATE USER 'hduser'@'localhost' IDENTIFIED BY 'anmol2810'; \n\tmysql> GRANT all on *.* to 'hiveuser'@localhost identified by 'anmol2810';\n\tmysql>  flush privileges;\n\nSTEP 6:\n\nEDIT THE HIVE-SITE.XML FILE AS BELOW:\n\n<property>\n    <name>javax.jdo.option.ConnectionURL</name>\n    <value>jdbc:mysql://localhost:3306/hive_metastore_db?createDatabaseIfNotExist=true</value>\n    <description>JDBC connect string for a JDBC metastore</description>\n  </property>\n \n  <property>\n    <name>javax.jdo.option.ConnectionDriverName</name>\n    <value>com.mysql.jdbc.Driver</value>\n    <description>Driver class name for a JDBC metastore</description>\n  </property>\n \n  <property>\n    <name>javax.jdo.option.ConnectionUserName</name>\n    <value>root</value>\n    <description>username to use against metastore database</description>\n  </property>\n \n  <property>\n    <name>javax.jdo.option.ConnectionPassword</name>\n    <value>xxxxxx</value>\n    <description> specify your root password to use against metastore database</description>\n  </property>\n \n  <property>\n     <name>hive.metastore.warehouse.dir</name>\n     <value>hdfs://localhost:9000/user/hive/warehouse</value>\n     <description>location of default database for the warehouse</description>\n  </property>\n\n  <property>\n  <name>javax.jdo.option.ConnectionURL</name>\n  <value>jdbc:derby:;databaseName=file:///usr/lib/hive/metastore_db;create=true</value>\n  <description>JDBC connect string for a JDBC metastore</description>\n</property>\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n7. JDBC CONNECTIVITY TO HIVE:\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nJDBC Program\nThe JDBC program to create a table is given example.\n\nimport java.sql.SQLException;\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.sql.DriverManager;\n\npublic class HiveCreateTable {\n   private static String driverName = \"org.apache.hadoop.hive.jdbc.HiveDriver\";\n   \n   public static void main(String[] args) throws SQLException {\n   \n      // Register driver and create driver instance\n      Class.forName(driverName);\n      \n      // get connection\n      Connection con = DriverManager.getConnection(\"jdbc:hive://localhost:10000/userdb\", \"\", \"\");\n      \n      // create statement\n      Statement stmt = con.createStatement();\n      \n      // execute statement (EXAMPLE)\n      stmt.executeQuery(\"CREATE TABLE IF NOT EXISTS \"\n         +\" employee ( eid int, name String, \"\n         +\" salary String, destignation String)\"\n         +\" COMMENT ‘Employee details’\"\n         +\" ROW FORMAT DELIMITED\"\n         +\" FIELDS TERMINATED BY ‘\\t’\"\n         +\" LINES TERMINATED BY ‘\\n’\"\n         +\" STORED AS TEXTFILE;\");\n         \n      System.out.println(“ Table employee created.”);\n      con.close();\n   }\n}\n\nSave the program in a file named HiveCreateDb.java. The following commands are used to compile \nand execute this program.\n\n$ javac HiveCreateDb.java\n$ java HiveCreateDb\nOutput\nTable employee created.\nLoad Data Statement\nGenerally, after creating a table in SQL, we can insert data using the Insert statement. But in \nHive, we can insert data using the LOAD DATA statement.\n\nWhile inserting data into Hive, it is better to use LOAD DATA to store bulk records. There are \ntwo ways to load data: one is from local file system and second is from Hadoop file system.\n\nSyntax\nThe syntax for load data is as follows:\n\n\tLOAD DATA [LOCAL] INPATH 'filepath' [OVERWRITE] INTO TABLE tablename \n\t[PARTITION (partcol1=val1, partcol2=val2 ...)]\n\tLOCAL is identifier to specify the local path. It is optional.\n\tOVERWRITE is optional to overwrite the data in the table.\n\tPARTITION is optional.\n\nGiven below is the JDBC program to load given data into the table.\n\nimport java.sql.SQLException;\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.sql.DriverManager;\n\npublic class HiveLoadData {\n\n   private static String driverName = \"org.apache.hadoop.hive.jdbc.HiveDriver\";\n   \n   public static void main(String[] args) throws SQLException {\n   \n      // Register driver and create driver instance\n      Class.forName(driverName);\n      \n      // get connection\n      Connection con = DriverManager.getConnection(\"jdbc:hive://localhost:10000/userdb\", \"\", \"\");\n      \n      // create statement\n      Statement stmt = con.createStatement();\n      \n      // execute statement\n      stmt.executeQuery(\"LOAD DATA LOCAL INPATH '/home/user/sample.txt'\" + \"OVERWRITE INTO TABLE employee;\");\n      System.out.println(\"Load Data into employee successful\");\n      \n      con.close();\n   }\n}\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n8. SETTING UP HIVE SERVER 2 IN APACHE HIVE USING BEELINE AS A CLIENT INTERFACE\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\nOptional Environment Settings\n\nHIVE_SERVER2_THRIFT_BIND_HOST – Optional TCP host interface to bind to. Overrides the configuration\n\t\t\t\t file setting.\nHIVE_SERVER2_THRIFT_PORT – Optional TCP port number to listen on, default 10000. Overrides the \n\t\t\t\tconfiguration file setting.\n\nRunning in HTTP Mode\n\tHiveServer2 provides support for sending Thrift RPC messages over HTTP transport \n\t(Hive 0.13 onward, see HIVE-4752). This is particularly useful to support a proxying \n\tintermediary between the client and the server (for example, for load balancing or \n\tsecurity reasons). Currently, you can run HiveServer2 in either TCP mode or the HTTP mode, \n\tbut not in both. For the corresponding JDBC URL check this link: HiveServer2 Clients -- JDBC \n\tConnection URLs. Use the following settings to enable and configure HTTP mode:\n\nhive.server2.transport.mode\tbinary\tSet to http to enable HTTP transport mode\nhive.server2.thrift.http.port\t10001\tHTTP port number to listen on\nhive.server2.thrift.http.max.worker.threads\t500\tMaximum worker threads in the server pool\nhive.server2.thrift.http.min.worker.threads\t5\tMinimum worker threads in the server pool\nhive.server2.thrift.http.path\tcliservice\tThe service endpoint\n\nHow to Start:\n----------------------------------------------------------------\n$HIVE_HOME/bin/hiveserver2\nOR\n\n$HIVE_HOME/bin/hive --service hiveserver2\nUsage Message\nThe -H or --help option displays a usage message, for example:\n----------------------------------------------------------------\n$HIVE_HOME/bin/hive --service hiveserver2 -H\nStarting HiveServer2\nusage: hiveserver2\n -H,--help                        Print help information\n    --hiveconf <property=value>   Use value for given property\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n9. JDBC CONNECTIVITY TO HIVESERVER2 WITHOUT BEELINE (USING BINARY TRANSPORT SERVICE USING THRIFT SERVER)\n\t(NO SSL AND NO ENCRYPTION)\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nJDBC Client Sample Code\nimport java.sql.SQLException;\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.sql.DriverManager;\n \npublic class HiveJdbcClient {\n  private static String driverName = \"org.apache.hive.jdbc.HiveDriver\";\n \n  /**\n   * @param args\n   * @throws SQLException\n   */\n  public static void main(String[] args) throws SQLException {\n      try {\n      Class.forName(driverName);\n    } catch (ClassNotFoundException e) {\n      // TODO Auto-generated catch block\n      e.printStackTrace();\n      System.exit(1);\n    }\n    //replace \"hive\" here with the name of the user the queries should run as\n    Connection con = DriverManager.getConnection(\"jdbc:hive2://localhost:10000/default\", \"hive\", \"\");\n    Statement stmt = con.createStatement();\n    String tableName = \"testHiveDriverTable\";\n    stmt.execute(\"drop table if exists \" + tableName);\n    stmt.execute(\"create table \" + tableName + \" (key int, value string)\");\n    // show tables\n    String sql = \"show tables '\" + tableName + \"'\";\n    System.out.println(\"Running: \" + sql);\n    ResultSet res = stmt.executeQuery(sql);\n    if (res.next()) {\n      System.out.println(res.getString(1));\n    }\n       // describe table\n    sql = \"describe \" + tableName;\n    System.out.println(\"Running: \" + sql);\n    res = stmt.executeQuery(sql);\n    while (res.next()) {\n      System.out.println(res.getString(1) + \"\\t\" + res.getString(2));\n    }\n \n    // load data into table\n    // NOTE: filepath has to be local to the hive server\n    // NOTE: /tmp/a.txt is a ctrl-A separated file with two fields per line\n    String filepath = \"/tmp/a.txt\";\n    sql = \"load data local inpath '\" + filepath + \"' into table \" + tableName;\n    System.out.println(\"Running: \" + sql);\n    stmt.execute(sql);\n \n    // select * query\n    sql = \"select * from \" + tableName;\n    System.out.println(\"Running: \" + sql);\n    res = stmt.executeQuery(sql);\n    while (res.next()) {\n      System.out.println(String.valueOf(res.getInt(1)) + \"\\t\" + res.getString(2));\n    }\n \n    // regular hive query\n    sql = \"select count(1) from \" + tableName;\n    System.out.println(\"Running: \" + sql);\n    res = stmt.executeQuery(sql);\n    while (res.next()) {\n      System.out.println(res.getString(1));\n    }\n  }\n}");
        jScrollPane20.setViewportView(docTextArea);

        javax.swing.GroupLayout docPanelLayout = new javax.swing.GroupLayout(docPanel);
        docPanel.setLayout(docPanelLayout);
        docPanelLayout.setHorizontalGroup(
            docPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(docPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 1035, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        docPanelLayout.setVerticalGroup(
            docPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(docPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        mainTabPane.addTab("Documentation", docPanel);

        helpPanel.setBackground(new java.awt.Color(33, 146, 240));

        jTextArea8.setEditable(false);
        jTextArea8.setColumns(20);
        jTextArea8.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jTextArea8.setRows(5);
        jTextArea8.setText("This is a project tool which can be further extended to predict the outcome of any format of cricket matches may it be IPL or Twenty-20 or ODI or Test matches.\nFrontEnd of the project includes the following forms in order:\n\t1. FIRSTRUN\n\n\t2.  SIGNUP PAGE (CONNECTED TO MYSQL SERVER ON LOCALHOST: 127.0.0.1 IN PSEUDO DISTRIBUTED MODE ON SINGLE MACHINE)\n\t\t\n\t\tThe port assigned to MySQL SERVER is 3306 and the default database for authentication purpose of the user is CREDENTIALS\n\t\tDATABASE in the server. User 'HDUSER' with PASSWORD: anmol2810 is granted privileges to perform all operations WITH ADMIN \n\t\trights on all tables in the database \"CREDENTIALS\". The table used for storing credentials is \"USERACCOUNTS\"\n\t\n\t3. LOGIN PAGE () (CONNECTED TO MYSQL SERVER ON LOCALHOST: 127.0.0.1 IN PSEUDO DISTRIBUTED MODE ON SINGLE MACHINE)\n\t\t\n\t\tThe port assigned to MySQL SERVER is 3306 and the default database for authentication purpose of the user is CREDENTIALS\n\t\tDATABASE in the server. User 'HDUSER' with PASSWORD: anmol2810 is granted privileges to perform all operations WITH ADMIN \n\t\trights on all tables in the database \"CREDENTIALS\". The table used for storing credentials is \"USERACCOUNTS\"\n\n\t4. WELCOME: This page opens after succesful sign up or after successful login after establishing connection with MySQL server which listens\n\t\ton port 3306.\n\t\n\t5. DASHBOARD PAGE: Contains mapping to various windows\n\n\t6. DATAIMPORT PAGE: To Import raw data into HDFS (HADOOP)\n\n\t7. TASKWINDOW PAGE: All operations on HivveServer2 are performed on this page. HiveSERVER2 listens on port localhost:10000 \n\t\tor 127.0.0.1/10000");
        jScrollPane22.setViewportView(jTextArea8);

        javax.swing.GroupLayout helpPanelLayout = new javax.swing.GroupLayout(helpPanel);
        helpPanel.setLayout(helpPanelLayout);
        helpPanelLayout.setHorizontalGroup(
            helpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(helpPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 1053, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        helpPanelLayout.setVerticalGroup(
            helpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(helpPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        mainTabPane.addTab("Help", helpPanel);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(33, 146, 240));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MainFrame Task Window");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/imagePackage/aion_small.png"))); // NOI18N

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/imagePackage/help.png"))); // NOI18N

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/imagePackage/user.png"))); // NOI18N

        exitBtn.setBackground(new java.awt.Color(255, 255, 255));
        exitBtn.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        exitBtn.setText("X");
        exitBtn.setBorder(null);
        exitBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitBtnMouseExited(evt);
            }
        });
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        exitBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                exitBtnKeyReleased(evt);
            }
        });

        themeSelector.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        themeSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Default","Antique","Floral","Green","Khakhi","LightBlue","Turquoise"}));
        themeSelector.setBorder(null);
        themeSelector.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(33, 146, 240));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Background");

        themeBtn.setBackground(new java.awt.Color(33, 146, 240));
        themeBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        themeBtn.setForeground(new java.awt.Color(255, 255, 255));
        themeBtn.setText("OK");
        themeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                themeBtnMouseClicked(evt);
            }
        });

        maxBtn.setBackground(new java.awt.Color(255, 255, 255));
        maxBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        maxBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/imagePackage/max.png"))); // NOI18N
        maxBtn.setBorder(null);
        maxBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maxBtnMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                maxBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                maxBtnMouseEntered(evt);
            }
        });
        maxBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxBtnActionPerformed(evt);
            }
        });

        minBtn.setBackground(new java.awt.Color(255, 255, 255));
        minBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/imagePackage/min.png"))); // NOI18N
        minBtn.setBorder(null);
        minBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minBtnMouseExited(evt);
            }
        });
        minBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minBtnActionPerformed(evt);
            }
        });

        whichGuest.setEditable(false);
        whichGuest.setBackground(new java.awt.Color(250, 250, 250));
        whichGuest.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        whichGuest.setForeground(new java.awt.Color(33, 146, 240));
        whichGuest.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        whichGuest.setBorder(null);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(themeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(themeBtn)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(whichGuest, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(105, 105, 105)
                .addComponent(minBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(maxBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(whichGuest, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(minBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(themeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(themeBtn))
                        .addComponent(exitBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        backBtn.setBackground(new java.awt.Color(33, 146, 240));
        backBtn.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backBtnMouseExited(evt);
            }
        });
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bigPanelLayout = new javax.swing.GroupLayout(bigPanel);
        bigPanel.setLayout(bigPanelLayout);
        bigPanelLayout.setHorizontalGroup(
            bigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(bigPanelLayout.createSequentialGroup()
                .addGap(921, 921, 921)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(bigPanelLayout.createSequentialGroup()
                .addComponent(mainTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        bigPanelLayout.setVerticalGroup(
            bigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bigPanelLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(mainTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bigPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bigPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1123, 566));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBtnMouseClicked
        exitBtn.doClick();
    }//GEN-LAST:event_exitBtnMouseClicked

    private void exitBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBtnMouseEntered
        exitBtn.setBackground(Color.RED);
        exitBtn.setForeground(Color.WHITE);
    }//GEN-LAST:event_exitBtnMouseEntered

    private void exitBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBtnMouseExited
        exitBtn.setBackground(Color.WHITE);
        exitBtn.setForeground(Color.BLACK);
    }//GEN-LAST:event_exitBtnMouseExited

    private void exitBtnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exitBtnKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            exitBtn.doClick();
        }
    }//GEN-LAST:event_exitBtnKeyReleased

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        backBtn.doClick();
    }//GEN-LAST:event_backBtnMouseClicked

    private void backBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseEntered
        backBtn.setBackground(Color.BLUE);
        backBtn.setForeground(Color.WHITE);
    }//GEN-LAST:event_backBtnMouseEntered

    private void backBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseExited
        backBtn.setBackground(new java.awt.Color(33, 146, 240));
        backBtn.setForeground(Color.WHITE);
    }//GEN-LAST:event_backBtnMouseExited

    private void themeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themeBtnMouseClicked
        String theme = (String)themeSelector.getSelectedItem();
        if(theme.equals("Antique")){
            bigPanel.setBackground(new java.awt.Color(250,235,215));
        }
        if(theme.contains("Khakhi")){
            bigPanel.setBackground(new java.awt.Color(240,130,140));
        }
        if(theme.contains("LightBlue")){
            bigPanel.setBackground(new java.awt.Color(173,216,230));
        }
        if(theme.contains("Floral")){
            bigPanel.setBackground(new java.awt.Color(220,220,220));
        }
        if(theme.contains("Turquoise")){
            bigPanel.setBackground(new java.awt.Color(72,209,204));
        }
        if(theme.contains("Green")){
            bigPanel.setBackground(new java.awt.Color(152,251,152));
        }
        if(theme.contains("Default")){
            bigPanel.setBackground(new java.awt.Color(255,255,255));
        }
    }//GEN-LAST:event_themeBtnMouseClicked

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "GO BACK TO DASHBOARD",
                "MAINFRAME TASK WINDOW",
                JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if(x == JOptionPane.YES_OPTION){
            dispose();
        }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void maxBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxBtnActionPerformed
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }//GEN-LAST:event_maxBtnActionPerformed

    private void maxBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxBtnMouseEntered
        maxBtn.setBackground(Color.LIGHT_GRAY);
        maxBtn.setForeground(Color.WHITE);
    }//GEN-LAST:event_maxBtnMouseEntered

    private void maxBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxBtnMouseExited
        maxBtn.setBackground(Color.WHITE);
        maxBtn.setForeground(Color.WHITE);
    }//GEN-LAST:event_maxBtnMouseExited

    private void maxBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxBtnMouseClicked
        maxBtn.doClick();
    }//GEN-LAST:event_maxBtnMouseClicked

    private void minBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minBtnMouseClicked
        minBtn.doClick();
    }//GEN-LAST:event_minBtnMouseClicked

    private void minBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minBtnActionPerformed
        this.setPreferredSize(null);
        this.pack();
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_minBtnActionPerformed

    private void minBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minBtnMouseEntered
        minBtn.setBackground(Color.LIGHT_GRAY);
        minBtn.setForeground(Color.WHITE);
    }//GEN-LAST:event_minBtnMouseEntered

    private void minBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minBtnMouseExited
        minBtn.setBackground(Color.WHITE);
        minBtn.setForeground(Color.WHITE);
    }//GEN-LAST:event_minBtnMouseExited
String firstLine;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String filePath;
        filePath = Project1.filePath;
        File file = new File(filePath);
        
        try {
            BufferedReader read = new BufferedReader(new FileReader(file));
            try {
                firstLine = read.readLine().trim();
            } catch (IOException ex) {
                Logger.getLogger(JTable.class.getName()).log(Level.SEVERE, null, ex);
            }
            String[] columnsName;
            columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setColumnIdentifiers(columnsName);
            Object[] tableLines = read.lines().toArray();
            for(int i = 0; i < 30; i++){
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            for (int column = 0; column < jTable1.getColumnCount(); column++){
                TableColumn tableColumn = jTable1.getColumnModel().getColumn(column);
                int preferredWidth = tableColumn.getMinWidth();
                int maxWidth = tableColumn.getMaxWidth();
                for (int row = 0; row < jTable1.getRowCount(); row++){
                    TableCellRenderer cellRenderer = jTable1.getCellRenderer(row, column);
                    Component c = jTable1.prepareRenderer(cellRenderer, row, column);
                    int width = c.getPreferredSize().width + jTable1.getIntercellSpacing().width;
                    preferredWidth = Math.max(preferredWidth, width);
                    //  We've exceeded the maximum width, no need to check other rows
                    if (preferredWidth >= maxWidth){
                        preferredWidth = maxWidth;
                        break;
                    }
                }
 
                tableColumn.setPreferredWidth( preferredWidth );
            }
            showDataLabel.setVisible(true);
        } 
        catch (FileNotFoundException ex) {
            Logger.getLogger(JTable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        jButton2.doClick();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        jButton2.setBackground(Color.BLUE);
        jButton2.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        jButton2.setBackground(new java.awt.Color(33,146,240));
        jButton2.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new dataimport().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void matchStatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matchStatBtnActionPerformed
        if(sessionRadio.isSelected()){
            session = ((String)jComboBox5.getSelectedItem()).trim();
            session_year = Integer.valueOf(session);
        }
        if(cityRadio.isSelected()){
            city = ((String)jComboBox2.getSelectedItem()).trim();
        }else{city = "ANY";}
        if(teamRadio.isSelected()){
            team = ((String)jComboBox3.getSelectedItem()).trim();
        }else{team = "ANY";}
        if(tossRadio.isSelected()){
            toss = ((String)jComboBox4.getSelectedItem()).trim();
        }else{toss = "ANY";}
        System.out.println(session+ "  "+city+"  "+team+"  "+toss);
    }//GEN-LAST:event_matchStatBtnActionPerformed

    private void tossRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tossRadioActionPerformed
        if(tossRadio.isSelected()){
            jComboBox4.setEnabled(true);
        }
        else{
            jComboBox4.setEnabled(false);
            jComboBox4.setSelectedIndex(0);
        }
    }//GEN-LAST:event_tossRadioActionPerformed

    private void teamRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamRadioActionPerformed
        if(teamRadio.isSelected()){
            jComboBox3.setEnabled(true);
        }
        else{
            jComboBox3.setEnabled(false);
            jComboBox3.setSelectedIndex(0);
        }
    }//GEN-LAST:event_teamRadioActionPerformed

    private void cityRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityRadioActionPerformed
        if(cityRadio.isSelected()){
            jComboBox2.setEnabled(true);
        }
        else{
            jComboBox2.setEnabled(false);
            jComboBox2.setSelectedIndex(0);
        }
    }//GEN-LAST:event_cityRadioActionPerformed

    private void sessionRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionRadioActionPerformed
        if(sessionRadio.isSelected()){
            jComboBox5.setEnabled(true);
        }
        else{
            jComboBox5.setEnabled(false);
            jComboBox5.setSelectedIndex(0);
        }
    }//GEN-LAST:event_sessionRadioActionPerformed

    private void MatchesPlayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MatchesPlayBtnActionPerformed
        matchesPlayed.setText("");
        Connection con;
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            String sql;
            if(!(session_year == 0) && team == "ANY" && toss == "ANY" && city == "ANY"){
                sql = "select count(*) from matches where season = " + session_year +"";
            }
            else if(!(session_year == 0) && team == "ANY" && toss == "ANY" && city != "ANY"){
                sql = "select count(*) from matches where season = " + session_year +" AND "
                        + "city = '" + city + "'";
            }
            else if(!(session_year == 0) && team == "ANY" && toss != "ANY" && city == "ANY"){
                sql = "select count(*) from matches where season = " + session_year +" "
                        + "AND toss_winner ='" + toss +"'";
            }
            else if(!(session_year == 0) && team == "ANY" && toss != "ANY" && city != "ANY"){
                sql = "select count(*) from matches where season = " + session_year + " AND city = '" + city + "' AND "
                        + "toss_winner ='" + toss +"'";
            }
            else if(!(session_year == 0) && team != "ANY" && toss == "ANY" && city == "ANY"){
                sql = "select count(*) from matches where season = " + session_year + " AND "
                        + "(team1 = '"+ team +"' OR team2 = '"+ team +"')";
            }
            else if(!(session_year == 0) && team != "ANY" && toss == "ANY" && city != "ANY"){
                sql = "select count(*) from matches where season = " + session_year + " AND city = '" + city + "' AND"
                        + " (team1 = '"+ team +"' OR team2 = '"+ team +"')";
            }
            else if(!(session_year == 0) && team != "ANY" && toss != "ANY" && city == "ANY"){
                sql = "select count(*) from matches where season = " + session_year + " AND"
                        + " (team1 = '"+ team +"' OR team2 = '"+ team +"') AND toss_winner ='" + toss +"'";
            }
            else if(!(session_year == 0) && team != "ANY" && toss != "ANY" && city != "ANY"){
                sql = "select count(*) from matches where season = " + session_year + " AND city = '" + city + ""
                        + "' AND (team1 = '"+ team +"' OR team2 = '"+ team +"') AND toss_winner ='" + toss +"'";
            }
            
            else if(session_year == 0 && team == "ANY" && toss == "ANY" && city == "ANY"){
                sql = "select count(*) from matches";
            }
            else if(session_year == 0 && team == "ANY" && toss == "ANY" && city != "ANY"){
                sql = "select count(*) from matches where city = '" + city + "'";
            }
            else if(session_year == 0 && team == "ANY" && toss != "ANY" && city == "ANY"){
                sql = "select count(*) from matches where toss_winner ='" + toss +"'";
            }
            else if(session_year == 0 && team == "ANY" && toss != "ANY" && city != "ANY"){
                sql = "select count(*) from matches where city = '" + city + "' AND "
                        + "toss_winner ='" + toss +"'";
            }
            else if(session_year == 0 && team != "ANY" && toss == "ANY" && city == "ANY"){
                sql = "select count(*) from matches where (team1 = '"+ team +"' OR team2 = '"+ team +"')";
            }
            else if(session_year == 0 && team != "ANY" && toss == "ANY" && city != "ANY"){
                sql = "select count(*) from matches where city = '" + city + "' AND"
                        + " (team1 = '"+ team +"' OR team2 = '"+ team +"')";
            }
            else if(session_year == 0 && team != "ANY" && toss != "ANY" && city == "ANY"){
                sql = "select count(*) from matches where (team1 = '"+ team +"' OR team2 = '"+ team +"') AND toss_winner ='" + toss +"'";
            }
            else if(session_year == 0 && team != "ANY" && toss != "ANY" && city != "ANY"){
                sql = "select count(*) from matches where city = '" + city + ""
                        + "' AND (team1 = '"+ team +"' OR team2 = '"+ team +"') AND toss_winner ='" + toss +"'";
            }
            else{sql = "";}
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            if (res.next()) {
                matchesPlayed.setText(res.getString(1) +" matches");
                System.out.println(res.getString(1));
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_MatchesPlayBtnActionPerformed

    private void tossesWonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tossesWonBtnActionPerformed
        tossesWon.setText("");
        Connection con;
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            String sql;
            if("ANY".equals(team)){JOptionPane.showMessageDialog(null, "Team cannot be left unselected!");
            if(!"ANY".equals(toss)){JOptionPane.showMessageDialog(null, "Toss field cannot be selected!");}}
            else{
                if(!(session_year == 0) && !"ANY".equals(city)){
                    sql = "select count from season_city_count where season = " + session_year + " AND city = '" + city + "' AND "
                            + "toss_winner = '"+ team +"'";
                }
                if(!(session_year == 0) && "ANY".equals(city)){
                    sql = "select count from season_toss_count where season = " + session_year + " AND toss_winner = '"+ team +"'";
                }
                if(session_year == 0 && !"ANY".equals(city)){
                    sql = "select count* from city_team_count where city = '" + city + "' AND toss_winner = '"+ team +"'";
                }
                if(session_year == 0 && "ANY".equals(city)){
                    sql = "select count* from team_toss_count where toss_winner = '"+ team +"'";
                }
                else{sql = "";}
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                if (res.next()) {
                    tossesWon.setText(res.getString(1) +" tosses won");
                    System.out.println(res.getString(1));
                }
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_tossesWonBtnActionPerformed

    private void iplChampBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iplChampBtnActionPerformed
        iplChampion.setText("");
        if(cityRadio.isSelected() || tossRadio.isSelected() || tossRadio.isSelected()){
            JOptionPane.showMessageDialog(null, "Only year should be selected");
        }
        else{
            Connection con;
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                Statement stmt = con.createStatement();
                String sql;
                sql = "select winner from winner_season where season = " + session_year +"";
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                if (res.next()) {
                    iplChampion.setText(res.getString(1)+" is the winner of IPL "+ session_year);
                    System.out.println(res.getString(1));
                }
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        }
    }//GEN-LAST:event_iplChampBtnActionPerformed

    private void bigVictoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bigVictoryBtnActionPerformed
        biggestVictories.setText("");
        Connection con;
        String sql, sql_1;
        if(!(session_year ==0)){
            int i =0;
            sql = "select * from big_victories_runs where season = "+session_year+"";
            sql_1 = "select * from big_victories_wickets where season = "+session_year+"";
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                while (res.next()) {
                    i = i+1;
                    biggestVictories.setText(biggestVictories.getText() + i + ". " 
                            + res.getString(1) + " won by "+ res.getString(2) + " runs"
                        + " on "+ res.getString(3)+ " at "+ res.getString(4) + ", "
                                + "" + res.getString(5) +" in "+ res.getString(6)+ "\n");
                }
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql_1);
                ResultSet res = stmt.executeQuery(sql_1);
                while (res.next()) {
                    i = i+1;
                    biggestVictories.setText(biggestVictories.getText() + i + ". " +
                            res.getString(1) + " won by "+ res.getString(2) + " wickets"
                        + " on "+ res.getString(3)+ " at "+ res.getString(4) + ", " + 
                            res.getString(5) +" in "+ res.getString(6)+ "\n");
                }
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        }
    }//GEN-LAST:event_bigVictoryBtnActionPerformed

    private void playerOfMatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerOfMatchBtnActionPerformed
        playerOfMatch.setText("");
        if(teamRadio.isSelected() || tossRadio.isSelected()){
            JOptionPane.showMessageDialog(null, "Only CITY and SEASON are applicable as filters");
        }
        else{
            Connection con;
            String sql;
            String sql_1 = "ANY";
            if(!(session_year == 0) && !"ANY".equals(city)){
                sql = "select player_of_match, frequency, season, city from man_of_match_by_city "
                        + "where season = "+session_year+" and"
                        + " city = '"+ city +"'";
            }
            else if(!(session_year == 0) && "ANY".equals(city)){
                sql = "select player_of_match, frequency from man_of_match_season where season = "+ session_year +"";
            }
            else if((session_year == 0) && !"ANY".equals(city)){
                sql = "select player_of_match, frequency from man_of_match_venue where city = '"+ city +"'";
            }
            else {sql = "";}
            int i =0;
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                while (res.next()) {
                    i = i+1;
                    playerOfMatch.setText(playerOfMatch.getText() + i + ". " + res.getString(1) + " became player"
                            + " of the match: " + res.getString(2) + " times\n");
                }
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
            if(!"ANY".equals(sql_1)){
                try {
                    con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                    Statement stmt = con.createStatement();
                    System.out.println("Running: " + sql);
                    ResultSet res = stmt.executeQuery(sql_1);
                    while (res.next()) {
                        i = i+1;
                        playerOfMatch.setText(playerOfMatch.getText() + i + " " + res.getString(1) + " became player"
                            + " of the match: " + res.getString(2) + " times\n");
                    }
                }
                catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
            }
        }
    }//GEN-LAST:event_playerOfMatchBtnActionPerformed

    private void winnerRunBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winnerRunBtnActionPerformed
        winnerRun.setText(" ");
        if(tossRadio.isSelected()){
            JOptionPane.showMessageDialog(null, "Toss filter should not be selected.");
        }
        else{
            Connection con;
            String sql;
            if(!(session_year == 0) && !"ANY".equals(city) && !"ANY".equals(team)){
                sql = "select winner, win_by_runs,dated, venue, city from matches "
                        + "where win_by_runs > 50 and season = "+ session_year +" and city = '"+ city +"' "
                        + "and winner = '"+ team +"'";
            }
            else if(!(session_year == 0) && !"ANY".equals(city) && "ANY".equals(team)){
                sql = "select winner, win_by_runs,dated, venue, city from matches "
                        + "where win_by_runs > 50 and season = "+ session_year +" and city = '"+ city +"'";
            }
            else if(!(session_year == 0) && "ANY".equals(city) && !"ANY".equals(team)){
                sql = "select winner,win_by_runs, dated, venue, city from matches "
                        + "where win_by_runs > 50 and season = "+ session_year +" and winner = '"+ team +"'";
            }
            else if(!(session_year == 0) && "ANY".equals(city) && "ANY".equals(team)){
                sql = "select winner,win_by_runs ,dated, venue, city from matches "
                        + "where win_by_runs > 50 and season = "+ session_year +"";
            }
            else if(session_year == 0 && !"ANY".equals(city) && !"ANY".equals(team)){
                sql = "select winner, win_by_runs,dated, venue, city from matches "
                        + "where win_by_runs > 50 and city = '"+ city +"' "
                        + "and winner = '"+ team +"'";
            }
            else if(session_year == 0 && !"ANY".equals(city) && "ANY".equals(team)){
                sql = "select winner, win_by_runs,dated, venue, city from matches "
                        + "where win_by_runs > 50 and city = '"+ city +"'";
            }
            else if(session_year == 0 && "ANY".equals(city) && !"ANY".equals(team)){
                sql = "select winner, win_by_runs,dated, venue, city from matches "
                        + "where win_by_runs > 50 and winner = '"+ team +"'";
            }
            else if(session_year == 0 && "ANY".equals(city) && "ANY".equals(team)){
                sql = "select winner, win_by_runs,dated, venue, city from matches "
                        + "where win_by_runs > 50";
            }
            else {sql = "";}
        
            int i =0;
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                 while (res.next()) {
                    i = i+1;
                    winnerRun.setText(winnerRun.getText() + i + " " + res.getString(1) + " won by " + res.getString(2) + " "
                            + "runs on " + res.getString(3)+ " at " + res.getString(4)+ ", "+ res.getString(5) + " \n");
                }
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        }
    }//GEN-LAST:event_winnerRunBtnActionPerformed

    private void WinnerWicketBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WinnerWicketBtnActionPerformed
        winnerWicket.setText(" ");
        if(tossRadio.isSelected()){
            JOptionPane.showMessageDialog(null, "Toss filter should not be selected.");
        }
        else{
            Connection con;
            String sql;
            if(!(session_year == 0) && !"ANY".equals(city) && !"ANY".equals(team)){
                sql = "select winner, win_by_wickets, dated, venue, city from matches "
                        + "where win_by_wickets > 4 and season = "+ session_year +" and city = '"+ city +"' "
                        + "and winner = '"+ team +"'";
            }
            else if(!(session_year == 0) && !"ANY".equals(city) && "ANY".equals(team)){
                sql = "select winner, win_by_wickets,dated, venue, city from matches "
                        + "where win_by_wickets > 4 and season = "+ session_year +" and city = '"+ city +"'";
            }
            else if(!(session_year == 0) && "ANY".equals(city) && !"ANY".equals(team)){
                sql = "select winner,win_by_wickets, dated, venue, city from matches "
                        + "where win_by_wickets > 4 and season = "+ session_year +" and winner = '"+ team +"'";
            }
            else if(!(session_year == 0) && "ANY".equals(city) && "ANY".equals(team)){
                sql = "select winner,win_by_wickets ,dated, venue, city from matches "
                        + "where win_by_wickets > 4 and season = "+ session_year +"";
            }
            else if(session_year == 0 && !"ANY".equals(city) && !"ANY".equals(team)){
                sql = "select winner, win_by_wickets,dated, venue, city from matches "
                        + "where win_by_wickets > 4 and city = '"+ city +"' "
                        + "and winner = '"+ team +"'";
            }
            else if(session_year == 0 && !"ANY".equals(city) && "ANY".equals(team)){
                sql = "select winner, win_by_wickets,dated, venue, city from matches "
                        + "where win_by_wickets > 4 and city = '"+ city +"'";
            }
            else if(session_year == 0 && "ANY".equals(city) && !"ANY".equals(team)){
                sql = "select winner, win_by_wickets,dated, venue, city from matches "
                        + "where win_by_wickets > 4 and winner = '"+ team +"'";
            }
            else if(session_year == 0 && "ANY".equals(city) && "ANY".equals(team)){
                sql = "select winner, win_by_wickets,dated, venue, city from matches "
                        + "where win_by_wickets > 4";
            }
            else {sql = "";}
        
            int i =0;
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                while (res.next()) {
                    i = i+1;
                    winnerWicket.setText(winnerWicket.getText() + i + ". " + res.getString(1) + " won by " + res.getString(2) + " "
                            + "wickets on " + res.getString(3)+ " at " + res.getString(4)+ ", "+ res.getString(5) + " \n");
                }
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        }
    }//GEN-LAST:event_WinnerWicketBtnActionPerformed
String batsmanSelected1 = " ";
    private void batsmanSelectorBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batsmanSelectorBtn1ActionPerformed
        batsmanSelected1 = (String)batsmanSelector1.getSelectedItem();
        if (" ".equals(batsmanSelected1)){
            JOptionPane.showMessageDialog(null, "Please select a batsman!");
        }
    }//GEN-LAST:event_batsmanSelectorBtn1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        batsmanResult.setText(" ");
        Connection con;
        String sql;
        sql = "select winner, win_by_runs, dated, venue, city, season from matches where "
                + "player_of_match = '"+ batsmanSelected1 +"'";
        int i =0;
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            while (res.next()) {
                i = i+1;
                batsmanResult.setText(batsmanResult.getText() + i + ". " + batsmanSelected1 +" "
                        + "playing under "+ res.getString(1) +" became man of the match and "+ 
                        res.getString(1) + " won by " + res.getString(2) + " "
                        + "runs on " + res.getString(3)+ " at " + res.getString(4)+ ", "+ res.getString(5) + " \n");
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        batsmanResult.setText(" ");
        Connection con;
        String sql = "select * from batsman_records where batsman = '"+ batsmanSelected1 +"'";
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            while (res.next()) {
                batsmanResult.setText(batsmanResult.getText() + batsmanSelected1 +" has scored "+ res.getString(2) +" runs "
                        + "in all upto season 2017 which includes "+res.getString(3)+" sixes, "+res.getString(4)+ " fours, "
                +res.getString(5)+" threes, "+ res.getString(6) +" doubles and "+res.getString(7)+" singles.");
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton5ActionPerformed
static String highest_runs_batsman, match_id_batsman;
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        batsmanResult.setText(" ");
        Connection con;
        String sql, sql_1;
        sql = "select match_id ,batsman, runs, winner, dated, venue, city from hundreds_details where "
                + "batsman = '"+batsmanSelected1+"'";
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            while (res.next()) {
                match_id_batsman = res.getString(1);
                highest_runs_batsman = res.getString(2);
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        int match_id = Integer.parseInt(match_id_batsman);
        sql_1 = "select winner, dated, venue, city from matches where id = "+match_id+"";
        System.out.println(match_id_batsman);
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql_1);
            while (res.next()) {
                batsmanResult.setText(batsmanSelected1+ " scored "+ highest_runs_batsman+" runs "
                        + "when "+ res.getString(1)+", on "+ res.getString(2)+", " + "won the match"
                                + " at "+res.getString(3) +", " +res.getString(4));
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        batsmanResult.setText(" ");
        Connection con;
        String sql;
        sql = "select freq from batsman_match_count where batsman = '"+ batsmanSelected1+ "'";
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            while (res.next()) {
                batsmanResult.setText(batsmanSelected1+ " has played "+ res.getString(1) +" matches till 2017 in IPL");
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton8ActionPerformed

    private void bowlRdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bowlRdBtnActionPerformed
        if(bowlRdBtn.isSelected()){jComboBox_bwl_season.setEnabled(true);}
        else{jComboBox_bwl_season.setEnabled(false);}
    }//GEN-LAST:event_bowlRdBtnActionPerformed

    private void bowlRdBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bowlRdBtn1ActionPerformed
        if(bowlRdBtn1.isSelected()){jComboBox6.setEnabled(true);}
        else{jComboBox6.setEnabled(false);}
    }//GEN-LAST:event_bowlRdBtn1ActionPerformed

    private void bowlRdBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bowlRdBtn2ActionPerformed
        if(bowlRdBtn2.isSelected()){jComboBox7.setEnabled(true);}
        else{jComboBox7.setEnabled(false);}
    }//GEN-LAST:event_bowlRdBtn2ActionPerformed
String bowl_season_Str, bowl_location, bowlBatTeam, bowl_dismissal, bowler;
int bowl_season;
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(bowlRdBtn.isSelected()){
            bowl_season_Str = ((String)jComboBox_bwl_season.getSelectedItem()).trim();
            bowl_season = Integer.valueOf(bowl_season_Str);}
        else{bowl_season = 0;}
        if(bowlRdBtn1.isSelected()){bowl_location = ((String)jComboBox6.getSelectedItem()).trim();}
        else{bowl_location = "ANY";}
        if(bowlRdBtn2.isSelected()){bowlBatTeam = ((String)jComboBox7.getSelectedItem()).trim();}
        else{bowlBatTeam = "ANY";}
        if(bowlRdBtn3.isSelected()){bowl_dismissal = ((String)jComboBox8.getSelectedItem()).trim();}
        else{bowl_dismissal = "ANY";}
        if(bowlRdBtn4.isSelected()){bowler = ((String)jComboBox9.getSelectedItem()).trim();}
        else{bowler = "ANY";}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void concededRunsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concededRunsBtnActionPerformed
        jTextArea1.setText(" ");
        Connection con;
        String sql;
        if(bowlRdBtn2.isSelected()){JOptionPane.showMessageDialog(null, "Only season and location filters applicable");return;}
        if(bowl_season != 0 && !"ANY".equals(bowl_location)){
            sql = "select match_id, bowler, runs_given, winner, dated, venue, city, season from bowler_runs_faced_details "
                    + "where season = "+ bowl_season +" and city = '"+ bowl_location +"' LIMIT 15";}
        else if(bowl_season != 0 && "ANY".equals(bowl_location)){
            sql = "select match_id, bowler, runs_given, winner, dated, venue, city, season from bowler_runs_faced_details "
                    + "where season = "+ bowl_season +" LIMIT 15";}
        else if(bowl_season == 0 && !"ANY".equals(bowl_location)){
            sql = "select match_id, bowler, runs_given, winner, dated, venue, city, season from bowler_runs_faced_details "
                    + "where city = '"+ bowl_location +"' LIMIT 15";}
        else if(bowl_season == 0 && "ANY".equals(bowl_location)){
            sql = "select match_id, bowler, runs_given, winner, dated, venue, city, season from "
                    + "bowler_runs_faced_details LIMIT 15";}
        else{sql = "";}
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            int i = 0;
            while (res.next()) {
                i = i + 1;
                jTextArea1.setText(jTextArea1.getText() + i + ".  In " + res.getString(1) +"th "
                        + "match of IPL, "+ res.getString(2) + " conceded "+ res.getString(3)+ " "
                                + "runs when "+ res.getString(4) + " won the match on " + res.getString(5)+ " "
                                        + "at " + res.getString(6) + ", "+res.getString(7) + 
                        " in " + res.getString(8) +".\n");
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_concededRunsBtnActionPerformed

    private void concededRunsVenueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concededRunsVenueBtnActionPerformed
        jTextArea2.setText(" ");
        Connection con;
        String sql;
        if(bowlRdBtn2.isSelected() || bowlRdBtn.isSelected()){JOptionPane.showMessageDialog(null, "Only location filter applicable");return;}
        
        sql = "select match_id, bowler, runs_given, winner, dated, venue, city, season from bowler_runs_faced_details "
                    + "where city = '"+ bowl_location +"' LIMIT 15";
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            int i = 0;
            while (res.next()) {
                i = i + 1;
                jTextArea2.setText(jTextArea2.getText() + i + ".  In " + res.getString(1) +"th "
                        + "match of IPL, "+ res.getString(2) + " conceded "+ res.getString(3)+ " "
                                + "runs when "+ res.getString(4) + " won the match on " + res.getString(5)+ " "
                                        + "at " + res.getString(6) + ", "+res.getString(7) + 
                        " in " + res.getString(8) +".\n");
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_concededRunsVenueBtnActionPerformed

    private void concededRunsVenueBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concededRunsVenueBtn1ActionPerformed
        jTextArea3.setText(" ");
        Connection con;
        String sql;
        if(bowlRdBtn2.isSelected() || bowlRdBtn3.isSelected() || bowlRdBtn4.isSelected()){JOptionPane.showMessageDialog(null, "Only season and location filters applicable");return;}
        sql = "select match_id, bowler, runs_given, winner, dated, venue, city, season from bowler_runs_faced_details "
                    + "where season = "+ bowl_season +" LIMIT 15";
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            int i = 0;
            while (res.next()) {
                i = i + 1;
                jTextArea3.setText(jTextArea3.getText() + i + ".  In " + res.getString(1) +"th "
                        + "match of IPL, "+ res.getString(2) + " conceded "+ res.getString(3)+ " "
                                + "runs when "+ res.getString(4) + " won the match on " + res.getString(5)+ " "
                                        + "at " + res.getString(6) + ", "+res.getString(7) + 
                        " in " + res.getString(8) +".\n");
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_concededRunsVenueBtn1ActionPerformed

    private void concededRunsVenueBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concededRunsVenueBtn2ActionPerformed
        jTextArea4.setText(" ");
        String sql;
        Connection con;
        if(bowl_season != 0 && bowl_location != "ANY" && bowlBatTeam != "ANY" && bowl_dismissal != "ANY"){
            sql = "select * from wickets_details where season = "+ bowl_season +" and city = '" + bowl_location +"' and batting_team = '"+ bowlBatTeam +"' and dismissal_kind = '"+ bowl_dismissal +"'";
        }
        else if(bowl_season != 0 && bowl_location != "ANY" && bowlBatTeam != "ANY" && bowl_dismissal == "ANY"){
            sql = "select * from wickets_details where season = "+ bowl_season +" and city = '" + bowl_location +"' and batting_team = '"+ bowlBatTeam +"'";
        }
        else if(bowl_season != 0 && bowl_location != "ANY" && bowlBatTeam == "ANY" && bowl_dismissal != "ANY"){
            sql = "select * from wickets_details where season = "+ bowl_season +" and city = '" + bowl_location +"' and dismissal_kind = '"+ bowl_dismissal +"'";
        }
        else if(bowl_season != 0 && bowl_location != "ANY" && bowlBatTeam == "ANY" && bowl_dismissal == "ANY"){
            sql = "select * from wickets_details where season = "+ bowl_season +" and city = '" + bowl_location +"'";
        }
        else if(bowl_season != 0 && bowl_location == "ANY" && bowlBatTeam != "ANY" && bowl_dismissal != "ANY"){
            sql = "select * from wickets_details where season = "+ bowl_season +" and batting_team = '"+ bowlBatTeam +"' and dismissal_kind = '"+ bowl_dismissal +"'";
        }
        else if(bowl_season != 0 && bowl_location == "ANY" && bowlBatTeam != "ANY" && bowl_dismissal == "ANY"){
            sql = "select * from wickets_details where season = "+ bowl_season +" and batting_team = '"+ bowlBatTeam +"'";
        }
        else if(bowl_season != 0 && bowl_location == "ANY" && bowlBatTeam == "ANY" && bowl_dismissal != "ANY"){
            sql = "select * from wickets_details where season = "+ bowl_season +" and dismissal_kind = '"+ bowl_dismissal +"'";
        }
        else if(bowl_season != 0 && bowl_location == "ANY" && bowlBatTeam == "ANY" && bowl_dismissal == "ANY"){
            sql = "select * from wickets_details where season = "+ bowl_season +"";
        }
        else if(bowl_season == 0 && bowl_location != "ANY" && bowlBatTeam != "ANY" && bowl_dismissal != "ANY"){
            sql = "select * from wickets_details where city = '" + bowl_location +"' and batting_team = '"+ bowlBatTeam +"' and dismissal_kind = '"+ bowl_dismissal +"'";
        }
        else if(bowl_season == 0 && bowl_location != "ANY" && bowlBatTeam != "ANY" && bowl_dismissal == "ANY"){
            sql = "select * from wickets_details where city = '" + bowl_location +"' and batting_team = '"+ bowlBatTeam +"'";
        }
        else if(bowl_season == 0 && bowl_location != "ANY" && bowlBatTeam == "ANY" && bowl_dismissal != "ANY"){
            sql = "select * from wickets_details where city = '" + bowl_location +"' and dismissal_kind = '"+ bowl_dismissal +"'";
        }
        else if(bowl_season == 0 && bowl_location != "ANY" && bowlBatTeam == "ANY" && bowl_dismissal == "ANY"){
            sql = "select * from wickets_details where city = '" + bowl_location +"'";
        }
        else if(bowl_season == 0 && bowl_location == "ANY" && bowlBatTeam != "ANY" && bowl_dismissal != "ANY"){
            sql = "select * from wickets_details where batting_team = '"+ bowlBatTeam +"' and dismissal_kind = '"+ bowl_dismissal +"'";
        }
        else if(bowl_season == 0 && bowl_location == "ANY" && bowlBatTeam != "ANY" && bowl_dismissal == "ANY"){
            sql = "select * from wickets_details where batting_team = '"+ bowlBatTeam +"'";
        }
        else if(bowl_season == 0 && bowl_location == "ANY" && bowlBatTeam == "ANY" && bowl_dismissal != "ANY"){
            sql = "select * from wickets_details where dismissal_kind = '"+ bowl_dismissal +"'";
        }
        else if(bowl_season == 0 && bowl_location == "ANY" && bowlBatTeam == "ANY" && bowl_dismissal == "ANY"){
            sql = "select * from wickets_details";
        }
        else{sql = " ";}
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            int i = 0;
            while (res.next()) {
                i = i + 1;
                jTextArea4.setText(jTextArea4.getText() + i +". "+" In "+res.getString(1) +""
                        + "th match, "+res.getString(2)+" of "+ res.getString(6)+" dismissed"
                                + " "+res.getString(3)+" of "+res.getString(5)+" and "+res.getString(7)+""
                                        + " won the match on "+res.getString(8)+" at "
                        +res.getString(9)+" "+res.getString(10)+" in "+res.getString(11) + ".\n");
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_concededRunsVenueBtn2ActionPerformed

    private void bowlRdBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bowlRdBtn3ActionPerformed
        if(bowlRdBtn3.isSelected()){
            jComboBox8.setEnabled(true);
        }
        else{
            jComboBox8.setEnabled(false);
        }
    }//GEN-LAST:event_bowlRdBtn3ActionPerformed

    private void concededRunsVenueBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concededRunsVenueBtn3ActionPerformed
        jTextArea5.setText(" ");
        String sql;
        Connection con;
        if(!bowlRdBtn4.isSelected()){JOptionPane.showMessageDialog(null, "Bowler should be selected!");return;}
        else if(bowler != "ANY" && bowl_location != "ANY" && bowl_season != 0){
            sql = "select * from bowler_wickets_count_details where bowler = '"+bowler+"' and city = '"+bowl_location+"' and season = "+bowl_season+"";
        }
        else if(bowler != "ANY" && bowl_location != "ANY" && bowl_season == 0){
            sql = "select * from bowler_wickets_count_details where bowler = '"+bowler+"' and city = '"+bowl_location+"'";
        }
        else if(bowler != "ANY" && bowl_location == "ANY" && bowl_season != 0){
            sql = "select * from bowler_wickets_count_details where bowler = '"+bowler+"' and season = "+bowl_season+"";
        }
        else if(bowler != "ANY" && bowl_location == "ANY" && bowl_season == 0){
            sql = "select * from bowler_wickets_count_details where bowler = '"+bowler+"'";
        }
        else{
            sql = " ";
        }
        try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "hduser", "anmol2810");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            int i = 0;
            while (res.next()) {
                i = i + 1;
                jTextArea5.setText(jTextArea5.getText() + i +". "+" In "+res.getString(1) +""
                        + "th match, "+res.getString(2)+" took "+res.getString(3)+" wickets "
                                + "and "+res.getString(4)+" won the match at"
                        +res.getString(5)+", "+res.getString(6)+" in "+res.getString(7)+"\n");
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_concededRunsVenueBtn3ActionPerformed

    private void bowlRdBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bowlRdBtn4ActionPerformed
        if(bowlRdBtn4.isSelected()){
            bowlRdBtn2.setEnabled(false);
            bowlRdBtn3.setEnabled(false);
            jComboBox9.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Above 2 filters are disabled as they are not used here");
        }
        else{
            bowlRdBtn2.setEnabled(true);
            bowlRdBtn3.setEnabled(true);
            jComboBox9.setEnabled(false);
        }
    }//GEN-LAST:event_bowlRdBtn4ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if(jRadioButton1.isSelected()){
            jRadioButton2.setEnabled(false);
        }else{jRadioButton2.setEnabled(true);}
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if(jRadioButton2.isSelected()){
            jRadioButton1.setEnabled(false);
            jComboBox1.setEnabled(true);
        }else{jRadioButton1.setEnabled(true);jComboBox1.setEnabled(false);}
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(jRadioButton1.isSelected()){
            Connection con;
            String sql = "select team as TEAM, total as TOTAL, won as WON, lost as LOST, ties as TIES"
                   + ", noresult as NORESULT, winratio as WINRATIO from teams_record";
            //74332748129812762060053
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                jTable2.setModel(DbUtils.resultSetToTableModel(res));
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        }
        if(jRadioButton2.isSelected()){
            Connection con;
            String cons_season;
            cons_season = (String)jComboBox1.getSelectedItem();
            String sql = "select team as TEAM, total as TOTAL, won as WON, lost as LOST, ties as TIES"
                   + ", noresult as NORESULT, winratio as WINRATIO from teams_record_by_season "
                    + "where season = "+ cons_season +"";
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                jTable2.setModel(DbUtils.resultSetToTableModel(res));
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        position = 0;
        showImage(position);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        position = position - 1;
        if(position < 0){
            position = 0;
            JOptionPane.showMessageDialog(null, "Graphs begin here");
        }
        showImage(position);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        position = position + 1;
        if(position >= getImages().length){
            position = getImages().length - 1;
            JOptionPane.showMessageDialog(null, "Reached end of Graphs!");
        }
        showImage(position);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        position = 6;
        showImage(position);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        if(jRadioButton3.isSelected()){
            jRadioButton5.setEnabled(false);
            jComboBox10.setEnabled(true);
        }
        else{
            jComboBox10.setEnabled(false);
            jRadioButton5.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        if(jRadioButton5.isSelected()){
            jRadioButton3.setEnabled(false);
            jComboBox11.setEnabled(true);
        }
        else{
            jComboBox11.setEnabled(false);
            jRadioButton3.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButton5ActionPerformed
String domBatsman = "ANY"; 
String domBowler = "ANY";
    private void domApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domApplyActionPerformed
        if(jRadioButton5.isSelected()){
            domBowler = (String)jComboBox11.getSelectedItem();
            domBatsman = "ANY";
        }
        else if(jRadioButton3.isSelected()){
            domBatsman = (String)jComboBox10.getSelectedItem();
            domBowler = "ANY";
        }
        else{
            JOptionPane.showMessageDialog(null, "Please choose at least one filter");
        }
    }//GEN-LAST:event_domApplyActionPerformed

    private void domApply1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domApply1ActionPerformed
        Connection con;
        jTextArea6.setText(" ");
        if(!"ANY".equals(domBatsman) && "ANY".equals(domBowler)){
            String sql = "select * from batsman_balls_faced where batsman = '"+domBatsman+"'";
            String sql1 = "select * from batsman_records where batsman = '"+domBatsman+"'";
            String sql2 = "select * from batsman_strike_rate where batsman = '"+domBatsman+"'";
            String sql3 = "select * from hundreds_details where batsman = '"+domBatsman+"'";
            String sql4 = "select * from fifties_details where batsman = '"+domBatsman+"'";
            String sql5 = "select * from batsman_total_runs where batsman = '"+domBatsman+"'";
            try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql5);
            ResultSet res = stmt.executeQuery(sql5);
            int i = 0;
            while (res.next()) {
                jTextArea6.setText(jTextArea6.getText() + domBatsman + " has scored a total of "+res.getString(2)+ " runs in IPL\n");
            }
            stmt = con.createStatement();
            System.out.println("Running: " + sql);
            res = stmt.executeQuery(sql);
            jTextArea6.setText(jTextArea6.getText() +"\n");
            i = 0;
            while (res.next()) {
                i = i + 1;
                jTextArea6.setText(jTextArea6.getText() + domBatsman + " has faced a total of "+res.getString(2)+ " "
                        + "deliveries in IPL\n");
            }
            stmt = con.createStatement();
            System.out.println("Running: " + sql2);
            res = stmt.executeQuery(sql2);
            jTextArea6.setText(jTextArea6.getText() +"\n");
            i = 0;
            while (res.next()) {
                i = i + 1;
                jTextArea6.setText(jTextArea6.getText() + domBatsman + " has batting strike rate of "+res.getString(2)+ " "
                        + "in IPL upto 2017\n");
            }
            stmt = con.createStatement();
            System.out.println("Running: " + sql3);
            res = stmt.executeQuery(sql3);
            jTextArea6.setText(jTextArea6.getText() +"\n");
            i = 0;
            while (res.next()) {
                i = i + 1;
                jTextArea6.setText(jTextArea6.getText() + i + ". In " + res.getString(1)+ "th match of IPL, "+domBatsman + 
                        " scored a ton of "+res.getString(3)+ " where " + res.getString(4) + " won the match on "+res.getString(5)+
                        " at "+res.getString(6)+", "+res.getString(7)+"\n");
            }
            stmt = con.createStatement();
            System.out.println("Running: " + sql4);
            res = stmt.executeQuery(sql4);
            jTextArea6.setText(jTextArea6.getText() +"\n");
            i = 0;
            while (res.next()) {
                i = i + 1;
                jTextArea6.setText(jTextArea6.getText() + i + ". In " + res.getString(1)+ "th match of IPL, "+domBatsman + 
                        " scored "+res.getString(3)+ " runs where " + res.getString(4) + " won the match on "+res.getString(5)+
                        " at "+res.getString(6)+", "+res.getString(7)+".\n");
            }
            stmt = con.createStatement();
            System.out.println("Running: " + sql1);
            res = stmt.executeQuery(sql1);
            jTextArea6.setText(jTextArea6.getText() +"\n");
            i = 0;
            
            while (res.next()) {
                i = i + 1;
                jTextArea6.setText(jTextArea6.getText() + i + ". "+ res.getString(1)+ "'s "
                        + "record total runs of "+ res.getString(2)+ " includes " + 
                        res.getString(3)+" sixes in all, "+res.getString(4)+" "
                                + "fours, and " +res.getString(5)+" threes, "+res.getString(6)+ 
                        " doubles, "+res.getString(7)+" singles.\n");
            }
        }
        catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        }
        else if("ANY".equals(domBatsman) && !"ANY".equals(domBowler)){
            jTextArea6.setText(" ");
            String sql = "select * from bowler_wickets where bowler = '"+domBowler+"'";
            String sql1 = "select * from bowler_total_runs where bowler = '"+domBowler+"'";
            String sql2 = "select * from bowler_strike_rate where bowler = '"+domBowler+"'";
            String sql3 = "select * from bowler_runs_faced_details where bowler = '"+domBowler+"' limit 5;";
            try {
            con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
            //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
            Statement stmt = con.createStatement();
            System.out.println("Running: " + sql);
            ResultSet res = stmt.executeQuery(sql);
            jTextArea6.setText(jTextArea6.getText() +"\n");
            int i = 0;
            while (res.next()) {
                jTextArea6.setText(jTextArea6.getText() + domBowler + " has taken a record wickets of "+
                        res.getString(2)+ " in IPL\n");
            }
            stmt = con.createStatement();
            System.out.println("Running: " + sql1);
            res = stmt.executeQuery(sql1);
            jTextArea6.setText(jTextArea6.getText() +"\n");
            while (res.next()) {
                jTextArea6.setText(jTextArea6.getText() + domBowler + " has given a total of "+
                        res.getString(2)+ " runs in IPL so far\n");
            }
            stmt = con.createStatement();
            System.out.println("Running: " + sql2);
            res = stmt.executeQuery(sql2);
            jTextArea6.setText(jTextArea6.getText() +"\n");
            while (res.next()) {
                jTextArea6.setText(jTextArea6.getText() + domBowler + " has a bowling strike rate of "+
                        res.getString(2)+ " in IPL so far\n");
            }
            stmt = con.createStatement();
            System.out.println("Running: " + sql3);
            res = stmt.executeQuery(sql3);
            jTextArea6.setText(jTextArea6.getText() +"\n '"+ domBowler +"'s MOST EXPENSIVE MATCHES INCLUDE: \n\n");
            i = 0;
            while (res.next()) {
                jTextArea6.setText(jTextArea6.getText() + i+ ". In "+res.getString(1)+ "th match of IPL, "+domBowler+" gave "
                +res.getString(3)+" runs where "+res.getString(4)+ " won the match played on "+res.getString(5)+" at "
                +res.getString(6)+", "+res.getString(7)+" in "+res.getString(8)+".\n");
            }
        }
         catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        }   
    }//GEN-LAST:event_domApply1ActionPerformed

    private void teamPrRd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamPrRd1ActionPerformed
        if(teamPrRd1.isSelected()){
            jComboYear.setEnabled(true);
            teamPrRd2.setEnabled(true);
            jComboTeam.setEnabled(true);
        }
        else{
            jComboYear.setEnabled(false);
            teamPrRd2.setEnabled(false);
            jComboTeam.setEnabled(false);
        }
    }//GEN-LAST:event_teamPrRd1ActionPerformed

    private void teamPrRd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamPrRd2ActionPerformed
        if(teamPrRd2.isSelected()){
            jComboTeam.setEnabled(true);
        }
        else{
            jComboTeam.setEnabled(false);
        }
    }//GEN-LAST:event_teamPrRd2ActionPerformed
int teamPrYear; String teamPrTeam;
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        teamArea.setText("TEAM STATISTICS:\n\n");
        Connection con;
        if(teamPrRd1.isSelected() && teamPrRd2.isSelected()){
            String teamPrYear_Str = ((String)jComboYear.getSelectedItem()).trim();
            teamPrYear = Integer.valueOf(teamPrYear_Str);
            teamPrTeam = ((String)jComboTeam.getSelectedItem()).trim();
            
            String sql = "select * from toss_wins_by_year where season "
                    + "= "+teamPrYear+" and toss_winner = '"+teamPrTeam+"'";
            
            String sql1 = "select * from toss_and_match_winner where season "
                    + "= "+teamPrYear+" and toss_winner = '"+teamPrTeam+"'";
            
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                teamArea.setText(teamArea.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    teamArea.setText(teamArea.getText() + "In " + res.getString(1) + " IPL Season, "+res.getString(3) + 
                            " won the toss "+ res.getString(2)+" times.\n\n");
                }
                teamArea.setText(teamArea.getText() +"\n");
                stmt = con.createStatement();
                System.out.println("Running: " + sql1);
                res = stmt.executeQuery(sql1);
                teamArea.setText(jTextArea6.getText() +"\n");
                while (res.next()) {
                    i = i+1;
                    teamArea.setText(teamArea.getText()+ i + ". In " + res.getString(2) + " IPL Season,"
                            + " "+ res.getString(3) + " won the toss and also won the match by"
                                    + " "+ res.getString(5)+" runs and "+res.getString(6)+" "
                                            + "wickets on "+res.getString(7)+", at "+
                            res.getString(8)+", "+res.getString(9)+"\n");
                }
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
        }
            
        else if(teamPrRd1.isSelected()){
            String teamPrYear_Str = ((String)jComboYear.getSelectedItem()).trim();
            teamPrYear = Integer.valueOf(teamPrYear_Str);
            String sql = "select * from toss_wins_by_year where season  "
                    + "= "+teamPrYear+"";
            
            String sql1 = "select * from toss_and_match_winner where season "
                    + "= "+teamPrYear+"";
            
            try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                teamArea.setText(teamArea.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    teamArea.setText(teamArea.getText() + "In " + res.getString(1) + " IPL Season, "+res.getString(3) + 
                            " won the toss "+ res.getString(2)+" times.\n\n");
                }
                teamArea.setText(teamArea.getText() +"\n");
                stmt = con.createStatement();
                System.out.println("Running: " + sql1);
                res = stmt.executeQuery(sql1);
                teamArea.setText(jTextArea6.getText() +"\n");
                while (res.next()) {
                    i = i+1;
                    teamArea.setText(teamArea.getText()+ i + ". In " + res.getString(2) + " IPL Season,"
                            + " "+ res.getString(3) + " won the toss and also won the match by"
                                    + " "+ res.getString(5)+" runs and "+res.getString(6)+" "
                                            + "wickets on "+res.getString(7)+", at "+
                            res.getString(8)+", "+res.getString(9)+"\n");
                }
            }
            catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
            
        }
        else {
            JOptionPane.showMessageDialog(null, "Season necessary to be chosen for analysis");
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        MatchTeam = ((String)jComboBox12.getSelectedItem()).trim();
        jTextArea9.setText(" ");
        Connection con;
        String sql = "select * from best_scores_teams where winner = '"+ MatchTeam +"'";
        try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                teamArea.setText(teamArea.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    i = i + 1;
                    jTextArea9.setText(jTextArea9.getText() + i + ". In " + res.getString(1) + "th match of IPL, "
                            + res.getString(6) +", with a score of "+res.getString(9)+ " beat "+res.getString(2) 
                            + " with a score of "+ res.getString(3)+" on "+ res.getString(5) + 
                            " at "+ res.getString(7) +", "+ res.getString(8) 
                            + " in "+ res.getString(4) +".\n");
                }
        }
         catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        MatchTeam = ((String)jComboBox12.getSelectedItem()).trim();
        jTextArea9.setText(" ");
        Connection con;
        String sql = "select * from best_scores_teams where batting_team = '"+ MatchTeam +"'";
        try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                teamArea.setText(teamArea.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    i = i + 1;
                    jTextArea9.setText(jTextArea9.getText() + i + "In " + res.getString(1) + "th match of IPL, "
                            + res.getString(6) +", with a score of "+res.getString(9)+ " beat "+res.getString(2) 
                            + " with a score of "+ res.getString(3)+" on "+ res.getString(5) + 
                            " at "+ res.getString(7) +", "+ res.getString(8) 
                            + " in "+ res.getString(4) +".\n");
                }
        }
         catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton16ActionPerformed
String MatchTeam;
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        MatchTeam = ((String)jComboBox12.getSelectedItem()).trim();
        jTextArea9.setText(" ");
        Connection con;
        String sql = "select * from team_bat_records_details where winner = '"+ MatchTeam +"'";
        try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                teamArea.setText(teamArea.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    i = i + 1;
                    jTextArea9.setText(jTextArea9.getText() + i + ". In " + res.getString(1) + "th match of IPL, "
                            + res.getString(6) +", with a score of "+res.getString(9)+ " beat "+res.getString(2) 
                            + " with a score of "+ res.getString(3)+" on "+ res.getString(5) + 
                            " at "+ res.getString(7) +", "+ res.getString(8) 
                            + " in "+ res.getString(4) +".\n");
                }
        }
         catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}                
    }//GEN-LAST:event_jButton14ActionPerformed
String MatchCity;
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        MatchCity = ((String)jComboBox13.getSelectedItem()).trim();
        jTextArea10.setText(" ");
        Connection con;
        String sql = "select * from team_bat_records_details where city = '"+ MatchCity +"'";
        try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                teamArea.setText(teamArea.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    i = i + 1;
                    jTextArea10.setText(jTextArea10.getText() + i + ". In " + res.getString(1) + "th match of IPL, "
                            + res.getString(6) +", with a score of "+res.getString(9)+ " beat "+res.getString(2) 
                            + " with a score of "+ res.getString(3)+" on "+ res.getString(5) + 
                            " at "+ res.getString(7) +", "+ res.getString(8) 
                            + " in "+ res.getString(4) +".\n");
                }
        }
         catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        MatchCity = ((String)jComboBox13.getSelectedItem()).trim();
        jTextArea10.setText(" ");
        Connection con;
        String sql = "select * from best_scores_teams where city = '"+ MatchCity +"'";
        try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                teamArea.setText(teamArea.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    i = i + 1;
                    jTextArea10.setText(jTextArea10.getText() + i + ". In " + res.getString(1) + "th match of IPL, "
                            + res.getString(6) +", with a score of "+res.getString(9)+ " beat "+res.getString(2) 
                            + " with a score of "+ res.getString(3)+" on "+ res.getString(5) + 
                            " at "+ res.getString(7) +", "+ res.getString(8) 
                            + " in "+ res.getString(4) +".\n");
                }
        }
         catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        MatchCity = ((String)jComboBox13.getSelectedItem()).trim();
        jTextArea10.setText(" ");
        Connection con;
        String sql = "select * from team_bat_records_details where city = '"+ MatchCity +"'";
        try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                teamArea.setText(teamArea.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    i = i + 1;
                    jTextArea10.setText(jTextArea10.getText() + i + ". In " + res.getString(1) + "th match of IPL, "
                            + res.getString(6) +", with a score of "+res.getString(9)+ " beat "+res.getString(2) 
                            + " with a score of "+ res.getString(3)+" on "+ res.getString(5) + 
                            " at "+ res.getString(7) +", "+ res.getString(8) 
                            + " in "+ res.getString(4) +".\n");
                }
        }
         catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton19ActionPerformed
int MatchYear;
    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        String MatchYear_tmp = ((String)jComboBox14.getSelectedItem()).trim();
        MatchYear = Integer.valueOf(MatchYear_tmp);
        jTextArea11.setText(" ");
        Connection con;
        String sql = "select * from team_bat_records_details where season = "+ MatchYear +"";
        try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                jTextArea11.setText(jTextArea11.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    i = i + 1;
                    jTextArea11.setText(jTextArea11.getText() + i + ". In " + res.getString(1) + "th match of IPL, "
                            + res.getString(6) +", with a score of "+res.getString(9)+ " beat "+res.getString(2) 
                            + " with a score of "+ res.getString(3)+" on "+ res.getString(5) + 
                            " at "+ res.getString(7) +", "+ res.getString(8) 
                            + " in "+ res.getString(4) +".\n");
                }
        }
         catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        String MatchYear_tmp = ((String)jComboBox14.getSelectedItem()).trim();
        MatchYear = Integer.valueOf(MatchYear_tmp);
        jTextArea11.setText(" ");
        Connection con;
        String sql = "select * from best_scores_teams where season = "+ MatchYear +"";
        try {
                con = DriverManager.getConnection("jdbc:hive2://localhost:10000/default", "hduser", "anmol2810");
                //con = DriverManager.getConnection("jdbc:mysql://localhost/ipl?useSSL=false", "cloudtran", "cloudtran");
                Statement stmt = con.createStatement();
                System.out.println("Running: " + sql);
                ResultSet res = stmt.executeQuery(sql);
                jTextArea11.setText(jTextArea11.getText() +"\n");
                int i = 0;
                while (res.next()) {
                    i = i + 1;
                    jTextArea11.setText(jTextArea11.getText() + i + ". In " + res.getString(1) + "th match of IPL, "
                            + res.getString(6) +", with a score of "+res.getString(9)+ " beat "+res.getString(2) 
                            + " with a score of "+ res.getString(3)+" on "+ res.getString(5) + 
                            " at "+ res.getString(7) +", "+ res.getString(8) 
                            + " in "+ res.getString(4) +".\n");
                }
        }
         catch (SQLException ex) {Logger.getLogger(taskwindow.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_jButton21ActionPerformed
String session = "ANY";
String city, team, toss;
int session_year = 0;
int xMouse, yMouse;    
public void close(){
        WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(taskwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(taskwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(taskwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(taskwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new taskwindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MatchesPlayBtn;
    private javax.swing.JButton WinnerWicketBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextArea batsmanResult;
    private javax.swing.JComboBox<String> batsmanSelector1;
    private javax.swing.JButton batsmanSelectorBtn1;
    private javax.swing.JPanel bigPanel;
    private javax.swing.JButton bigVictoryBtn;
    private javax.swing.JTextArea biggestVictories;
    private javax.swing.JRadioButton bowlRdBtn;
    private javax.swing.JRadioButton bowlRdBtn1;
    private javax.swing.JRadioButton bowlRdBtn2;
    private javax.swing.JRadioButton bowlRdBtn3;
    private javax.swing.JRadioButton bowlRdBtn4;
    private javax.swing.JScrollPane bowlingAnalysisScrollPanel;
    private javax.swing.JRadioButton cityRadio;
    private javax.swing.JButton concededRunsBtn;
    private javax.swing.JButton concededRunsVenueBtn;
    private javax.swing.JButton concededRunsVenueBtn1;
    private javax.swing.JButton concededRunsVenueBtn2;
    private javax.swing.JButton concededRunsVenueBtn3;
    private javax.swing.JPanel dataModelingPanel;
    private javax.swing.JScrollPane dataModelingScrollPane;
    private javax.swing.JPanel dataOverviewPanel;
    private javax.swing.JPanel docPanel;
    private javax.swing.JTextArea docTextArea;
    private javax.swing.JButton domApply;
    private javax.swing.JButton domApply1;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel graphLabel;
    private javax.swing.JPanel graphsPanel;
    private javax.swing.JPanel helpPanel;
    private javax.swing.JPanel importDataPanel;
    private javax.swing.JButton iplChampBtn;
    private javax.swing.JTextArea iplChampion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox11;
    private javax.swing.JComboBox<String> jComboBox12;
    private javax.swing.JComboBox<String> jComboBox13;
    private javax.swing.JComboBox<String> jComboBox14;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JComboBox<String> jComboBox_bwl_season;
    private javax.swing.JComboBox<String> jComboTeam;
    private javax.swing.JComboBox<String> jComboYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane30;
    private javax.swing.JScrollPane jScrollPane31;
    private javax.swing.JScrollPane jScrollPane32;
    private javax.swing.JScrollPane jScrollPane33;
    private javax.swing.JScrollPane jScrollPane34;
    private javax.swing.JScrollPane jScrollPane35;
    private javax.swing.JScrollPane jScrollPane36;
    private javax.swing.JScrollPane jScrollPane37;
    private javax.swing.JScrollPane jScrollPane38;
    private javax.swing.JScrollPane jScrollPane39;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane40;
    private javax.swing.JScrollPane jScrollPane41;
    private javax.swing.JScrollPane jScrollPane42;
    private javax.swing.JScrollPane jScrollPane43;
    private javax.swing.JScrollPane jScrollPane44;
    private javax.swing.JScrollPane jScrollPane45;
    private javax.swing.JScrollPane jScrollPane46;
    private javax.swing.JScrollPane jScrollPane47;
    private javax.swing.JScrollPane jScrollPane48;
    private javax.swing.JScrollPane jScrollPane49;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane50;
    private javax.swing.JScrollPane jScrollPane51;
    private javax.swing.JScrollPane jScrollPane52;
    private javax.swing.JScrollPane jScrollPane53;
    private javax.swing.JScrollPane jScrollPane54;
    private javax.swing.JScrollPane jScrollPane55;
    private javax.swing.JScrollPane jScrollPane56;
    private javax.swing.JScrollPane jScrollPane57;
    private javax.swing.JScrollPane jScrollPane58;
    private javax.swing.JScrollPane jScrollPane59;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane60;
    private javax.swing.JScrollPane jScrollPane61;
    private javax.swing.JScrollPane jScrollPane62;
    private javax.swing.JScrollPane jScrollPane63;
    private javax.swing.JScrollPane jScrollPane64;
    private javax.swing.JScrollPane jScrollPane65;
    private javax.swing.JScrollPane jScrollPane66;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea10;
    private javax.swing.JTextArea jTextArea11;
    private javax.swing.JTextArea jTextArea12;
    private javax.swing.JTextArea jTextArea13;
    private javax.swing.JTextArea jTextArea14;
    private javax.swing.JTextArea jTextArea15;
    private javax.swing.JTextArea jTextArea16;
    private javax.swing.JTextArea jTextArea17;
    private javax.swing.JTextArea jTextArea18;
    private javax.swing.JTextArea jTextArea19;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea20;
    private javax.swing.JTextArea jTextArea21;
    private javax.swing.JTextArea jTextArea22;
    private javax.swing.JTextArea jTextArea23;
    private javax.swing.JTextArea jTextArea24;
    private javax.swing.JTextArea jTextArea25;
    private javax.swing.JTextArea jTextArea26;
    private javax.swing.JTextArea jTextArea27;
    private javax.swing.JTextArea jTextArea28;
    private javax.swing.JTextArea jTextArea29;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea30;
    private javax.swing.JTextArea jTextArea31;
    private javax.swing.JTextArea jTextArea32;
    private javax.swing.JTextArea jTextArea33;
    private javax.swing.JTextArea jTextArea34;
    private javax.swing.JTextArea jTextArea35;
    private javax.swing.JTextArea jTextArea36;
    private javax.swing.JTextArea jTextArea37;
    private javax.swing.JTextArea jTextArea38;
    private javax.swing.JTextArea jTextArea39;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea40;
    private javax.swing.JTextArea jTextArea41;
    private javax.swing.JTextArea jTextArea42;
    private javax.swing.JTextArea jTextArea43;
    private javax.swing.JTextArea jTextArea44;
    private javax.swing.JTextArea jTextArea45;
    private javax.swing.JTextArea jTextArea46;
    private javax.swing.JTextArea jTextArea47;
    private javax.swing.JTextArea jTextArea48;
    private javax.swing.JTextArea jTextArea49;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea50;
    private javax.swing.JTextArea jTextArea51;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextArea jTextArea8;
    private javax.swing.JTextArea jTextArea9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField40;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField43;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTabbedPane mainTabPane;
    private javax.swing.JButton matchStatBtn;
    private javax.swing.JTextArea matchesPlayed;
    private javax.swing.JButton maxBtn;
    private javax.swing.JButton minBtn;
    private javax.swing.JTextArea playerOfMatch;
    private javax.swing.JButton playerOfMatchBtn;
    private javax.swing.JRadioButton sessionRadio;
    private javax.swing.JTextField showDataLabel;
    private javax.swing.JTextArea teamArea;
    private javax.swing.JRadioButton teamPrRd1;
    private javax.swing.JRadioButton teamPrRd2;
    private javax.swing.JRadioButton teamRadio;
    private javax.swing.JButton themeBtn;
    private javax.swing.JComboBox<String> themeSelector;
    private javax.swing.JRadioButton tossRadio;
    private javax.swing.JTextArea tossesWon;
    private javax.swing.JButton tossesWonBtn;
    private javax.swing.JTextField whichGuest;
    private javax.swing.JTextArea winnerRun;
    private javax.swing.JButton winnerRunBtn;
    private javax.swing.JTextArea winnerWicket;
    // End of variables declaration//GEN-END:variables
}
